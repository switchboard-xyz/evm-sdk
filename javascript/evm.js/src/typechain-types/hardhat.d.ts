/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Admin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Admin__factory>;
    getContractFactory(
      name: "Aggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Aggregator__factory>;
    getContractFactory(
      name: "AttestationQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttestationQueue__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "ISwitchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwitchboard__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondInit__factory>;
    getContractFactory(
      name: "Enclave",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Enclave__factory>;
    getContractFactory(
      name: "ErrorLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorLib__factory>;
    getContractFactory(
      name: "FunctionCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FunctionCall__factory>;
    getContractFactory(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oracle__factory>;
    getContractFactory(
      name: "OracleQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleQueue__factory>;
    getContractFactory(
      name: "Permission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permission__factory>;
    getContractFactory(
      name: "SbFunction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SbFunction__factory>;
    getContractFactory(
      name: "SbFunctionView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SbFunctionView__factory>;
    getContractFactory(
      name: "Switchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Switchboard__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "Switchboard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Switchboard__factory>;

    getContractAt(
      name: "Admin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Admin>;
    getContractAt(
      name: "Aggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Aggregator>;
    getContractAt(
      name: "AttestationQueue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AttestationQueue>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "ISwitchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwitchboard>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "DiamondInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondInit>;
    getContractAt(
      name: "Enclave",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Enclave>;
    getContractAt(
      name: "ErrorLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorLib>;
    getContractAt(
      name: "FunctionCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FunctionCall>;
    getContractAt(
      name: "Oracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Oracle>;
    getContractAt(
      name: "OracleQueue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleQueue>;
    getContractAt(
      name: "Permission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permission>;
    getContractAt(
      name: "SbFunction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SbFunction>;
    getContractAt(
      name: "SbFunctionView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SbFunctionView>;
    getContractAt(
      name: "Switchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Switchboard>;
    getContractAt(
      name: "ECDSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "Switchboard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Switchboard>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
