/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Aggregator,
  AggregatorInterface,
} from "../../aggregator/Aggregator";

const _abi = [
  {
    inputs: [],
    name: "AggregatorAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "AggregatorDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSamples",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AggregatorAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AggregatorFundEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "intervalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "balanceLeftForInterval",
        type: "uint256",
      },
    ],
    name: "AggregatorIntervalRefreshed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "AggregatorRead",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "varianceThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minJobResults",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "forceReportPeriod",
        type: "uint256",
      },
    ],
    name: "AggregatorResponseSettingsUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "AggregatorSaveResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AggregatorUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AggregatorWithdrawEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OraclePayoutEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "aggregatorEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "aggregatorEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
    ],
    name: "aggregators",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "oracleId",
                type: "address",
              },
            ],
            internalType: "struct AggregatorLib.Result",
            name: "latestResult",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minUpdateDelaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOracleResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minJobResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceReportPeriod",
                type: "uint256",
              },
            ],
            internalType: "struct AggregatorLib.AggregatorConfig",
            name: "config",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "jobsHash",
            type: "string",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceLeftForInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextIntervalRefreshTime",
            type: "uint256",
          },
          {
            internalType: "uint80",
            name: "intervalId",
            type: "uint80",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "historyEnabled",
            type: "bool",
          },
        ],
        internalType: "struct AggregatorLib.Aggregator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minUpdateDelaySeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOracleResults",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "jobsHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "varianceThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minJobResults",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forceReportPeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enableHistory",
        type: "bool",
      },
    ],
    name: "createAggregator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAggregatorsByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "oracleId",
                type: "address",
              },
            ],
            internalType: "struct AggregatorLib.Result",
            name: "latestResult",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minUpdateDelaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOracleResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minJobResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceReportPeriod",
                type: "uint256",
              },
            ],
            internalType: "struct AggregatorLib.AggregatorConfig",
            name: "config",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "jobsHash",
            type: "string",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceLeftForInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextIntervalRefreshTime",
            type: "uint256",
          },
          {
            internalType: "uint80",
            name: "intervalId",
            type: "uint80",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "historyEnabled",
            type: "bool",
          },
        ],
        internalType: "struct AggregatorLib.Aggregator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAggregators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "oracleId",
                type: "address",
              },
            ],
            internalType: "struct AggregatorLib.Result",
            name: "latestResult",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minUpdateDelaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOracleResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minJobResults",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceReportPeriod",
                type: "uint256",
              },
            ],
            internalType: "struct AggregatorLib.AggregatorConfig",
            name: "config",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "jobsHash",
            type: "string",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceLeftForInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextIntervalRefreshTime",
            type: "uint256",
          },
          {
            internalType: "uint80",
            name: "intervalId",
            type: "uint80",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "historyEnabled",
            type: "bool",
          },
        ],
        internalType: "struct AggregatorLib.Aggregator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
    ],
    name: "getCurrentIntervalId",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "intervalId",
        type: "uint80",
      },
    ],
    name: "getIntervalResult",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "medianTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
    ],
    name: "latestResult",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "ids",
        type: "address[]",
      },
      {
        internalType: "int256[]",
        name: "results",
        type: "int256[]",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleIdx",
        type: "uint256",
      },
    ],
    name: "saveResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minUpdateDelaySeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOracleResults",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "jobsHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "varianceThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minJobResults",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forceReportPeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enableHistory",
        type: "bool",
      },
    ],
    name: "setAggregatorConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
    ],
    name: "viewAggregatorResults",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "oracleId",
            type: "address",
          },
        ],
        internalType: "struct AggregatorLib.Result[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorId",
        type: "address",
      },
    ],
    name: "viewLatestResult",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Aggregator__factory extends ContractFactory {
  constructor(...args: AggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Aggregator> {
    return super.deploy(overrides || {}) as Promise<Aggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Aggregator {
    return super.attach(address) as Aggregator;
  }
  override connect(signer: Signer): Aggregator__factory {
    return super.connect(signer) as Aggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregatorInterface {
    return new utils.Interface(_abi) as AggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Aggregator {
    return new Contract(address, _abi, signerOrProvider) as Aggregator;
  }
}
