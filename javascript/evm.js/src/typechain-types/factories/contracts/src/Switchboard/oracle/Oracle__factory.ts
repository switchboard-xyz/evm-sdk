/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Oracle,
  OracleInterface,
} from "../../../../../contracts/src/Switchboard/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleIdx",
        type: "uint256",
      },
    ],
    name: "OracleNotAtQueueIdx",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleNotOnQueue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "PermissionDenied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "OracleAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "OracleGC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleHeartbeat",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OracleSetConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createOracleWithId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleIdx",
        type: "uint256",
      },
    ],
    name: "oracleGarbageCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "oracleHeartbeat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "numRows",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct OracleLib.Oracle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "rotateOracleAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setOracleConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611778806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063addd50991161005b578063addd5099146100bd578063f50b5ed0146100e6578063f53b638c146100f9578063f843b8461461010c57600080fd5b806316703130146100825780634cfb17581461009757806371da68ff146100aa575b600080fd5b610095610090366004611204565b61011f565b005b6100956100a5366004611289565b6102b4565b6100956100b83660046112bc565b6103e3565b6100d06100cb3660046112e6565b61056a565b6040516100dd9190611308565b60405180910390f35b6100956100f4366004611204565b610691565b6100956101073660046112e6565b6108fd565b61009561011a3660046113c9565b610d6f565b600160006101396000805160206116e38339815191525490565b9050610183610146610e3a565b6001600160a01b031660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604090205460ff1690565b156101a15760405163887efaa560e01b815260040160405180910390fd5b8181036101c15760405163887efaa560e01b815260040160405180910390fd5b80821180156101cf57508015155b156101ed5760405163887efaa560e01b815260040160405180910390fd5b6001600160a01b03808916600090815260008051602061172383398151915260205260409020600101541615610246576040516307fefd1f60e01b81526001600160a01b03891660048201526024015b60405180910390fd5b610254888888888888610e67565b876001600160a01b0316856001600160a01b03167f794f588d9b82935f6086d1ac31de2c6bc6f36a758868e90e2e5583f8e21d30f360405160405180910390a36102aa816000805160206116e383398151915255565b5050505050505050565b600160006102ce6000805160206116e38339815191525490565b90506102db610146610e3a565b156102f95760405163887efaa560e01b815260040160405180910390fd5b8181036103195760405163887efaa560e01b815260040160405180910390fd5b808211801561032757508015155b156103455760405163887efaa560e01b815260040160405180910390fd5b600061035085610ee0565b9050600061035c610e3a565b60048301549091506001600160a01b038083169116146103aa5760048281015460405163bf89df8360e01b81526001600160a01b03918216928101929092528216602482015260440161023d565b5060010180546001600160a01b0319166001600160a01b0385161790556103dd816000805160206116e383398151915255565b50505050565b60006103ee83610ee0565b600381015490915060009061040b906001600160a01b0316610f10565b6001830154909150600160a01b900460ff166000036104565760038201546040516366ae958360e11b81526001600160a01b039182166004820152908516602482015260440161023d565b836001600160a01b03168160020184815481106104755761047561143f565b6000918252602090912001546001600160a01b0316146104c8576003820154604051636dddf07760e01b81526001600160a01b03918216600482015290851660248201526044810184905260640161023d565b60018201546001600160a01b03163314806104fd57504281600601546104ed86610ee0565b600201546104fb919061146b565b105b156103dd5760038201546040516001600160a01b03918216918616907f687acf5b3ff62e7f43ce582f87921873586d32d7e139aea211bdaaf4e6a2da7890600090a38261054b856000610f26565b6003830154610563906001600160a01b031682610f6e565b5050505050565b6040805160c081018252606080825260006020830181905292820183905281018290526080810182905260a08101919091526105a582610ee0565b6040518060c00160405290816000820180546105c090611484565b80601f01602080910402602001604051908101604052809291908181526020018280546105ec90611484565b80156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050918352505060018201546001600160a01b038082166020840152600160a01b90910460ff1660408301526002830154606083015260038301548116608083015260049092015490911660a09091015292915050565b600160006106ab6000805160206116e38339815191525490565b90506106b8610146610e3a565b156106d65760405163887efaa560e01b815260040160405180910390fd5b8181036106f65760405163887efaa560e01b815260040160405180910390fd5b808211801561070457508015155b156107225760405163887efaa560e01b815260040160405180910390fd5b600061072d89610ee0565b6040518060c001604052908160008201805461074890611484565b80601f016020809104026020016040519081016040528092919081815260200182805461077490611484565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b505050918352505060018201546001600160a01b03808216602080850191909152600160a01b90920460ff16604084015260028401546060840152600384015481166080840152600490930154831660a09092019190915282015191925016331461085657602081015160405163bf89df8360e01b81526001600160a01b03909116600482015233602482015260440161023d565b604081015160ff161561087f5760405163d14e7c9b60e01b81526001600482015260240161023d565b61088d898989898989610e67565b846001600160a01b0316866001600160a01b03168a6001600160a01b03167f11bfe3de42e58193667c4e9b7f777bef366bdacd598287208280816889b6d7eb8b8b896040516108de939291906114be565b60405180910390a4506102aa816000805160206116e383398151915255565b600160006109176000805160206116e38339815191525490565b9050610924610146610e3a565b156109425760405163887efaa560e01b815260040160405180910390fd5b8181036109625760405163887efaa560e01b815260040160405180910390fd5b808211801561097057508015155b1561098e5760405163887efaa560e01b815260040160405180910390fd5b600061099984610ee0565b60038101549091506000906109b6906001600160a01b0316610f10565b60038301546001600160a01b031660008181527f2595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cc6020526040812092935090610a529088610a038461109e565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b90506000610a5e610e3a565b60018601549091506001600160a01b03808316911614610aaa57600185015460405163bf89df8360e01b81526001600160a01b039182166004820152908216602482015260440161023d565b600283015460ff1615610b8a5782546040516302eab4ff60e31b81523091631755a7f891610aed9185916001600160a01b039091169060018901906004016114ff565b60006040518083038186803b158015610b0557600080fd5b505afa158015610b19573d6000803e3d6000fd5b505050506002830154610100900460ff168015610b34575081155b15610b855760038501546001600160a01b031688610b52600061109e565b60405163e65cb5d360e01b81526001600160a01b039384166004820152929091166024830152604482015260640161023d565b610ba8565b81610ba85760038501546001600160a01b031688610b52600061109e565b610bd9886001600160a01b031660009081526000805160206117238339815191526020526040902042600290910155565b6001850154600160a01b900460ff16600003610c4e57610bfa886001610f26565b60038501546001600160a01b039081166000908152600080516020611703833981519152602090815260408220600201805460018101825590835291200180546001600160a01b031916918a169190911790555b6000846007015490506000856002018281548110610c6e57610c6e61143f565b60009182526020909120015460038801546001600160a01b039182169250610c9691166110be565b428660060154610ca583610ee0565b60020154610cb3919061146b565b1015610d195760038701546040516001600160a01b03918216918316907f687acf5b3ff62e7f43ce582f87921873586d32d7e139aea211bdaaf4e6a2da7890600090a3610d01816000610f26565b6003870154610d19906001600160a01b031683610f6e565b6040516001600160a01b038b16907f15a179eca628a67b2d29c6f8d7fdb865577835cb853321115d06081171f812e290600090a250505050505050610d6a816000805160206116e383398151915255565b505050565b60016000610d896000805160206116e38339815191525490565b9050610d96610146610e3a565b15610db45760405163887efaa560e01b815260040160405180910390fd5b818103610dd45760405163887efaa560e01b815260040160405180910390fd5b8082118015610de257508015155b15610e005760405163887efaa560e01b815260040160405180910390fd5b6000610e0a611124565b9050610e1a81898989898961011f565b50610e31816000805160206116e383398151915255565b50505050505050565b3360143610801590610e5457506001600160a01b03811630145b15610e64575060131936013560601c5b90565b6001600160a01b03861660009081526000805160206117238339815191526020526040902080610e988688836115ca565b506001810180546001600160a01b039586166001600160a01b031991821617909155600382018054948616948216949094179093556004018054919093169116179055505050565b60006000805160206117238339815191525b6001600160a01b039092166000908152602092909252506040902090565b6000600080516020611703833981519152610ef2565b6001600160a01b0391909116600090815260008051602061172383398151915260205260409020600101805460ff909216600160a01b0260ff60a01b19909216919091179055565b6001600160a01b0382166000908152600080516020611703833981519152602081905260408220600281015491929091610faa9060019061168a565b9050816002018181548110610fc157610fc161143f565b6000918252602090912001546002830180546001600160a01b039092169186908110610fef57610fef61143f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816002018054806110305761103061169d565b600082815260209020810160001990810180546001600160a01b0319169055019055600282015460078301541061106857600061106e565b81600701545b6007830155600282015460088301541061108957600061108f565b81600801545b82600801819055505050505050565b6000808260028111156110b3576110b36116b3565b6001901b9392505050565b6001600160a01b038116600090815260008051602061170383398151915260208190526040822060078101805492939192916110f9836116c9565b9091555050600281015460078201541061111457600061111a565b80600701545b6007909101555050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090611156906116c9565b918290555061116660014361168a565b40604051602001611181929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b80356001600160a01b03811681146111b657600080fd5b919050565b60008083601f8401126111cd57600080fd5b50813567ffffffffffffffff8111156111e557600080fd5b6020830191508360208285010111156111fd57600080fd5b9250929050565b60008060008060008060a0878903121561121d57600080fd5b6112268761119f565b9550602087013567ffffffffffffffff81111561124257600080fd5b61124e89828a016111bb565b909650945061126190506040880161119f565b925061126f6060880161119f565b915061127d6080880161119f565b90509295509295509295565b6000806040838503121561129c57600080fd5b6112a58361119f565b91506112b36020840161119f565b90509250929050565b600080604083850312156112cf57600080fd5b6112d88361119f565b946020939093013593505050565b6000602082840312156112f857600080fd5b6113018261119f565b9392505050565b60006020808352835160c08285015280518060e086015260005b8181101561133f5782810184015186820161010001528301611322565b506101009150600082828701015282860151925061136860408601846001600160a01b03169052565b604086015160ff811660608701529250606086015160808601526080860151925061139e60a08601846001600160a01b03169052565b60a08601516001600160a01b03811660c08701529250601f01601f1916939093019092019392505050565b6000806000806000608086880312156113e157600080fd5b853567ffffffffffffffff8111156113f857600080fd5b611404888289016111bb565b909650945061141790506020870161119f565b92506114256040870161119f565b91506114336060870161119f565b90509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561147e5761147e611455565b92915050565b600181811c9082168061149857607f821691505b6020821081036114b857634e487b7160e01b600052602260045260246000fd5b50919050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6001600160a01b03848116825283166020808301919091526060604083018190528354908301819052600084815282812090929091608085019190845b818110156115585784548452600194850194938301930161153c565b509198975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f821115610d6a57600081815260208120601f850160051c810160208610156115a35750805b601f850160051c820191505b818110156115c2578281556001016115af565b505050505050565b67ffffffffffffffff8311156115e2576115e2611566565b6115f6836115f08354611484565b8361157c565b6000601f84116001811461162a57600085156116125750838201355b600019600387901b1c1916600186901b178355610563565b600083815260209020601f19861690835b8281101561165b578685013582556020948501946001909201910161163b565b50868210156116785760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8181038181111561147e5761147e611455565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000600182016116db576116db611455565b506001019056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b62595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cbd5e768d90a086ea7b33932448c5752ff84f596734910969a9da74dd838b9b975a26469706673582212203d805d1c4fc02dba6f21caa411535310fbc55cd3a6a0809d9fa8dd92cf08566264736f6c63430008110033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oracle> {
    return super.deploy(overrides || {}) as Promise<Oracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  override connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
