/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OracleQueue,
  OracleQueueInterface,
} from "../../../../../contracts/src/Switchboard/oracleQueue/OracleQueue";

const _abi = [
  {
    inputs: [],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    name: "OracleQueueAccountInit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToOracleQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "bool",
        name: "unpermissionedFeedsEnabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oracleTimeout",
        type: "uint256",
      },
    ],
    name: "createOracleQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "getOracleIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getOracleQueueAllowedMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getOracles",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "oracleQueues",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "oracles",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "unpermissionedFeedsEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct OracleQueueLib.OracleQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "queueAttestationConfigs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "attestationQueueId",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "bool",
            name: "requireValidQuote",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireHeartbeatPermission",
            type: "bool",
          },
        ],
        internalType: "struct OracleQueueLib.AttestationConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromOracleQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "attestationQueueId",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "mrEnclaves",
        type: "bytes32[]",
      },
      {
        internalType: "bool",
        name: "requireValidQuote",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireHeartbeatPermission",
        type: "bool",
      },
    ],
    name: "setOracleQueueAttestationConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "bool",
        name: "unpermissionedFeedsEnabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oracleTimeout",
        type: "uint256",
      },
    ],
    name: "setOracleQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setOracleQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506117ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638e749281116100715780638e74928114610125578063b659041114610145578063d87dd0ac14610158578063e767565114610179578063f04b0f591461018c578063f2378e88146101ac57600080fd5b806301fc1ba2146100ae578063262955d8146100c357806351a426d8146100d65780636ddc9122146100e957806388033af514610112575b600080fd5b6100c16100bc366004611055565b6101cc565b005b6100c16100d13660046110a2565b610233565b6100c16100e43660046110a2565b610296565b6100fc6100f73660046110cc565b6103e4565b60405161010991906110ee565b60405180910390f35b6100c1610120366004611187565b6104c1565b6101386101333660046110cc565b61052a565b604051610109919061128a565b6100c1610153366004611320565b6105b1565b61016b6101663660046110cc565b61061d565b604051908152602001610109565b6100c16101873660046113b0565b61081e565b61019f61019a3660046110cc565b6108ce565b6040516101099190611430565b6101bf6101ba3660046110cc565b610960565b60405161010991906114f2565b600060008051602061179a8339815191526001600160a01b03808716600090815260208390526040902060018101549293509116331461021f57604051636f6a1b8760e11b815260040160405180910390fd5b61022b86868686610b37565b505050505050565b600060008051602061179a8339815191526001600160a01b03808516600090815260208390526040902060018101549293509116331461028657604051636f6a1b8760e11b815260040160405180910390fd5b6102908484610bbe565b50505050565b600160006102b060008051602061175a8339815191525490565b9050806000036102d0576102d08260008051602061175a83398151915255565b8181036102f05760405163887efaa560e01b815260040160405180910390fd5b801580159061030e575060008051602061175a833981519152548216155b1561032c5760405163887efaa560e01b815260040160405180910390fd5b6001600160a01b038416600090815260008051602061179a833981519152602081905260408220909161035d610cc8565b60018301549091506001600160a01b0380831691161461039057604051636f6a1b8760e11b815260040160405180910390fd5b6001600160a01b038716600090815260008051602061177a83398151915260209081526040822060019081018054918201815583529120018690555050506102908160008051602061175a83398151915255565b604080516080810182526000808252606060208084018290528385018390529083018290526001600160a01b038516825260008051602061177a8339815191529052919091206040805160808101825282546001600160a01b0316815260018301805483516020828102820181019095528181529294938086019392919083018282801561049157602002820191906000526020600020905b81548152602001906001019080831161047d575b50505091835250506002919091015460ff8082161515602084015261010090910416151560409091015292915050565b600060008051602061179a8339815191526001600160a01b03808816600090815260208390526040902060018101549293509116331461051457604051636f6a1b8760e11b815260040160405180910390fd5b6105218787878787610cf5565b50505050505050565b6001600160a01b038116600090815260008051602061179a83398151915260208181526040928390206002018054845181840281018401909552808552606094928301828280156105a457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610586575b5050505050915050919050565b6001600160a01b03888116600090815260008051602061179a833981519152602081905260409091206001015490911633811461060157604051636f6a1b8760e11b815260040160405180910390fd5b6106118a8a8a8a8a8a8a8a610d85565b50505050505050505050565b600060008051602061179a83398151915281818161063a86610e0a565b608001516001600160a01b03166001600160a01b031681526020019081526020016000206040518061012001604052908160008201805461067a906115a0565b80601f01602080910402602001604051908101604052809291908181526020018280546106a6906115a0565b80156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b505050918352505060018201546001600160a01b0316602080830191909152600283018054604080518285028101850182528281529401939283018282801561076557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610747575b5050509183525050600382015460ff1615156020820152600482015460408201526005820154606082015260068201546080820152600782015460a082015260089091015460c090910152905060005b81604001515181101561081257846001600160a01b0316826040015182815181106107e2576107e26115da565b60200260200101516001600160a01b03160361080057949350505050565b8061080a81611606565b9150506107b5565b50600019949350505050565b6000610828610f4e565b6001600160a01b03808216600090815260008051602061179a83398151915260205260409020600101549192501615610874576040516363ed528560e01b815260040160405180910390fd5b6108848189898989898989610d85565b806001600160a01b0316866001600160a01b03167ffd73b4fde809de38770a6f0170160c2c1a4fb8f80c80d33658e98140d64966f160405160405180910390a35050505050505050565b6001600160a01b038116600090815260008051602061177a833981519152602090815260409182902060018101805484518185028101850190955280855260609460008051602061179a833981519152949092919083018282801561095257602002820191906000526020600020905b81548152602001906001019080831161093e575b505050505092505050919050565b6109ba6040518061012001604052806060815260200160006001600160a01b031681526020016060815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038216600090815260008051602061179a83398151915260205260409020604051806101200160405290816000820180546109fb906115a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a27906115a0565b8015610a745780601f10610a4957610100808354040283529160200191610a74565b820191906000526020600020905b815481529060010190602001808311610a5757829003601f168201915b505050918352505060018201546001600160a01b03166020808301919091526002830180546040805182850281018501825282815294019392830182828015610ae657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ac8575b5050509183525050600382015460ff1615156020820152600482015460408201526005820154606082015260068201546080820152600782015460a082015260089091015460c09091015292915050565b7fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb962278115610b8c576001600160a01b03808616600090815260208381526040808320938816835292905220805484179055610bb7565b6001600160a01b03808616600090815260208381526040808320938816835292905220805484191690555b5050505050565b6001600160a01b038216600090815260008051602061177a8339815191526020526040812060008051602061179a83398151915291805b6001830154811015610c415784836001018281548110610c1757610c176115da565b906000526020600020015403610c2f57809150610c41565b80610c3981611606565b915050610bf5565b50600182810154600091610c549161161f565b9050826001018181548110610c6b57610c6b6115da565b9060005260206000200154836001018381548110610c8b57610c8b6115da565b60009182526020909120015560018301805480610caa57610caa611638565b60019003818190600052602060002001600090559055505050505050565b3360143610801590610ce257506001600160a01b03811630145b15610cf2575060131936013560601c5b90565b6001600160a01b03858116600090815260008051602061177a8339815191526020908152604090912080546001600160a01b031916928716929092178255845160008051602061179a8339815191529291610d57916001840191880190610fc9565b50600201805461ffff191693151561ff00191693909317610100921515929092029190911790915550505050565b6001600160a01b038816600090815260008051602061179a8339815191526020819052604090912080610db9898b83611699565b506001810180546001600160a01b0319166001600160a01b0398909816979097179096555060038501805460ff19169415159490941790935560048401919091556005830155600690910155505050565b6040805160a0810182526060808252600060208301819052928201839052810182905260808101919091527fd5e768d90a086ea7b33932448c5752ff84f596734910969a9da74dd838b9b9756001600160a01b0383166000908152602091909152604090819020815160a08101909252805482908290610e89906115a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb5906115a0565b8015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b505050918352505060018201546001600160a01b038082166020840152600160a01b90910460ff1660408301526002830154606083015260039092015490911660809091015292915050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090610f8090611606565b9182905550610f9060014361161f565b40604051602001610fab929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b828054828255906000526020600020908101928215611004579160200282015b82811115611004578251825591602001919060010190610fe9565b50611010929150611014565b5090565b5b808211156110105760008155600101611015565b80356001600160a01b038116811461104057600080fd5b919050565b8035801515811461104057600080fd5b6000806000806080858703121561106b57600080fd5b61107485611029565b935061108260208601611029565b92506040850135915061109760608601611045565b905092959194509250565b600080604083850312156110b557600080fd5b6110be83611029565b946020939093013593505050565b6000602082840312156110de57600080fd5b6110e782611029565b9392505050565b602080825282516001600160a01b0316828201528281015160806040840152805160a0840181905260009291820190839060c08601905b808310156111455783518252928401926001929092019190840190611125565b5060408701511515606087015260608701519350611167608087018515159052565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561119f57600080fd5b6111a886611029565b945060206111b7818801611029565b9450604087013567ffffffffffffffff808211156111d457600080fd5b818901915089601f8301126111e857600080fd5b8135818111156111fa576111fa611171565b8060051b604051601f19603f8301168101818110858211171561121f5761121f611171565b60405291825284820192508381018501918c83111561123d57600080fd5b938501935b8285101561125b57843584529385019392850192611242565b80985050505050505061127060608701611045565b915061127e60808701611045565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156112cb5783516001600160a01b0316835292840192918401916001016112a6565b50909695505050505050565b60008083601f8401126112e957600080fd5b50813567ffffffffffffffff81111561130157600080fd5b60208301915083602082850101111561131957600080fd5b9250929050565b60008060008060008060008060e0898b03121561133c57600080fd5b61134589611029565b9750602089013567ffffffffffffffff81111561136157600080fd5b61136d8b828c016112d7565b9098509650611380905060408a01611029565b945061138e60608a01611045565b979a96995094979396956080850135955060a08501359460c001359350915050565b600080600080600080600060c0888a0312156113cb57600080fd5b873567ffffffffffffffff8111156113e257600080fd5b6113ee8a828b016112d7565b9098509650611401905060208901611029565b945061140f60408901611045565b969995985093966060810135956080820135955060a0909101359350915050565b6020808252825182820181905260009190848201906040850190845b818110156112cb5783518352928401929184019160010161144c565b6000815180845260005b8181101561148e57602081850181015186830182015201611472565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156114e75781516001600160a01b0316875295820195908201906001016114c2565b509495945050505050565b6020815260008251610120806020850152611511610140850183611468565b9150602085015161152d60408601826001600160a01b03169052565b506040850151848303601f1901606086015261154983826114ae565b925050606085015161155f608086018215159052565b50608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100818187015280870151838701525050508091505092915050565b600181811c908216806115b457607f821691505b6020821081036115d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611618576116186115f0565b5060010190565b81810381811115611632576116326115f0565b92915050565b634e487b7160e01b600052603160045260246000fd5b601f82111561169457600081815260208120601f850160051c810160208610156116755750805b601f850160051c820191505b8181101561022b57828155600101611681565b505050565b67ffffffffffffffff8311156116b1576116b1611171565b6116c5836116bf83546115a0565b8361164e565b6000601f8411600181146116f957600085156116e15750838201355b600019600387901b1c1916600186901b178355610bb7565b600083815260209020601f19861690835b8281101561172a578685013582556020948501946001909201910161170a565b50868210156117475760001960f88860031b161c19848701351681555b505060018560011b018355505050505056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b62595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cc2595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cba26469706673582212204a3d8f343dd1bc910ab6b17c763229c9f2197dd49195207af210dbb90d41389c64736f6c63430008110033";

type OracleQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleQueue__factory extends ContractFactory {
  constructor(...args: OracleQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OracleQueue> {
    return super.deploy(overrides || {}) as Promise<OracleQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OracleQueue {
    return super.attach(address) as OracleQueue;
  }
  override connect(signer: Signer): OracleQueue__factory {
    return super.connect(signer) as OracleQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleQueueInterface {
    return new utils.Interface(_abi) as OracleQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleQueue {
    return new Contract(address, _abi, signerOrProvider) as OracleQueue;
  }
}
