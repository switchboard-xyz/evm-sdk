/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AttestationQueue,
  AttestationQueueInterface,
} from "../../../../../contracts/src/Switchboard/attestationQueue/AttestationQueue";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attestationQueueId",
        type: "address",
      },
    ],
    name: "AttestationQueueAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "MrEnclaveNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "AddMrEnclave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "AttestationQueueAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "AttestationQueuePermissionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AttestationQueueSetConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "RemoveMrEnclave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "attestationQueueHasMrEnclave",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "attestationQueues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "data",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxEnclaveVerificationAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowAuthorityOverrideAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConsecutiveFunctionFailures",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireAuthorityHeartbeatPermission",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireUsagePermissions",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "enclaveTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct AttestationQueueLib.AttestationQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "createAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getAttestationQueueMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "getEnclaveIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getEnclaves",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "setAttestationQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setAttestationQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a64806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638bb3048c116100665780638bb3048c14610145578063a77a07d314610165578063ad435b9d14610178578063de7768511461018b578063f7d483071461019e57600080fd5b8063083f30cf146100a35780630f3bc418146100b857806321fb3bbc146100e1578063340dd88b1461010257806363fcd77114610122575b600080fd5b6100b66100b136600461160c565b6101b1565b005b6100cb6100c6366004611636565b6103cf565b6040516100d89190611658565b60405180910390f35b6100f46100ef366004611636565b61054f565b6040519081526020016100d8565b610115610110366004611636565b61073d565b6040516100d891906116e0565b61013561013036600461160c565b6108c2565b60405190151581526020016100d8565b610158610153366004611636565b610a52565b6040516100d89190611723565b6100b6610173366004611825565b610c2b565b6100b661018636600461160c565b610d9c565b6100b6610199366004611872565b610fc7565b6100b66101ac3660046118f0565b61112c565b600160006101cb600080516020611a0f8339815191525490565b90506102156101d8611299565b6001600160a01b031660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604090205460ff1690565b156102335760405163887efaa560e01b815260040160405180910390fd5b8181036102535760405163887efaa560e01b815260040160405180910390fd5b808211801561026157508015155b1561027f5760405163887efaa560e01b815260040160405180910390fd5b60006000805160206119ef8339815191526001600160a01b0386811660009081526020839052604090208054929350911633146102e857805460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b6103448160050180548060200260200160405190810160405280929190818152602001828054801561033957602002820191906000526020600020905b815481526020019060010190808311610325575b5050505050866112c6565b6103645760405163d14e7c9b60e01b8152600160048201526024016102df565b61036e8686611319565b856001600160a01b03167f70c486974a3cebaf9593da3dc40af01ae059a47c48b9caff38ef2cc5180dc13e866040516103a991815260200190565b60405180910390a250506103c981600080516020611a0f83398151915255565b50505050565b606060006000805160206119ef8339815191526001600160a01b0380851660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561046857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161044a575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156104de57602002820191906000526020600020905b8154815260200190600101908083116104ca575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c909301549101520151949350505050565b60006000805160206119ef83398151915281818161056c8661140a565b600201546001600160a01b039081168252602080830193909352604091820160002082516101c08101845281549092168252600181018054845181870281018701909552808552929491938583019390928301828280156105f657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105d8575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561066c57602002820191906000526020600020905b815481526020019060010190808311610658575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c90920154910152905060005b81602001515181101561073157846001600160a01b03168260200151828151811061070157610701611980565b60200260200101516001600160a01b03160361071f57949350505050565b80610729816119ac565b9150506106d4565b50600019949350505050565b606060006000805160206119ef8339815191526001600160a01b0380851660009081526020838152604080832081516101c0810183528154909516855260018101805483518186028101860190945280845296975093959093858401939091908301828280156107d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107b8575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561084c57602002820191906000526020600020905b815481526020019060010190808311610838575b505050918352505060068201546020808301919091526007830154604083015260088301546060830152600983015460ff808216151560808501526101009182900416151560a0840152600a84015460c0840152600b84015460e0840152600c9093015492909101919091520151949350505050565b6000806000805160206119ef8339815191526001600160a01b0380861660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561095a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093c575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156109d057602002820191906000526020600020905b8154815260200190600101908083116109bc575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c90930154910152810151909150610a4790856112c6565b925050505b92915050565b610ad1604051806101c0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b610ada8261144c565b604080516101c08101825282546001600160a01b03168152600183018054835160208281028201810190955281815292949380860193929190830182828015610b4c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b2e575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015610bc257602002820191906000526020600020905b815481526020019060010190808311610bae575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c9092015491015292915050565b60016000610c45600080516020611a0f8339815191525490565b9050610c526101d8611299565b15610c705760405163887efaa560e01b815260040160405180910390fd5b818103610c905760405163887efaa560e01b815260040160405180910390fd5b8082118015610c9e57508015155b15610cbc5760405163887efaa560e01b815260040160405180910390fd5b6000610cc78761144c565b90506000610cd3611299565b82549091506001600160a01b03808316911614610d1957815460405163bf89df8360e01b81526001600160a01b03918216600482015290821660248201526044016102df565b610d2588888888611462565b866001600160a01b0316816001600160a01b0316896001600160a01b03167f09b850e51622e6c8fa8a3ad5cffdc4903c7a12e121e9ebb5fa3ac93782588ff889604051610d7491815260200190565b60405180910390a45050610d9481600080516020611a0f83398151915255565b505050505050565b60016000610db6600080516020611a0f8339815191525490565b9050610dc36101d8611299565b15610de15760405163887efaa560e01b815260040160405180910390fd5b818103610e015760405163887efaa560e01b815260040160405180910390fd5b8082118015610e0f57508015155b15610e2d5760405163887efaa560e01b815260040160405180910390fd5b6001600160a01b03841660009081526000805160206119ef8339815191526020819052604082209091610e5e611299565b82549091506001600160a01b03808316911614610ea457815460405163bf89df8360e01b81526001600160a01b03918216600482015290821660248201526044016102df565b610f0082600501805480602002602001604051908101604052809291908181526020018280548015610ef557602002820191906000526020600020905b815481526020019060010190808311610ee1575b5050505050876112c6565b15610f30576040516393fc1a1360e01b81526001600160a01b0388166004820152602481018790526044016102df565b6001600160a01b03871660009081526000805160206119ef8339815191526020908152604082206005018054600181018255908352912001869055866001600160a01b03167f3a51d130f8b06abddb1f2e9a84d0c1ee5da028c468f178bd42ccab055e6d15ff87604051610fa691815260200190565b60405180910390a25050506103c981600080516020611a0f83398151915255565b60016000610fe1600080516020611a0f8339815191525490565b9050610fee6101d8611299565b1561100c5760405163887efaa560e01b815260040160405180910390fd5b81810361102c5760405163887efaa560e01b815260040160405180910390fd5b808211801561103a57508015155b156110585760405163887efaa560e01b815260040160405180910390fd5b60006110626114e8565b6001600160a01b0380821660009081526000805160206119ef833981519152602052604090205491925016156110b657604051631179fb2560e01b81526001600160a01b03821660048201526024016102df565b6110c8818d8d8d8d8d8d8d8d8d611563565b806001600160a01b03168c6001600160a01b03167ff0beb01d51eb726cb1315c7a5f4fa8399a9a1f002a871dcefd49a43032a7d3a760405160405180910390a35061111f81600080516020611a0f83398151915255565b5050505050505050505050565b60016000611146600080516020611a0f8339815191525490565b90506111536101d8611299565b156111715760405163887efaa560e01b815260040160405180910390fd5b8181036111915760405163887efaa560e01b815260040160405180910390fd5b808211801561119f57508015155b156111bd5760405163887efaa560e01b815260040160405180910390fd5b60006000805160206119ef8339815191526001600160a01b038e8116600090815260208390526040902080549293509116331461122157805460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016102df565b6112338e8e8e8e8e8e8e8e8e8e611563565b8c6001600160a01b03168e6001600160a01b03167fec01d1a35b7be56856343a9a8db18c127f610dbfacb41d5a30fefc8ccda1c23e60405160405180910390a3505061128b81600080516020611a0f83398151915255565b505050505050505050505050565b33601436108015906112b357506001600160a01b03811630145b156112c3575060131936013560601c5b90565b6000805b835181101561130f57828482815181106112e6576112e6611980565b6020026020010151036112fd576001915050610a4c565b80611307816119ac565b9150506112ca565b5060009392505050565b6001600160a01b03821660009081526000805160206119ef83398151915260208190526040822090915b6005820154811015611403578382600501828154811061136557611365611980565b9060005260206000200154036113f157600582018054611387906001906119c5565b8154811061139757611397611980565b90600052602060002001548260050182815481106113b7576113b7611980565b600091825260209091200155600582018054806113d6576113d66119d8565b60019003818190600052602060002001600090559055611403565b806113fb816119ac565b915050611343565b5050505050565b60007f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0985b6001600160a01b039092166000908152602092909252506040902090565b60006000805160206119ef83398151915261142e565b7fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622781156114b7576001600160a01b03808616600090815260208381526040808320938816835292905220805484179055611403565b6001600160a01b03808616600090815260208381526040808320938816835292905220805484191690555050505050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b5805460009061151a906119ac565b918290555061152a6001436119c5565b40604051602001611545929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b6001600160a01b03998a1660009081526000805160206119ef8339815191526020526040902080546001600160a01b03191699909a1698909817895560028901969096556003880194909455600a8701929092556006860155600785015560098401805461ffff191691151561ff0019169190911761010092151592909202919091179055600890910155565b80356001600160a01b038116811461160757600080fd5b919050565b6000806040838503121561161f57600080fd5b611628836115f0565b946020939093013593505050565b60006020828403121561164857600080fd5b611651826115f0565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561169057835183529284019291840191600101611674565b50909695505050505050565b600081518084526020808501945080840160005b838110156116d55781516001600160a01b0316875295820195908201906001016116b0565b509495945050505050565b602081526000611651602083018461169c565b600081518084526020808501945080840160005b838110156116d557815187529582019590820190600101611707565b6020815261173d6020820183516001600160a01b03169052565b600060208301516101c080604085015261175b6101e085018361169c565b91506040850151606085015260608501516080850152608085015160a085015260a0850151601f198584030160c086015261179683826116f3565b92505060c085015160e085015260e08501516101008181870152808701519150506101208181870152808701519150506101406117d68187018315159052565b86015190506101606117eb8682018315159052565b860151610180868101919091528601516101a0808701919091529095015193019290925250919050565b8035801515811461160757600080fd5b6000806000806080858703121561183b57600080fd5b611844856115f0565b9350611852602086016115f0565b92506040850135915061186760608601611815565b905092959194509250565b60008060008060008060008060006101208a8c03121561189157600080fd5b61189a8a6115f0565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a013593506118cb60c08b01611815565b92506118d960e08b01611815565b91506101008a013590509295985092959850929598565b6000806000806000806000806000806101408b8d03121561191057600080fd5b6119198b6115f0565b995061192760208c016115f0565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b0135935061195860e08c01611815565b92506119676101008c01611815565b91506101208b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119be576119be611996565b5060010190565b81810381811115610a4c57610a4c611996565b634e487b7160e01b600052603160045260246000fdfe60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b6a2646970667358221220c05072de99831f16410d52518186f2db828071a107008b8564bcb228c0ced1bd64736f6c63430008110033";

type AttestationQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationQueue__factory extends ContractFactory {
  constructor(...args: AttestationQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationQueue> {
    return super.deploy(overrides || {}) as Promise<AttestationQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationQueue {
    return super.attach(address) as AttestationQueue;
  }
  override connect(signer: Signer): AttestationQueue__factory {
    return super.connect(signer) as AttestationQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationQueueInterface {
    return new utils.Interface(_abi) as AttestationQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationQueue {
    return new Contract(address, _abi, signerOrProvider) as AttestationQueue;
  }
}
