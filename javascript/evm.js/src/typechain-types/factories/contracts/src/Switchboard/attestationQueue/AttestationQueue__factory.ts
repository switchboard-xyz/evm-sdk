/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AttestationQueue,
  AttestationQueueInterface,
} from "../../../../../contracts/src/Switchboard/attestationQueue/AttestationQueue";

const _abi = [
  {
    inputs: [],
    name: "AttestationQueueAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "AddMrEnclave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    name: "AttestationQueueAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "RemoveMrEnclave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "attestationQueueHasMrEnclave",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "attestationQueues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "data",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxQuoteVerificationAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowAuthorityOverrideAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConsecutiveFunctionFailures",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireAuthorityHeartbeatPermission",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireUsagePermissions",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "quoteTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct AttestationQueueLib.AttestationQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxQuoteVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "createAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "quoteId",
        type: "address",
      },
    ],
    name: "getQuoteIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxQuoteVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "setAttestationQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setAttestationQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111b4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ad435b9d1161005b578063ad435b9d146100fd578063cd7bed7114610110578063de77685114610131578063f7d483071461014457600080fd5b8063083f30cf1461008d57806363fcd771146100a25780638bb3048c146100ca578063a77a07d3146100ea575b600080fd5b6100a061009b366004610dd3565b610157565b005b6100b56100b0366004610dd3565b610273565b60405190151581526020015b60405180910390f35b6100dd6100d8366004610dfd565b610403565b6040516100c19190610e93565b6100a06100f8366004610f95565b6105dc565b6100a061010b366004610dd3565b610640565b61012361011e366004610dfd565b61077e565b6040519081526020016100c1565b6100a061013f366004610fe2565b61096c565b6100a0610152366004611060565b610a1d565b600060008051602061115f8339815191526001600160a01b0384811660009081526020839052604090208054929350911633146101a757604051636f6a1b8760e11b815260040160405180910390fd5b610203816005018054806020026020016040519081016040528092919081815260200182805480156101f857602002820191906000526020600020905b8154815260200190600101908083116101e4575b505050505084610a8d565b6102205760405163a9cb9e0d60e01b815260040160405180910390fd5b61022a8484610ae0565b836001600160a01b03167f70c486974a3cebaf9593da3dc40af01ae059a47c48b9caff38ef2cc5180dc13e8460405161026591815260200190565b60405180910390a250505050565b60008060008051602061115f8339815191526001600160a01b0380861660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561030b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ed575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561038157602002820191906000526020600020905b81548152602001906001019080831161036d575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c909301549101528101519091506103f89085610a8d565b925050505b92915050565b610482604051806101c0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b61048b82610bd1565b604080516101c08101825282546001600160a01b031681526001830180548351602082810282018101909552818152929493808601939291908301828280156104fd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104df575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561057357602002820191906000526020600020905b81548152602001906001019080831161055f575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c9092015491015292915050565b600060008051602061115f8339815191526001600160a01b03808716600090815260208390526040902080549293509116331461062c57604051636f6a1b8760e11b815260040160405180910390fd5b61063886868686610c01565b505050505050565b600060008051602061115f8339815191526001600160a01b03848116600090815260208390526040902080549293509116331461069057604051636f6a1b8760e11b815260040160405180910390fd5b6106ea816005018054806020026020016040519081016040528092919081815260200182805480156101f857602002820191906000526020600020908154815260200190600101908083116101e457505050505084610a8d565b156107085760405163a9cb9e0d60e01b815260040160405180910390fd5b6001600160a01b038416600090815260008051602061115f8339815191526020908152604082206005018054600181018255908352912001839055836001600160a01b03167f3a51d130f8b06abddb1f2e9a84d0c1ee5da028c468f178bd42ccab055e6d15ff8460405161026591815260200190565b600060008051602061115f83398151915281818161079b86610c87565b600201546001600160a01b039081168252602080830193909352604091820160002082516101c081018452815490921682526001810180548451818702810187019095528085529294919385830193909283018282801561082557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610807575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561089b57602002820191906000526020600020905b815481526020019060010190808311610887575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c90920154910152905060005b81602001515181101561096057846001600160a01b031682602001518281518110610930576109306110f0565b60200260200101516001600160a01b03160361094e57949350505050565b806109588161111c565b915050610903565b50600019949350505050565b6000610976610caf565b6001600160a01b03808216600090815260008051602061115f833981519152602052604090205491925016156109bf576040516394f62ae960e01b815260040160405180910390fd5b6109d1818b8b8b8b8b8b8b8b8b610d2a565b806001600160a01b03168a6001600160a01b03167ff0beb01d51eb726cb1315c7a5f4fa8399a9a1f002a871dcefd49a43032a7d3a760405160405180910390a350505050505050505050565b600060008051602061115f8339815191526001600160a01b038c81166000908152602083905260409020805492935091163314610a6d57604051636f6a1b8760e11b815260040160405180910390fd5b610a7f8c8c8c8c8c8c8c8c8c8c610d2a565b505050505050505050505050565b6000805b8351811015610ad65782848281518110610aad57610aad6110f0565b602002602001015103610ac45760019150506103fd565b80610ace8161111c565b915050610a91565b5060009392505050565b6001600160a01b038216600090815260008051602061115f83398151915260208190526040822090915b6005820154811015610bca5783826005018281548110610b2c57610b2c6110f0565b906000526020600020015403610bb857600582018054610b4e90600190611135565b81548110610b5e57610b5e6110f0565b9060005260206000200154826005018281548110610b7e57610b7e6110f0565b60009182526020909120015560058201805480610b9d57610b9d611148565b60019003818190600052602060002001600090559055610bca565b80610bc28161111c565b915050610b0a565b5050505050565b600060008051602061115f8339815191525b6001600160a01b039092166000908152602092909252506040902090565b7fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb962278115610c56576001600160a01b03808616600090815260208381526040808320938816835292905220805484179055610bca565b6001600160a01b03808616600090815260208381526040808320938816835292905220805484191690555050505050565b60007f796cc27ebb3d5f2ef0c26a4fcf625e833d0e59a50256f2d9d2edb5d6dc607ff8610be3565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090610ce19061111c565b9182905550610cf1600143611135565b40604051602001610d0c929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b6001600160a01b03998a16600090815260008051602061115f8339815191526020526040902080546001600160a01b03191699909a1698909817895560028901969096556003880194909455600a8701929092556006860155600785015560098401805461ffff191691151561ff0019169190911761010092151592909202919091179055600890910155565b80356001600160a01b0381168114610dce57600080fd5b919050565b60008060408385031215610de657600080fd5b610def83610db7565b946020939093013593505050565b600060208284031215610e0f57600080fd5b610e1882610db7565b9392505050565b600081518084526020808501945080840160005b83811015610e585781516001600160a01b031687529582019590820190600101610e33565b509495945050505050565b600081518084526020808501945080840160005b83811015610e5857815187529582019590820190600101610e77565b60208152610ead6020820183516001600160a01b03169052565b600060208301516101c0806040850152610ecb6101e0850183610e1f565b91506040850151606085015260608501516080850152608085015160a085015260a0850151601f198584030160c0860152610f068382610e63565b92505060c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140610f468187018315159052565b8601519050610160610f5b8682018315159052565b860151610180868101919091528601516101a0808701919091529095015193019290925250919050565b80358015158114610dce57600080fd5b60008060008060808587031215610fab57600080fd5b610fb485610db7565b9350610fc260208601610db7565b925060408501359150610fd760608601610f85565b905092959194509250565b60008060008060008060008060006101208a8c03121561100157600080fd5b61100a8a610db7565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a0135935061103b60c08b01610f85565b925061104960e08b01610f85565b91506101008a013590509295985092959850929598565b6000806000806000806000806000806101408b8d03121561108057600080fd5b6110898b610db7565b995061109760208c01610db7565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013593506110c860e08c01610f85565b92506110d76101008c01610f85565b91506101208b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161112e5761112e611106565b5060010190565b818103818111156103fd576103fd611106565b634e487b7160e01b600052603160045260246000fdfe60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3ea2646970667358221220eecc590db0e36341c577cb94e7e7fb3e06de7f16bf8a4dc6cd718362fa076e3164736f6c63430008110033";

type AttestationQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationQueue__factory extends ContractFactory {
  constructor(...args: AttestationQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationQueue> {
    return super.deploy(overrides || {}) as Promise<AttestationQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationQueue {
    return super.attach(address) as AttestationQueue;
  }
  override connect(signer: Signer): AttestationQueue__factory {
    return super.connect(signer) as AttestationQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationQueueInterface {
    return new utils.Interface(_abi) as AttestationQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationQueue {
    return new Contract(address, _abi, signerOrProvider) as AttestationQueue;
  }
}
