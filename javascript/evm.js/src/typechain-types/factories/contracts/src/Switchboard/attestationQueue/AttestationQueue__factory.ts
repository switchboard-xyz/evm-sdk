/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AttestationQueue,
  AttestationQueueInterface,
} from "../../../../../contracts/src/Switchboard/attestationQueue/AttestationQueue";

const _abi = [
  {
    inputs: [],
    name: "AttestationQueueAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [],
    name: "MrEnclaveNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "AddMrEnclave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "AttestationQueueAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "AttestationQueuePermissionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AttestationQueueSetConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "RemoveMrEnclave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "attestationQueueHasMrEnclave",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "attestationQueues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "data",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxEnclaveVerificationAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowAuthorityOverrideAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConsecutiveFunctionFailures",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireAuthorityHeartbeatPermission",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireUsagePermissions",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "enclaveTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct AttestationQueueLib.AttestationQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "createAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getAttestationQueueMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "getEnclaveIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getEnclaves",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "setAttestationQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setAttestationQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a03806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638bb3048c116100665780638bb3048c14610145578063a77a07d314610165578063ad435b9d14610178578063de7768511461018b578063f7d483071461019e57600080fd5b8063083f30cf146100a35780630f3bc418146100b857806321fb3bbc146100e1578063340dd88b1461010257806363fcd77114610122575b600080fd5b6100b66100b13660046115ab565b6101b1565b005b6100cb6100c63660046115d5565b610387565b6040516100d891906115f7565b60405180910390f35b6100f46100ef3660046115d5565b610507565b6040519081526020016100d8565b6101156101103660046115d5565b6106f5565b6040516100d8919061167f565b6101356101303660046115ab565b61087a565b60405190151581526020016100d8565b6101586101533660046115d5565b610a0a565b6040516100d891906116c2565b6100b66101733660046117c4565b610be3565b6100b66101863660046115ab565b610d4f565b6100b6610199366004611811565b610f63565b6100b66101ac36600461188f565b6110ce565b600460006101cb6000805160206119ae8339815191525490565b9050806000036101eb576101eb826000805160206119ae83398151915255565b80158015906101f957508181145b156102175760405163887efaa560e01b815260040160405180910390fd5b801580159061023557506000805160206119ae833981519152548216155b156102535760405163887efaa560e01b815260040160405180910390fd5b600060008051602061198e8339815191526001600160a01b0386811660009081526020839052604090208054929350911633146102a357604051636f6a1b8760e11b815260040160405180910390fd5b6102ff816005018054806020026020016040519081016040528092919081815260200182805480156102f457602002820191906000526020600020905b8154815260200190600101908083116102e0575b505050505086611238565b61031c5760405163a9cb9e0d60e01b815260040160405180910390fd5b610326868661128b565b856001600160a01b03167f70c486974a3cebaf9593da3dc40af01ae059a47c48b9caff38ef2cc5180dc13e8660405161036191815260200190565b60405180910390a25050610381816000805160206119ae83398151915255565b50505050565b6060600060008051602061198e8339815191526001600160a01b0380851660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561042057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610402575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561049657602002820191906000526020600020905b815481526020019060010190808311610482575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c909301549101520151949350505050565b600060008051602061198e8339815191528181816105248661137c565b600201546001600160a01b039081168252602080830193909352604091820160002082516101c08101845281549092168252600181018054845181870281018701909552808552929491938583019390928301828280156105ae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610590575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561062457602002820191906000526020600020905b815481526020019060010190808311610610575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c90920154910152905060005b8160200151518110156106e957846001600160a01b0316826020015182815181106106b9576106b961191f565b60200260200101516001600160a01b0316036106d757949350505050565b806106e18161194b565b91505061068c565b50600019949350505050565b6060600060008051602061198e8339815191526001600160a01b0380851660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561078e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610770575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561080457602002820191906000526020600020905b8154815260200190600101908083116107f0575b505050918352505060068201546020808301919091526007830154604083015260088301546060830152600983015460ff808216151560808501526101009182900416151560a0840152600a84015460c0840152600b84015460e0840152600c9093015492909101919091520151949350505050565b60008060008051602061198e8339815191526001600160a01b0380861660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561091257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108f4575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561098857602002820191906000526020600020905b815481526020019060010190808311610974575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c909301549101528101519091506109ff9085611238565b925050505b92915050565b610a89604051806101c0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b610a92826113be565b604080516101c08101825282546001600160a01b03168152600183018054835160208281028201810190955281815292949380860193929190830182828015610b0457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ae6575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015610b7a57602002820191906000526020600020905b815481526020019060010190808311610b66575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c9092015491015292915050565b60016000610bfd6000805160206119ae8339815191525490565b905080600003610c1d57610c1d826000805160206119ae83398151915255565b8015801590610c2b57508181145b15610c495760405163887efaa560e01b815260040160405180910390fd5b8015801590610c6757506000805160206119ae833981519152548216155b15610c855760405163887efaa560e01b815260040160405180910390fd5b6000610c90876113be565b90506000610c9c6113d4565b82549091506001600160a01b03808316911614610ccc57604051636f6a1b8760e11b815260040160405180910390fd5b610cd888888888611401565b866001600160a01b0316816001600160a01b0316896001600160a01b03167f09b850e51622e6c8fa8a3ad5cffdc4903c7a12e121e9ebb5fa3ac93782588ff889604051610d2791815260200190565b60405180910390a45050610d47816000805160206119ae83398151915255565b505050505050565b60016000610d696000805160206119ae8339815191525490565b905080600003610d8957610d89826000805160206119ae83398151915255565b8015801590610d9757508181145b15610db55760405163887efaa560e01b815260040160405180910390fd5b8015801590610dd357506000805160206119ae833981519152548216155b15610df15760405163887efaa560e01b815260040160405180910390fd5b6001600160a01b038416600090815260008051602061198e8339815191526020819052604082209091610e226113d4565b82549091506001600160a01b03808316911614610e5257604051636f6a1b8760e11b815260040160405180910390fd5b610eae82600501805480602002602001604051908101604052809291908181526020018280548015610ea357602002820191906000526020600020905b815481526020019060010190808311610e8f575b505050505087611238565b15610ecc57604051631485cff560e11b815260040160405180910390fd5b6001600160a01b038716600090815260008051602061198e8339815191526020908152604082206005018054600181018255908352912001869055866001600160a01b03167f3a51d130f8b06abddb1f2e9a84d0c1ee5da028c468f178bd42ccab055e6d15ff87604051610f4291815260200190565b60405180910390a2505050610381816000805160206119ae83398151915255565b60046000610f7d6000805160206119ae8339815191525490565b905080600003610f9d57610f9d826000805160206119ae83398151915255565b8015801590610fab57508181145b15610fc95760405163887efaa560e01b815260040160405180910390fd5b8015801590610fe757506000805160206119ae833981519152548216155b156110055760405163887efaa560e01b815260040160405180910390fd5b600061100f611487565b6001600160a01b03808216600090815260008051602061198e83398151915260205260409020549192501615611058576040516394f62ae960e01b815260040160405180910390fd5b61106a818d8d8d8d8d8d8d8d8d611502565b806001600160a01b03168c6001600160a01b03167ff0beb01d51eb726cb1315c7a5f4fa8399a9a1f002a871dcefd49a43032a7d3a760405160405180910390a3506110c1816000805160206119ae83398151915255565b5050505050505050505050565b600460006110e86000805160206119ae8339815191525490565b90508060000361110857611108826000805160206119ae83398151915255565b801580159061111657508181145b156111345760405163887efaa560e01b815260040160405180910390fd5b801580159061115257506000805160206119ae833981519152548216155b156111705760405163887efaa560e01b815260040160405180910390fd5b600060008051602061198e8339815191526001600160a01b038e811660009081526020839052604090208054929350911633146111c057604051636f6a1b8760e11b815260040160405180910390fd5b6111d28e8e8e8e8e8e8e8e8e8e611502565b8c6001600160a01b03168e6001600160a01b03167fec01d1a35b7be56856343a9a8db18c127f610dbfacb41d5a30fefc8ccda1c23e60405160405180910390a3505061122a816000805160206119ae83398151915255565b505050505050505050505050565b6000805b835181101561128157828482815181106112585761125861191f565b60200260200101510361126f576001915050610a04565b806112798161194b565b91505061123c565b5060009392505050565b6001600160a01b038216600090815260008051602061198e83398151915260208190526040822090915b600582015481101561137557838260050182815481106112d7576112d761191f565b906000526020600020015403611363576005820180546112f990600190611964565b815481106113095761130961191f565b90600052602060002001548260050182815481106113295761132961191f565b6000918252602090912001556005820180548061134857611348611977565b60019003818190600052602060002001600090559055611375565b8061136d8161194b565b9150506112b5565b5050505050565b60007f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0985b6001600160a01b039092166000908152602092909252506040902090565b600060008051602061198e8339815191526113a0565b33601436108015906113ee57506001600160a01b03811630145b156113fe575060131936013560601c5b90565b7fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb962278115611456576001600160a01b03808616600090815260208381526040808320938816835292905220805484179055611375565b6001600160a01b03808616600090815260208381526040808320938816835292905220805484191690555050505050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b580546000906114b99061194b565b91829055506114c9600143611964565b406040516020016114e4929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b6001600160a01b03998a16600090815260008051602061198e8339815191526020526040902080546001600160a01b03191699909a1698909817895560028901969096556003880194909455600a8701929092556006860155600785015560098401805461ffff191691151561ff0019169190911761010092151592909202919091179055600890910155565b80356001600160a01b03811681146115a657600080fd5b919050565b600080604083850312156115be57600080fd5b6115c78361158f565b946020939093013593505050565b6000602082840312156115e757600080fd5b6115f08261158f565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561162f57835183529284019291840191600101611613565b50909695505050505050565b600081518084526020808501945080840160005b838110156116745781516001600160a01b03168752958201959082019060010161164f565b509495945050505050565b6020815260006115f0602083018461163b565b600081518084526020808501945080840160005b83811015611674578151875295820195908201906001016116a6565b602081526116dc6020820183516001600160a01b03169052565b600060208301516101c08060408501526116fa6101e085018361163b565b91506040850151606085015260608501516080850152608085015160a085015260a0850151601f198584030160c08601526117358382611692565b92505060c085015160e085015260e08501516101008181870152808701519150506101208181870152808701519150506101406117758187018315159052565b860151905061016061178a8682018315159052565b860151610180868101919091528601516101a0808701919091529095015193019290925250919050565b803580151581146115a657600080fd5b600080600080608085870312156117da57600080fd5b6117e38561158f565b93506117f16020860161158f565b925060408501359150611806606086016117b4565b905092959194509250565b60008060008060008060008060006101208a8c03121561183057600080fd5b6118398a61158f565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a0135935061186a60c08b016117b4565b925061187860e08b016117b4565b91506101008a013590509295985092959850929598565b6000806000806000806000806000806101408b8d0312156118af57600080fd5b6118b88b61158f565b99506118c660208c0161158f565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013593506118f760e08c016117b4565b92506119066101008c016117b4565b91506101208b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161195d5761195d611935565b5060010190565b81810381811115610a0457610a04611935565b634e487b7160e01b600052603160045260246000fdfe60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b6a264697066735822122011199fa021c0bcfe1d5c0ed8a4eeb32d2dd74a4050b98f9b52c12543fb62aae264736f6c63430008110033";

type AttestationQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationQueue__factory extends ContractFactory {
  constructor(...args: AttestationQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationQueue> {
    return super.deploy(overrides || {}) as Promise<AttestationQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationQueue {
    return super.attach(address) as AttestationQueue;
  }
  override connect(signer: Signer): AttestationQueue__factory {
    return super.connect(signer) as AttestationQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationQueueInterface {
    return new utils.Interface(_abi) as AttestationQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationQueue {
    return new Contract(address, _abi, signerOrProvider) as AttestationQueue;
  }
}
