/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AttestationQueue,
  AttestationQueueInterface,
} from "../../../../../contracts/src/Switchboard/attestationQueue/AttestationQueue";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestationQueueId",
        type: "address",
      },
    ],
    name: "AttestationQueueAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "MrEnclaveNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "AddMrEnclave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "AttestationQueueAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "AttestationQueuePermissionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AttestationQueueSetConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "RemoveMrEnclave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "attestationQueueHasMrEnclave",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "attestationQueues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "data",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxEnclaveVerificationAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowAuthorityOverrideAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConsecutiveFunctionFailures",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireAuthorityHeartbeatPermission",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireUsagePermissions",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "enclaveTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct AttestationQueueLib.AttestationQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "createAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getAttestationQueueMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "getEnclaveIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getEnclaves",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "setAttestationQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setAttestationQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AttestationQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationQueue__factory extends ContractFactory {
  constructor(...args: AttestationQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationQueue> {
    return super.deploy(overrides || {}) as Promise<AttestationQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationQueue {
    return super.attach(address) as AttestationQueue;
  }
  override connect(signer: Signer): AttestationQueue__factory {
    return super.connect(signer) as AttestationQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationQueueInterface {
    return new utils.Interface(_abi) as AttestationQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationQueue {
    return new Contract(address, _abi, signerOrProvider) as AttestationQueue;
  }
}
