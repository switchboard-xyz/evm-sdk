/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AttestationQueue,
  AttestationQueueInterface,
} from "../../../../../contracts/src/Switchboard/attestationQueue/AttestationQueue";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attestationQueueId",
        type: "address",
      },
    ],
    name: "AttestationQueueAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "MrEnclaveNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "AddMrEnclave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "AttestationQueueAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "AttestationQueuePermissionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AttestationQueueSetConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "RemoveMrEnclave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "attestationQueueHasMrEnclave",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "attestationQueues",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "data",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "maxSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "mrEnclaves",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxEnclaveVerificationAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowAuthorityOverrideAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConsecutiveFunctionFailures",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireAuthorityHeartbeatPermission",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "requireUsagePermissions",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "enclaveTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gcIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currIdx",
            type: "uint256",
          },
        ],
        internalType: "struct AttestationQueueLib.AttestationQueue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "createAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getAttestationQueueMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "getEnclaveIdx",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getEnclaves",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromAttestationQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxEnclaveVerificationAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowAuthorityOverrideAfter",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireAuthorityHeartbeatPermission",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "requireUsagePermissions",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxConsecutiveFunctionFailures",
        type: "uint256",
      },
    ],
    name: "setAttestationQueueConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "on",
        type: "bool",
      },
    ],
    name: "setAttestationQueuePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a7c806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638bb3048c116100665780638bb3048c14610145578063a77a07d314610165578063ad435b9d14610178578063de7768511461018b578063f7d483071461019e57600080fd5b8063083f30cf146100a35780630f3bc418146100b857806321fb3bbc146100e1578063340dd88b1461010257806363fcd77114610122575b600080fd5b6100b66100b1366004611624565b6101b1565b005b6100cb6100c636600461164e565b6103a3565b6040516100d89190611670565b60405180910390f35b6100f46100ef36600461164e565b610523565b6040519081526020016100d8565b61011561011036600461164e565b610711565b6040516100d891906116f8565b610135610130366004611624565b610896565b60405190151581526020016100d8565b61015861015336600461164e565b610a26565b6040516100d8919061173b565b6100b661017336600461183d565b610bff565b6100b6610186366004611624565b610d81565b6100b661019936600461188a565b610fbd565b6100b66101ac366004611908565b611133565b600460006101cb600080516020611a278339815191525490565b9050806000036101eb576101eb82600080516020611a2783398151915255565b80158015906101f957508181145b156102175760405163887efaa560e01b815260040160405180910390fd5b80158015906102355750600080516020611a27833981519152548216155b156102535760405163887efaa560e01b815260040160405180910390fd5b6000600080516020611a078339815191526001600160a01b0386811660009081526020839052604090208054929350911633146102bc57805460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b6103188160050180548060200260200160405190810160405280929190818152602001828054801561030d57602002820191906000526020600020905b8154815260200190600101908083116102f9575b5050505050866112b1565b6103385760405163d14e7c9b60e01b8152600160048201526024016102b3565b6103428686611304565b856001600160a01b03167f70c486974a3cebaf9593da3dc40af01ae059a47c48b9caff38ef2cc5180dc13e8660405161037d91815260200190565b60405180910390a2505061039d81600080516020611a2783398151915255565b50505050565b60606000600080516020611a078339815191526001600160a01b0380851660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561043c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161041e575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156104b257602002820191906000526020600020905b81548152602001906001019080831161049e575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c909301549101520151949350505050565b6000600080516020611a07833981519152818181610540866113f5565b600201546001600160a01b039081168252602080830193909352604091820160002082516101c08101845281549092168252600181018054845181870281018701909552808552929491938583019390928301828280156105ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ac575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561064057602002820191906000526020600020905b81548152602001906001019080831161062c575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c90920154910152905060005b81602001515181101561070557846001600160a01b0316826020015182815181106106d5576106d5611998565b60200260200101516001600160a01b0316036106f357949350505050565b806106fd816119c4565b9150506106a8565b50600019949350505050565b60606000600080516020611a078339815191526001600160a01b0380851660009081526020838152604080832081516101c0810183528154909516855260018101805483518186028101860190945280845296975093959093858401939091908301828280156107aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161078c575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561082057602002820191906000526020600020905b81548152602001906001019080831161080c575b505050918352505060068201546020808301919091526007830154604083015260088301546060830152600983015460ff808216151560808501526101009182900416151560a0840152600a84015460c0840152600b84015460e0840152600c9093015492909101919091520151949350505050565b600080600080516020611a078339815191526001600160a01b0380861660009081526020838152604080832081516101c08101835281549095168552600181018054835181860281018601909452808452969750939590938584019390919083018282801561092e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610910575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156109a457602002820191906000526020600020905b815481526020019060010190808311610990575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a080840191909152600a84015460c0840152600b84015460e0840152600c90930154910152810151909150610a1b90856112b1565b925050505b92915050565b610aa5604051806101c0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b610aae82611437565b604080516101c08101825282546001600160a01b03168152600183018054835160208281028201810190955281815292949380860193929190830182828015610b2057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b02575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015610b9657602002820191906000526020600020905b815481526020019060010190808311610b82575b5050509183525050600682015460208201526007820154604082015260088201546060820152600982015460ff808216151560808401526101009182900416151560a0830152600a83015460c0830152600b83015460e0830152600c9092015491015292915050565b60016000610c19600080516020611a278339815191525490565b905080600003610c3957610c3982600080516020611a2783398151915255565b8015801590610c4757508181145b15610c655760405163887efaa560e01b815260040160405180910390fd5b8015801590610c835750600080516020611a27833981519152548216155b15610ca15760405163887efaa560e01b815260040160405180910390fd5b6000610cac87611437565b90506000610cb861144d565b82549091506001600160a01b03808316911614610cfe57815460405163bf89df8360e01b81526001600160a01b03918216600482015290821660248201526044016102b3565b610d0a8888888861147a565b866001600160a01b0316816001600160a01b0316896001600160a01b03167f09b850e51622e6c8fa8a3ad5cffdc4903c7a12e121e9ebb5fa3ac93782588ff889604051610d5991815260200190565b60405180910390a45050610d7981600080516020611a2783398151915255565b505050505050565b60016000610d9b600080516020611a278339815191525490565b905080600003610dbb57610dbb82600080516020611a2783398151915255565b8015801590610dc957508181145b15610de75760405163887efaa560e01b815260040160405180910390fd5b8015801590610e055750600080516020611a27833981519152548216155b15610e235760405163887efaa560e01b815260040160405180910390fd5b6001600160a01b0384166000908152600080516020611a078339815191526020819052604082209091610e5461144d565b82549091506001600160a01b03808316911614610e9a57815460405163bf89df8360e01b81526001600160a01b03918216600482015290821660248201526044016102b3565b610ef682600501805480602002602001604051908101604052809291908181526020018280548015610eeb57602002820191906000526020600020905b815481526020019060010190808311610ed7575b5050505050876112b1565b15610f26576040516393fc1a1360e01b81526001600160a01b0388166004820152602481018790526044016102b3565b6001600160a01b0387166000908152600080516020611a078339815191526020908152604082206005018054600181018255908352912001869055866001600160a01b03167f3a51d130f8b06abddb1f2e9a84d0c1ee5da028c468f178bd42ccab055e6d15ff87604051610f9c91815260200190565b60405180910390a250505061039d81600080516020611a2783398151915255565b60046000610fd7600080516020611a278339815191525490565b905080600003610ff757610ff782600080516020611a2783398151915255565b801580159061100557508181145b156110235760405163887efaa560e01b815260040160405180910390fd5b80158015906110415750600080516020611a27833981519152548216155b1561105f5760405163887efaa560e01b815260040160405180910390fd5b6000611069611500565b6001600160a01b038082166000908152600080516020611a07833981519152602052604090205491925016156110bd57604051631179fb2560e01b81526001600160a01b03821660048201526024016102b3565b6110cf818d8d8d8d8d8d8d8d8d61157b565b806001600160a01b03168c6001600160a01b03167ff0beb01d51eb726cb1315c7a5f4fa8399a9a1f002a871dcefd49a43032a7d3a760405160405180910390a35061112681600080516020611a2783398151915255565b5050505050505050505050565b6004600061114d600080516020611a278339815191525490565b90508060000361116d5761116d82600080516020611a2783398151915255565b801580159061117b57508181145b156111995760405163887efaa560e01b815260040160405180910390fd5b80158015906111b75750600080516020611a27833981519152548216155b156111d55760405163887efaa560e01b815260040160405180910390fd5b6000600080516020611a078339815191526001600160a01b038e8116600090815260208390526040902080549293509116331461123957805460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016102b3565b61124b8e8e8e8e8e8e8e8e8e8e61157b565b8c6001600160a01b03168e6001600160a01b03167fec01d1a35b7be56856343a9a8db18c127f610dbfacb41d5a30fefc8ccda1c23e60405160405180910390a350506112a381600080516020611a2783398151915255565b505050505050505050505050565b6000805b83518110156112fa57828482815181106112d1576112d1611998565b6020026020010151036112e8576001915050610a20565b806112f2816119c4565b9150506112b5565b5060009392505050565b6001600160a01b0382166000908152600080516020611a0783398151915260208190526040822090915b60058201548110156113ee578382600501828154811061135057611350611998565b9060005260206000200154036113dc57600582018054611372906001906119dd565b8154811061138257611382611998565b90600052602060002001548260050182815481106113a2576113a2611998565b600091825260209091200155600582018054806113c1576113c16119f0565b600190038181906000526020600020016000905590556113ee565b806113e6816119c4565b91505061132e565b5050505050565b60007f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0985b6001600160a01b039092166000908152602092909252506040902090565b6000600080516020611a07833981519152611419565b336014361080159061146757506001600160a01b03811630145b15611477575060131936013560601c5b90565b7fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622781156114cf576001600160a01b038086166000908152602083815260408083209388168352929052208054841790556113ee565b6001600160a01b03808616600090815260208381526040808320938816835292905220805484191690555050505050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090611532906119c4565b91829055506115426001436119dd565b4060405160200161155d929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b6001600160a01b03998a166000908152600080516020611a078339815191526020526040902080546001600160a01b03191699909a1698909817895560028901969096556003880194909455600a8701929092556006860155600785015560098401805461ffff191691151561ff0019169190911761010092151592909202919091179055600890910155565b80356001600160a01b038116811461161f57600080fd5b919050565b6000806040838503121561163757600080fd5b61164083611608565b946020939093013593505050565b60006020828403121561166057600080fd5b61166982611608565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156116a85783518352928401929184019160010161168c565b50909695505050505050565b600081518084526020808501945080840160005b838110156116ed5781516001600160a01b0316875295820195908201906001016116c8565b509495945050505050565b60208152600061166960208301846116b4565b600081518084526020808501945080840160005b838110156116ed5781518752958201959082019060010161171f565b602081526117556020820183516001600160a01b03169052565b600060208301516101c08060408501526117736101e08501836116b4565b91506040850151606085015260608501516080850152608085015160a085015260a0850151601f198584030160c08601526117ae838261170b565b92505060c085015160e085015260e08501516101008181870152808701519150506101208181870152808701519150506101406117ee8187018315159052565b86015190506101606118038682018315159052565b860151610180868101919091528601516101a0808701919091529095015193019290925250919050565b8035801515811461161f57600080fd5b6000806000806080858703121561185357600080fd5b61185c85611608565b935061186a60208601611608565b92506040850135915061187f6060860161182d565b905092959194509250565b60008060008060008060008060006101208a8c0312156118a957600080fd5b6118b28a611608565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a013593506118e360c08b0161182d565b92506118f160e08b0161182d565b91506101008a013590509295985092959850929598565b6000806000806000806000806000806101408b8d03121561192857600080fd5b6119318b611608565b995061193f60208c01611608565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b0135935061197060e08c0161182d565b925061197f6101008c0161182d565b91506101208b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119d6576119d66119ae565b5060010190565b81810381811115610a2057610a206119ae565b634e487b7160e01b600052603160045260246000fdfe60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b6a26469706673582212209e67744fa2cf56c5c447c6be19834fceb458819de074596a9f9aa22f58f6077a64736f6c63430008110033";

type AttestationQueueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationQueueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationQueue__factory extends ContractFactory {
  constructor(...args: AttestationQueueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationQueue> {
    return super.deploy(overrides || {}) as Promise<AttestationQueue>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationQueue {
    return super.attach(address) as AttestationQueue;
  }
  override connect(signer: Signer): AttestationQueue__factory {
    return super.connect(signer) as AttestationQueue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationQueueInterface {
    return new utils.Interface(_abi) as AttestationQueueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationQueue {
    return new Contract(address, _abi, signerOrProvider) as AttestationQueue;
  }
}
