/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SbFunction,
  SbFunctionInterface,
} from "../../../../../contracts/src/Switchboard/sbFunction/SbFunction";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "AlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "EnclaveDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
    ],
    name: "EnclaveNotAtQueueIdx",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FunctionCallerNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "received",
        type: "bytes32",
      },
    ],
    name: "FunctionMrEnclaveMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "used",
        type: "uint256",
      },
    ],
    name: "GasLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxExpectedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reportedTime",
        type: "uint256",
      },
    ],
    name: "IncorrectReportedTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "InvalidEnclave",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedSender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedQueueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedQueueId",
        type: "address",
      },
    ],
    name: "QueuesDoNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "TransactionExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "FunctionAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "callId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "FunctionCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "callFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "version",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "funcs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "functionEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "functionEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "functionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveFunctionsByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFunctions",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getAllUnexecutedFunctionCalls",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct FunctionLib.FunctionCall[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFunctionsByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "version",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "setFunctionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatedSignerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "observedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextAllowedTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFailure",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "verifyFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061520e806100206000396000f3fe6080604052600436106100e85760003560e01c806399d97e921161008a578063ab6418b411610059578063ab6418b414610284578063ba93166c14610299578063cbb3c654146102ac578063d93f1970146102d957600080fd5b806399d97e92146102045780639c23da5014610224578063a13001c914610244578063a29baf1e1461026457600080fd5b8063572b6c05116100c6578063572b6c05146101665780637096052c146101975780638cc5b02c146101b75780638ef92003146101d757600080fd5b80631fc747b7146100ed578063357f633f1461012457806342d71d1314610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004614494565b610307565b60405161011b9291906146dc565b60405180910390f35b34801561013057600080fd5b5061010d61013f366004614494565b610a8a565b34801561015057600080fd5b5061016461015f3660046148e6565b611138565b005b34801561017257600080fd5b50610187610181366004614494565b50600190565b604051901515815260200161011b565b3480156101a357600080fd5b506101646101b2366004614b86565b61126f565b3480156101c357600080fd5b506101646101d2366004614c02565b61153c565b3480156101e357600080fd5b506101f76101f2366004614494565b611ad7565b60405161011b9190614cb2565b34801561021057600080fd5b5061016461021f366004614cc5565b611f22565b34801561023057600080fd5b5061016461023f366004614d15565b6121ce565b34801561025057600080fd5b5061018761025f366004614494565b61230c565b34801561027057600080fd5b5061016461027f366004614d5a565b61231d565b34801561029057600080fd5b5061010d61291d565b6101646102a7366004614494565b612ef3565b3480156102b857600080fd5b506102cc6102c7366004614494565b613023565b60405161011b9190614d9b565b3480156102e557600080fd5b506102f96102f4366004614e34565b6132e0565b60405190815260200161011b565b6060806000610314613334565b90506000805b600283015481101561040257856001600160a01b031683600001600085600201848154811061034b5761034b614eb1565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156103dd5750600183600001600085600201848154811061039e5761039e614eb1565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff16908111156103db576103db614501565b145b156103f057816103ec81614edd565b9250505b806103fa81614edd565b91505061031a565b506000816001600160401b0381111561041d5761041d61477d565b604051908082528060200260200182016040528015610446578160200160208202803683370190505b5090506000826001600160401b038111156104635761046361477d565b60405190808252806020026020018201604052801561049c57816020015b610489614335565b8152602001906001900390816104815790505b50905060005b6002850154811015610a7d57876001600160a01b03168560000160008760020184815481106104d3576104d3614eb1565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156105655750600185600001600087600201848154811061052657610526614eb1565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff169081111561056357610563614501565b145b15610a6b5784600001600086600201838154811061058557610585614eb1565b60009182526020808320909101546001600160a01b031683528201929092526040908101909120815161010081019092528054829082906105c590614ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546105f190614ef6565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff169081111561069b5761069b614501565b60058111156106ac576106ac614501565b8152602001600682016040518060c00160405290816000820180546106d090614ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546106fc90614ef6565b80156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161078d575b505050505081526020016002820180546107c490614ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546107f090614ef6565b801561083d5780601f106108125761010080835404028352916020019161083d565b820191906000526020600020905b81548152906001019060200180831161082057829003601f168201915b5050505050815260200160038201805461085690614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461088290614ef6565b80156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b50505050508152602001600482015481526020016005820180546108f290614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461091e90614ef6565b801561096b5780601f106109405761010080835404028352916020019161096b565b820191906000526020600020905b81548152906001019060200180831161094e57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e08401520152826109e786614f30565b955085815181106109fa576109fa614eb1565b6020026020010181905250846002018181548110610a1a57610a1a614eb1565b9060005260206000200160009054906101000a90046001600160a01b0316838581518110610a4a57610a4a614eb1565b60200260200101906001600160a01b031690816001600160a01b0316815250505b80610a7581614edd565b9150506104a2565b5090969095509350505050565b6060806000610a97613334565b90506000805b6002830154811015610b2157856001600160a01b0316836000016000856002018481548110610ace57610ace614eb1565b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020600101541603610b0f5781610b0b81614edd565b9250505b80610b1981614edd565b915050610a9d565b506000816001600160401b03811115610b3c57610b3c61477d565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b5090506000826001600160401b03811115610b8257610b8261477d565b604051908082528060200260200182016040528015610bbb57816020015b610ba8614335565b815260200190600190039081610ba05790505b50905060005b6002850154811015610a7d57876001600160a01b0316856000016000876002018481548110610bf257610bf2614eb1565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060010154160361112657846000016000866002018381548110610c4057610c40614eb1565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290610c8090614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac90614ef6565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115610d5657610d56614501565b6005811115610d6757610d67614501565b8152602001600682016040518060c0016040529081600082018054610d8b90614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054610db790614ef6565b8015610e045780601f10610dd957610100808354040283529160200191610e04565b820191906000526020600020905b815481529060010190602001808311610de757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e6657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e48575b50505050508152602001600282018054610e7f90614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614ef6565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600382018054610f1190614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614ef6565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160048201548152602001600582018054610fad90614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614ef6565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e08401520152826110a286614f30565b955085815181106110b5576110b5614eb1565b60200260200101819052508460020181815481106110d5576110d5614eb1565b9060005260206000200160009054906101000a90046001600160a01b031683858151811061110557611105614eb1565b60200260200101906001600160a01b031690816001600160a01b0316815250505b8061113081614edd565b915050610bc1565b61114189613358565b61116e57604051631e1d8eb160e11b81526001600160a01b038a1660048201526024015b60405180910390fd5b60006111798a61338d565b60018101549091506001600160a01b031633146111c057600181015460405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401611165565b600281015460038201546111e6918c918c918c916001600160a01b0391821691166133b5565b6111f58a88888888888861342c565b6112008a60006134b4565b61120b8a60006134e2565b6112168a6000613510565b6002810154611230906001600160a01b031660008061353e565b600281015461124a906000906001600160a01b031661358a565b6002810154611263906001600160a01b031660016135d7565b50505050505050505050565b610101600061128a6000805160206151998339815191525490565b9050806000036112aa576112aa8260008051602061519983398151915255565b80158015906112b857508181145b156112d65760405163887efaa560e01b815260040160405180910390fd5b80158015906112f45750600080516020615199833981519152548216155b156113125760405163887efaa560e01b815260040160405180910390fd5b60005b845181101561151f57600085828151811061133257611332614eb1565b60200260200101519050600061134782613625565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff161561139c5760405163d1d36dcd60e01b815260048101829052602401611165565b6113a58161373a565b60006113cf8360800151838987815181106113c2576113c2614eb1565b6020026020010151613774565b905080611412578260800151828886815181106113ee576113ee614eb1565b602002602001015160405163d491963d60e01b815260040161116593929190614f47565b825142111561143a578251604051636634e92360e01b81526004810191909152602401611165565b60008084606001516001600160a01b031660008660a001518760800151604051602001611468929190614f6e565b60408051601f198184030181529082905261148291614fa5565b60006040518083038185875af1925050503d80600081146114bf576040519150601f19603f3d011682016040523d82523d6000602084013e6114c4565b606091505b50915091506115068560600151838360405180604001604052806015815260200174119bdc9dd85c99195c8810d85b1b0811985a5b1959605a1b8152506137cd565b505050505050808061151790614edd565b915050611315565b506115368160008051602061519983398151915255565b50505050565b600160006115566000805160206151998339815191525490565b905080600003611576576115768260008051602061519983398151915255565b801580159061158457508181145b156115a25760405163887efaa560e01b815260040160405180910390fd5b80158015906115c05750600080516020615199833981519152548216155b156115de5760405163887efaa560e01b815260040160405180910390fd5b60006116286115eb613851565b6001600160a01b0390811660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd09960205260409020541690565b905060006116358c61338d565b6003810154909150600090611652906001600160a01b031661387e565b6001600160a01b0380851660009081526000805160206151b98339815191526020526040902054919250166116a55760405163170c65f360e21b81526001600160a01b0384166004820152602401611165565b826001600160a01b0316816001018f815481106116c4576116c4614eb1565b6000918252602090912001546001600160a01b031614611717576003820154604051630cb3ac2760e11b81526001600160a01b0391821660048201529084166024820152604481018f9052606401611165565b604051637da566ff60e11b81526001600160a01b0384166004820152309063fb4acdfe90602401602060405180830381865afa15801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f9190614fc1565b6117a7576040516345f60d2760e11b81526001600160a01b0384166004820152602401611165565b6117b0836138a6565b6002015460038301546001600160a01b039081169116146118125760038201546001600160a01b03166117e2846138a6565b60020154604051630ada499f60e21b81526001600160a01b03928316600482015291166024820152604401611165565b881561185b576008810154600c830154101561184857600c820154611843908e9061183e906001614fde565b613510565b611885565b6118538d60026138bc565b505050611ab4565b6011820154600003611871576118718d426134b4565b61187a8d613902565b6118858d6000613510565b600282015460009061189f906001600160a01b03166138a6565b9050888160070154146118d5576007810154604051632a96c8c760e11b8152611165918b91600401918252602082015260400190565b5060006118ea6118e58d42614ff1565b61393a565b9050601481111561192457611900426014614fde565b604051631ff8ef4960e11b81526004810191909152602481018d9052604401611165565b506009810154610100900460ff1680156119a7575060038201546119a5906001600160a01b03168e6119566001613956565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b155b156119b7576118538d60056138bc565b6119ce83896119c94262093a80614fde565b61353e565b6119d88c8461358a565b8060030154826004015410156119f3576118538d60046138bc565b600f82015460009015611a1657600f830154611a1190600190615018565b611a19565b60005b90505b600081118015611a3a5750611a318e82613976565b6003015460ff16155b15611a5b57611a498e826139ac565b80611a5381614f30565b915050611a1c565b611a668e60006139f2565b50611a718d8b613a2d565b611aa08d826001018054905084600c01600601546001611a919190614fde565b611a9b919061502b565b613a79565b611ab08d82600301548989613aa7565b5050505b611aca8160008051602061519983398151915255565b5050505050505050505050565b611adf614335565b611ae88261338d565b60405180610100016040529081600082018054611b0490614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3090614ef6565b8015611b7d5780601f10611b5257610100808354040283529160200191611b7d565b820191906000526020600020905b815481529060010190602001808311611b6057829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115611bda57611bda614501565b6005811115611beb57611beb614501565b8152602001600682016040518060c0016040529081600082018054611c0f90614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3b90614ef6565b8015611c885780601f10611c5d57610100808354040283529160200191611c88565b820191906000526020600020905b815481529060010190602001808311611c6b57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611cea57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ccc575b50505050508152602001600282018054611d0390614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2f90614ef6565b8015611d7c5780601f10611d5157610100808354040283529160200191611d7c565b820191906000526020600020905b815481529060010190602001808311611d5f57829003601f168201915b50505050508152602001600382018054611d9590614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054611dc190614ef6565b8015611e0e5780601f10611de357610100808354040283529160200191611e0e565b820191906000526020600020905b815481529060010190602001808311611df157829003601f168201915b5050505050815260200160048201548152602001600582018054611e3190614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054611e5d90614ef6565b8015611eaa5780601f10611e7f57610100808354040283529160200191611eaa565b820191906000526020600020905b815481529060010190602001808311611e8d57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015292915050565b6000611f2c613de7565b9050611f3781613358565b15611f6057604051638f939dfd60e01b81526001600160a01b0382166004820152602401611165565b6000611f6a613de7565b6040516363e08a1f60e11b81526001600160a01b038083166004830152600060248301528b811660448301528c166064820152909150309063c7c1143e90608401600060405180830381600087803b158015611fc557600080fd5b505af1158015611fd9573d6000803e3d6000fd5b505050506000611fe88a61387e565b604080516101c08101825282546001600160a01b0316815260018301805483516020828102820181019095528181529294938086019392919083018282801561205a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161203c575b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156120d057602002820191906000526020600020905b8154815260200190600101908083116120bc575b505050918352505060068201546020808301919091526007830154604083015260088301546060830152600983015460ff808216151560808501526101009182900416151560a0840152600a84015460c0840152600b84015460e0840152600c909301549290910191909152810151516101a082015191925061215b91859190611a91906001614fde565b50612169828c8c848d6133b5565b6121788289898989898961342c565b61218182613e62565b816001600160a01b03168a6001600160a01b03167ff91c401ec9e7a7f7987a949ca22fe503608aed50c54cb3d2b64039d8a4b60d4260405160405180910390a35050505050505050505050565b60006121d98361338d565b905060006121e5613851565b600783015490915015801590612261575061225f8260060160010180548060200260200160405190810160405280929190818152602001828054801561225457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612236575b505050505082613ea0565b155b1561229257604051630724d91960e31b81526001600160a01b03808616600483015282166024820152604401611165565b61229d8460016139f2565b6122b08483600c01600301548386613f05565b81600c0160030154816001600160a01b0316856001600160a01b03167fae486202240e733a2f4039ac3d255ede4cb00b1050bbd7458e8a63e6a1144334866040516122fb919061504d565b60405180910390a461153684613fb3565b600061231782613358565b92915050565b600160006123376000805160206151998339815191525490565b905080600003612357576123578260008051602061519983398151915255565b801580159061236557508181145b156123835760405163887efaa560e01b815260040160405180910390fd5b80158015906123a15750600080516020615199833981519152548216155b156123bf5760405163887efaa560e01b815260040160405180910390fd5b60006123ca8561338d565b604051806101000160405290816000820180546123e690614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461241290614ef6565b801561245f5780601f106124345761010080835404028352916020019161245f565b820191906000526020600020905b81548152906001019060200180831161244257829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff16908111156124bc576124bc614501565b60058111156124cd576124cd614501565b8152602001600682016040518060c00160405290816000820180546124f190614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461251d90614ef6565b801561256a5780601f1061253f5761010080835404028352916020019161256a565b820191906000526020600020905b81548152906001019060200180831161254d57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156125cc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116125ae575b505050505081526020016002820180546125e590614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461261190614ef6565b801561265e5780601f106126335761010080835404028352916020019161265e565b820191906000526020600020905b81548152906001019060200180831161264157829003601f168201915b5050505050815260200160038201805461267790614ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546126a390614ef6565b80156126f05780601f106126c5576101008083540402835291602001916126f0565b820191906000526020600020905b8154815290600101906020018083116126d357829003601f168201915b505050505081526020016004820154815260200160058201805461271390614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461273f90614ef6565b801561278c5780601f106127615761010080835404028352916020019161278c565b820191906000526020600020905b81548152906001019060200180831161276f57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152908101919091528101519091506001600160a01b0316331461284857602081015160405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401611165565b838160800151101561287d57608081015160405163cf47918160e01b8152611165918691600401918252602082015260400190565b6128878585613fe3565b6040516001600160a01b0387169085156108fc029086906000818181858888f193505050501580156128bd573d6000803e3d6000fd5b5083866001600160a01b0316866001600160a01b03167ff06cf8a96225f4a866a9e590c50c1bbc3be2dd6771fb87613346bcd7cb2183ca60405160405180910390a4506129168160008051602061519983398151915255565b5050505050565b606080600061292a613334565b60028101549091506000816001600160401b0381111561294c5761294c61477d565b604051908082528060200260200182016040528015612975578160200160208202803683370190505b5090506000826001600160401b038111156129925761299261477d565b6040519080825280602002602001820160405280156129cb57816020015b6129b8614335565b8152602001906001900390816129b05790505b50905060005b6002850154811015612ee7578460000160008660020183815481106129f8576129f8614eb1565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290612a3890614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054612a6490614ef6565b8015612ab15780601f10612a8657610100808354040283529160200191612ab1565b820191906000526020600020905b815481529060010190602001808311612a9457829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115612b0e57612b0e614501565b6005811115612b1f57612b1f614501565b8152602001600682016040518060c0016040529081600082018054612b4390614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054612b6f90614ef6565b8015612bbc5780601f10612b9157610100808354040283529160200191612bbc565b820191906000526020600020905b815481529060010190602001808311612b9f57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015612c1e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612c00575b50505050508152602001600282018054612c3790614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054612c6390614ef6565b8015612cb05780601f10612c8557610100808354040283529160200191612cb0565b820191906000526020600020905b815481529060010190602001808311612c9357829003601f168201915b50505050508152602001600382018054612cc990614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054612cf590614ef6565b8015612d425780601f10612d1757610100808354040283529160200191612d42565b820191906000526020600020905b815481529060010190602001808311612d2557829003601f168201915b5050505050815260200160048201548152602001600582018054612d6590614ef6565b80601f0160208091040260200160405190810160405280929190818152602001828054612d9190614ef6565b8015612dde5780601f10612db357610100808354040283529160200191612dde565b820191906000526020600020905b815481529060010190602001808311612dc157829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015282612e5a86614f30565b95508581518110612e6d57612e6d614eb1565b6020026020010181905250846002018181548110612e8d57612e8d614eb1565b9060005260206000200160009054906101000a90046001600160a01b0316838581518110612ebd57612ebd614eb1565b6001600160a01b039092166020928302919091019091015280612edf81614edd565b9150506129d1565b50909590945092505050565b60016000612f0d6000805160206151998339815191525490565b905080600003612f2d57612f2d8260008051602061519983398151915255565b8015801590612f3b57508181145b15612f595760405163887efaa560e01b815260040160405180910390fd5b8015801590612f775750600080516020615199833981519152548216155b15612f955760405163887efaa560e01b815260040160405180910390fd5b612f9e83613358565b612fc657604051631e1d8eb160e11b81526001600160a01b0384166004820152602401611165565b612fd08334614021565b604051349033906001600160a01b038616907fcfa8ce8f8d66cce7f7052bcba7d1f853a503d00896bcd7dfdb3ff4b1ad1f222d90600090a461301e8160008051602061519983398151915255565b505050565b6060600061302f613334565b6001600160a01b0384166000908152602082905260408120600f01549192505b60008211801561308857506001600160a01b0385166000908152600184016020908152604080832085845290915290206003015460ff16155b80156130bb57506001600160a01b0385166000908152600180850160209081526040808420868552909152909120015415155b156130e057816130ca81614f30565b92505080806130d890614edd565b91505061304f565b806000816001600160401b038111156130fb576130fb61477d565b60405190808252806020026020018201604052801561316257816020015b61314f604051806080016040528060006001600160a01b0316815260200160008152602001606081526020016000151581525090565b8152602001906001900390816131195790505b506001600160a01b0388166000908152602087905260408120600f01549192509061318e908590615018565b90505b6001600160a01b0388166000908152602087905260409020600f01548110156132d5576001600160a01b0380891660009081526001808901602090815260408084208685528252928390208351608081018552815490951685529182015490840152600281018054919284019161320790614ef6565b80601f016020809104026020016040519081016040528092919081815260200182805461323390614ef6565b80156132805780601f1061325557610100808354040283529160200191613280565b820191906000526020600020905b81548152906001019060200180831161326357829003601f168201915b50505091835250506003919091015460ff161515602090910152826132a485614f30565b945084815181106132b7576132b7614eb1565b602002602001018190525080806132cd90614edd565b915050613191565b509695505050505050565b60006133296040518060c00160405280898152602001888152602001878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815250613625565b979650505050505050565b7f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89790565b600080613363613334565b6001600160a01b039384166000908152602091909152604090206001015490921690911415919050565b6000613397613334565b6001600160a01b039092166000908152602092909252506040902090565b60006133bf613334565b6001600160a01b0387166000908152602091909152604090209050806133e586826150a6565b506001810180546001600160a01b039586166001600160a01b0319918216179091556002820180549486169482169490941790935560030180549190931691161790555050565b6000613436613334565b6001600160a01b03891660009081526020919091526040902090506008810161345f88826150a6565b506009810161346e87826150a6565b50600a81018590556006810161348485826150a6565b50815161349a90600783019060208501906143fb565b50600b81016134a984826150a6565b505050505050505050565b806134bd613334565b6001600160a01b03909316600090815260209390935260409092206010019190915550565b806134eb613334565b6001600160a01b03909316600090815260209390935260409092206011019190915550565b80613519613334565b6001600160a01b0390931660009081526020939093526040909220600c019190915550565b6001600160a01b039290921660009081526000805160206151b98339815191526020526040902060048101805460ff191660021790554260058201556006810192909255600790910155565b6001600160a01b0391821660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0996020526040902080546001600160a01b03191691909216179055565b6001600160a01b03821660009081526000805160206151b983398151915260205260409020600401805482919060ff1916600183600381111561361c5761361c614501565b02179055505050565b60008061363183614056565b604080518082018252600b81526a14ddda5d18da189bd85c9960aa1b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3534305cb0c1fabf88c04f35d35090370a9bb52f874a074b58cfeeae6de8c234818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560608201524660808201523060a0808301919091528351808303909101815260c08201845280519083012061190160f01b60e083015260e282015261010280820194909452825180820390940184526101220190915281519101209392505050565b60009081527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b460205260409020805460ff19166001179055565b60008151604114613787575060006137c6565b60006137938484614108565b90506001600160a01b0381166137ad5760009150506137c6565b846001600160a01b0316816001600160a01b0316149150505b9392505050565b6060831561383f578251600003613838576000856001600160a01b03163b116138385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611165565b5081613849565b6138498383614132565b949350505050565b336014361080159061386b57506001600160a01b03811630145b1561387b575060131936013560601c5b90565b60007f60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e613397565b60006000805160206151b9833981519152613397565b806138c5613334565b6001600160a01b03841660009081526020919091526040902060059081018054909160ff1990911690600190849081111561361c5761361c614501565b61390a613334565b6001600160a01b03821660009081526020919091526040812060110180549161393283614edd565b919050555050565b6000808212156139525761394d82615165565b612317565b5090565b60008082600281111561396b5761396b614501565b6001901b9392505050565b6000613980613334565b6001600160a01b0393909316600090815260019093016020908152604080852093855292905250902090565b60016139b6613334565b6001600160a01b039390931660009081526001909301602090815260408085209385529290529120600301805460ff1916911515919091179055565b806139fb613334565b6001600160a01b039390931660009081526020939093526040909220601301805460ff19169215159290921790915550565b6000613a37613334565b6001600160a01b03939093166000908152602093909352506040822042600d820155600e810191909155600c810191909155600501805460ff19166001179055565b80613a82613334565b6001600160a01b03909316600090815260209390935260409092206012019190915550565b6000613ab28561338d565b905060005b8351811015613ddf576000848281518110613ad457613ad4614eb1565b6020026020010151905060003a8260200151613af09190615181565b90506000613afd83613625565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff1615613b525760405163d1d36dcd60e01b815260048101829052602401611165565b613b5b8161373a565b6000613b788460800151838988815181106113c2576113c2614eb1565b905080613b97578360800151828887815181106113ee576113ee614eb1565b8351421115613bbf578351604051636634e92360e01b81526004810191909152602401611165565b88846040015184613bd09190614fde565b613bda9190614fde565b86600401541015613c275788846040015184613bf69190614fde565b613c009190614fde565b60048088015460405163cf47918160e01b8152611165939201918252602082015260400190565b613c4b8a8a866040015186613c3c9190614fde565b613c469190614fde565b613fe3565b60005a905060008086606001516001600160a01b031687604001518860a001518f604051602001613c7d929190614f6e565b60408051601f1981840301815290829052613c9791614fa5565b60006040518083038185875af1925050503d8060008114613cd4576040519150601f19603f3d011682016040523d82523d6000602084013e613cd9565b606091505b5091509150613d1a8760600151838360405180604001604052806014815260200173119d5b98dd1a5bdb8810d85b1b0811985a5b195960621b8152506137cd565b5060005a613d289085615018565b90508760200151811115613d5f576020880151604051631935f53160e01b8152600481019190915260248101829052604401611165565b6000613d6b3a83615181565b613d759089615018565b9050613d818f82614021565b336108fc8f613d903a86615181565b613d9a9190614fde565b6040518115909202916000818181858888f19350505050158015613dc2573d6000803e3d6000fd5b505050505050505050508080613dd790614edd565b915050613ab7565b505050505050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090613e1990614edd565b9182905550613e29600143615018565b40604051602001613e44929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b613e6a613334565b6002018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b8351811015613efb57826001600160a01b0316848281518110613ec957613ec9614eb1565b60200260200101516001600160a01b031603613ee9576001915050612317565b80613ef381614edd565b915050613ea4565b5060009392505050565b604080516080810182526001600160a01b038416815242602082015290810182905260006060820152613f36613334565b6001600160a01b038681166000908152600192830160209081526040808320898452825291829020855181546001600160a01b031916941693909317835584015192820192909255908201516002820190613f9190826150a6565b50606091909101516003909101805460ff191691151591909117905550505050565b613fbb613334565b6001600160a01b038216600090815260209190915260408120600f0180549161393283614edd565b80613fec613334565b6001600160a01b0384166000908152602091909152604081206004018054909190614018908490615018565b90915550505050565b8061402a613334565b6001600160a01b0384166000908152602091909152604081206004018054909190614018908490614fde565b60007f687c97506870980d9774f5f2c2cc3fd31b851a1f28e3f222da2fb0b52c189112826000015183602001518460400151856060015186608001518760a00151805190602001206040516020016140eb97969594939291909687526020870195909552604086019390935260608501919091526001600160a01b0390811660808501521660a083015260c082015260e00190565b604051602081830303815290604052805190602001209050919050565b6000806000806141188686614160565b92509250925061412882826141ad565b5090949350505050565b8151156141425781518083602001fd5b8060405162461bcd60e51b8152600401611165919061504d565b5050565b6000806000835160410361419a5760208401516040850151606086015160001a61418c88828585614266565b9550955095505050506141a6565b50508151600091506002905b9250925092565b60008260038111156141c1576141c1614501565b036141ca575050565b60018260038111156141de576141de614501565b036141fc5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561421057614210614501565b036142315760405163fce698f760e01b815260048101829052602401611165565b600382600381111561424557614245614501565b0361415c576040516335e2f38360e21b815260048101829052602401611165565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156142a1575060009150600390508261432b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156142f5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166143215750600092506001915082905061432b565b9250600091508190505b9450945094915050565b604080516101008101825260608082526000602083018190529282018390528101829052608081018290529060a082019081526020016143a76040518060c001604052806060815260200160608152602001606081526020016060815260200160008019168152602001606081525090565b81526020016143f6604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054828255906000526020600020908101928215614450579160200282015b8281111561445057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061441b565b506139529291505b808211156139525760008155600101614458565b6001600160a01b038116811461448157600080fd5b50565b803561448f8161446c565b919050565b6000602082840312156144a657600080fd5b81356137c68161446c565b60005b838110156144cc5781810151838201526020016144b4565b50506000910152565b600081518084526144ed8160208601602086016144b1565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6006811061453557634e487b7160e01b600052602160045260246000fd5b9052565b6000815160c0845261454e60c08501826144d5565b60208481015186830387830152805180845290820193509091600091908301905b808310156145985784516001600160a01b0316825293830193600192909201919083019061456f565b506040860151935086810360408801526145b281856144d5565b9350505050606083015184820360608601526145ce82826144d5565b9150506080830151608085015260a083015184820360a08601526145f282826144d5565b95945050505050565b60006101e08251818552614611828601826144d5565b915050602083015160018060a01b03808216602087015280604086015116604087015280606086015116606087015250506080830151608085015260a083015161465e60a0860182614517565b5060c083015184820360c08601526146768282614539565b60e094850151805187870152602081015161010088015260408101516101208801526060810151610140880152608081015161016088015260a081015161018088015260c08101516101a08801529094015115156101c090950194909452509092915050565b604080825283519082018190526000906020906060840190828701845b8281101561471e5781516001600160a01b0316845292840192908401906001016146f9565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561476e57601f1986840301855261475c8383516145fb565b94870194925090860190600101614740565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156147b5576147b561477d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156147e3576147e361477d565b604052919050565b600082601f8301126147fc57600080fd5b81356001600160401b038111156148155761481561477d565b614828601f8201601f19166020016147bb565b81815284602083860101111561483d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b038211156148735761487361477d565b5060051b60200190565b600082601f83011261488e57600080fd5b813560206148a361489e8361485a565b6147bb565b82815260059290921b840181019181810190868411156148c257600080fd5b8286015b848110156132d55780356148d98161446c565b83529183019183016148c6565b60008060008060008060008060006101208a8c03121561490557600080fd5b61490e8a614484565b985060208a01356001600160401b038082111561492a57600080fd5b6149368d838e016147eb565b995061494460408d01614484565b985060608c013591508082111561495a57600080fd5b6149668d838e016147eb565b975060808c013591508082111561497c57600080fd5b6149888d838e016147eb565b965060a08c0135955060c08c01359150808211156149a557600080fd5b6149b18d838e016147eb565b945060e08c01359150808211156149c757600080fd5b6149d38d838e016147eb565b93506101008c01359150808211156149ea57600080fd5b506149f78c828d0161487d565b9150509295985092959850929598565b600082601f830112614a1857600080fd5b81356020614a2861489e8361485a565b82815260059290921b84018101918181019086841115614a4757600080fd5b8286015b848110156132d55780356001600160401b0380821115614a6b5760008081fd5b9088019060c0828b03601f1901811315614a855760008081fd5b614a8d614793565b87840135815260408085013589830152606080860135828401526080915081860135614ab88161446c565b9083015260a085810135614acb8161446c565b83830152928501359284841115614ae457600091508182fd5b614af28e8b868901016147eb565b90830152508652505050918301918301614a4b565b600082601f830112614b1857600080fd5b81356020614b2861489e8361485a565b82815260059290921b84018101918181019086841115614b4757600080fd5b8286015b848110156132d55780356001600160401b03811115614b6a5760008081fd5b614b788986838b01016147eb565b845250918301918301614b4b565b60008060408385031215614b9957600080fd5b82356001600160401b0380821115614bb057600080fd5b614bbc86838701614a07565b93506020850135915080821115614bd257600080fd5b50614bdf85828601614b07565b9150509250929050565b801515811461448157600080fd5b803561448f81614be9565b60008060008060008060008060006101208a8c031215614c2157600080fd5b8935985060208a0135614c338161446c565b975060408a0135614c438161446c565b965060608a0135955060808a01359450614c5f60a08b01614bf7565b935060c08a0135925060e08a01356001600160401b0380821115614c8257600080fd5b614c8e8d838e01614a07565b93506101008c0135915080821115614ca557600080fd5b506149f78c828d01614b07565b6020815260006137c660208301846145fb565b60008060008060008060008060006101208a8c031215614ce457600080fd5b89356001600160401b0380821115614cfb57600080fd5b614d078d838e016147eb565b9a5061493660208d01614484565b60008060408385031215614d2857600080fd5b8235614d338161446c565b915060208301356001600160401b03811115614d4e57600080fd5b614bdf858286016147eb565b600080600060608486031215614d6f57600080fd5b8335614d7a8161446c565b92506020840135614d8a8161446c565b929592945050506040919091013590565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015614e2657888303603f19018552815180516001600160a01b03168452878101518885015286810151608088860181905290614e03828701826144d5565b606093840151151596909301959095525094870194925090860190600101614dc2565b509098975050505050505050565b60008060008060008060c08789031215614e4d57600080fd5b8635955060208701359450604087013593506060870135614e6d8161446c565b92506080870135614e7d8161446c565b915060a08701356001600160401b03811115614e9857600080fd5b614ea489828a016147eb565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201614eef57614eef614ec7565b5060010190565b600181811c90821680614f0a57607f821691505b602082108103614f2a57634e487b7160e01b600052602260045260246000fd5b50919050565b600081614f3f57614f3f614ec7565b506000190190565b60018060a01b03841681528260208201526060604082015260006145f260608301846144d5565b60008351614f808184602088016144b1565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008251614fb78184602087016144b1565b9190910192915050565b600060208284031215614fd357600080fd5b81516137c681614be9565b8082018082111561231757612317614ec7565b818103600083128015838313168383128216171561501157615011614ec7565b5092915050565b8181038181111561231757612317614ec7565b60008261504857634e487b7160e01b600052601260045260246000fd5b500690565b6020815260006137c660208301846144d5565b601f82111561301e57600081815260208120601f850160051c810160208610156150875750805b601f850160051c820191505b81811015613ddf57828155600101615093565b81516001600160401b038111156150bf576150bf61477d565b6150d3816150cd8454614ef6565b84615060565b602080601f83116001811461510857600084156150f05750858301515b600019600386901b1c1916600185901b178555613ddf565b600085815260208120601f198616915b8281101561513757888601518255948401946001909101908401615118565b50858210156151555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600160ff1b820161517a5761517a614ec7565b5060000390565b808202811582820484141761231757612317614ec756fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b60b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd098a2646970667358221220c815d24dfa5f884432f87cb2134b50d8cf5046fd588fe877e277dd4bd8afd56064736f6c63430008110033";

type SbFunctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunction__factory extends ContractFactory {
  constructor(...args: SbFunctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunction> {
    return super.deploy(overrides || {}) as Promise<SbFunction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunction {
    return super.attach(address) as SbFunction;
  }
  override connect(signer: Signer): SbFunction__factory {
    return super.connect(signer) as SbFunction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionInterface {
    return new utils.Interface(_abi) as SbFunctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunction {
    return new Contract(address, _abi, signerOrProvider) as SbFunction;
  }
}
