/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SbFunction,
  SbFunctionInterface,
} from "../../../../../contracts/src/Switchboard/sbFunction/SbFunction";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "AlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "EnclaveDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
    ],
    name: "EnclaveNotAtQueueIdx",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FunctionCallerNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "received",
        type: "bytes32",
      },
    ],
    name: "FunctionMrEnclaveMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "used",
        type: "uint256",
      },
    ],
    name: "GasLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxExpectedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reportedTime",
        type: "uint256",
      },
    ],
    name: "IncorrectReportedTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "InvalidEnclave",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedSender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedQueueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedQueueId",
        type: "address",
      },
    ],
    name: "QueuesDoNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "TransactionExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "FunctionAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "callId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "FunctionCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "callFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunctionWithId",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "funcs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "functionEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "functionEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "functionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveFunctionsByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFunctions",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getAllUnexecutedFunctionCalls",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct FunctionLib.FunctionCall[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFunctionsByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "setFunctionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatedSignerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "observedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextAllowedTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFailure",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "verifyFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061591a80620000216000396000f3fe6080604052600436106100f35760003560e01c8063a13001c91161008a578063c482958011610059578063c48295801461028a578063cbb3c6541461029d578063cd86c71b146102ca578063d93f1970146102dd57600080fd5b8063a13001c914610222578063a29baf1e14610242578063ab6418b414610262578063ba93166c1461027757600080fd5b8063822e99d5116100c6578063822e99d5146101955780638cc5b02c146101b55780638ef92003146101d55780639c23da501461020257600080fd5b80631fc747b7146100f8578063357f633f1461012f578063572b6c051461014f5780637096052c14610180575b600080fd5b34801561010457600080fd5b50610118610113366004614a27565b61030b565b604051610126929190614c7f565b60405180910390f35b34801561013b57600080fd5b5061011861014a366004614a27565b610bda565b34801561015b57600080fd5b5061017061016a366004614a27565b50600190565b6040519015158152602001610126565b61019361018e366004614fa4565b611310565b005b3480156101a157600080fd5b506101936101b036600461506b565b611604565b3480156101c157600080fd5b506101936101d03660046151c0565b6117df565b3480156101e157600080fd5b506101f56101f0366004614a27565b611d8b565b6040516101269190615270565b34801561020e57600080fd5b5061019361021d366004615283565b61225e565b34801561022e57600080fd5b5061017061023d366004614a27565b61239c565b34801561024e57600080fd5b5061019361025d3660046152c8565b6123ad565b34801561026e57600080fd5b50610118612a24565b610193610285366004614a27565b613082565b610193610298366004615309565b6131a1565b3480156102a957600080fd5b506102bd6102b8366004614a27565b613250565b6040516101269190615359565b6101936102d83660046153f2565b61350d565b3480156102e957600080fd5b506102fd6102f8366004615540565b61386e565b604051908152602001610126565b60608060006103186138c2565b90506000805b600283015481101561046857856001600160a01b031683600001600085600201848154811061034f5761034f6155bd565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156103e1575060018360000160008560020184815481106103a2576103a26155bd565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff16908111156103df576103df614a94565b145b8061044357506000836000016000856002018481548110610404576104046155bd565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff169081111561044157610441614a94565b145b156104565781610452816155e9565b9250505b80610460816155e9565b91505061031e565b506000816001600160401b0381111561048357610483614d20565b6040519080825280602002602001820160405280156104ac578160200160208202803683370190505b5090506000826001600160401b038111156104c9576104c9614d20565b60405190808252806020026020018201604052801561050257816020015b6104ef6148cb565b8152602001906001900390816104e75790505b50905060005b6002850154811015610bcd57876001600160a01b0316856000016000876002018481548110610539576105396155bd565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156105cb5750600185600001600087600201848154811061058c5761058c6155bd565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff16908111156105c9576105c9614a94565b145b8061062d575060008560000160008760020184815481106105ee576105ee6155bd565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff169081111561062b5761062b614a94565b145b15610bbb5784600001600086600201838154811061064d5761064d6155bd565b60009182526020808320909101546001600160a01b0316835282019290925260409081019091208151610100810190925280548290829061068d90615602565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990615602565b80156107065780601f106106db57610100808354040283529160200191610706565b820191906000526020600020905b8154815290600101906020018083116106e957829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff169081111561076357610763614a94565b600581111561077457610774614a94565b8152602001600682016040518060c001604052908160008201805461079890615602565b80601f01602080910402602001604051908101604052809291908181526020018280546107c490615602565b80156108115780601f106107e657610100808354040283529160200191610811565b820191906000526020600020905b8154815290600101906020018083116107f457829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561087357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610855575b5050505050815260200160028201805461088c90615602565b80601f01602080910402602001604051908101604052809291908181526020018280546108b890615602565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b5050505050815260200160038201805461091e90615602565b80601f016020809104026020016040519081016040528092919081815260200182805461094a90615602565b80156109975780601f1061096c57610100808354040283529160200191610997565b820191906000526020600020905b81548152906001019060200180831161097a57829003601f168201915b505050505081526020016004820180546109b090615602565b80601f01602080910402602001604051908101604052809291908181526020018280546109dc90615602565b8015610a295780601f106109fe57610100808354040283529160200191610a29565b820191906000526020600020905b815481529060010190602001808311610a0c57829003601f168201915b50505050508152602001600582018054610a4290615602565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6e90615602565b8015610abb5780601f10610a9057610100808354040283529160200191610abb565b820191906000526020600020905b815481529060010190602001808311610a9e57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015282610b378661563c565b95508581518110610b4a57610b4a6155bd565b6020026020010181905250846002018181548110610b6a57610b6a6155bd565b9060005260206000200160009054906101000a90046001600160a01b0316838581518110610b9a57610b9a6155bd565b60200260200101906001600160a01b031690816001600160a01b0316815250505b80610bc5816155e9565b915050610508565b5090969095509350505050565b6060806000610be76138c2565b90506000805b6002830154811015610c7157856001600160a01b0316836000016000856002018481548110610c1e57610c1e6155bd565b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020600101541603610c5f5781610c5b816155e9565b9250505b80610c69816155e9565b915050610bed565b506000816001600160401b03811115610c8c57610c8c614d20565b604051908082528060200260200182016040528015610cb5578160200160208202803683370190505b5090506000826001600160401b03811115610cd257610cd2614d20565b604051908082528060200260200182016040528015610d0b57816020015b610cf86148cb565b815260200190600190039081610cf05790505b50905060005b6002850154811015610bcd57876001600160a01b0316856000016000876002018481548110610d4257610d426155bd565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190206001015416036112fe57846000016000866002018381548110610d9057610d906155bd565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290610dd090615602565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfc90615602565b8015610e495780601f10610e1e57610100808354040283529160200191610e49565b820191906000526020600020905b815481529060010190602001808311610e2c57829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115610ea657610ea6614a94565b6005811115610eb757610eb7614a94565b8152602001600682016040518060c0016040529081600082018054610edb90615602565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0790615602565b8015610f545780601f10610f2957610100808354040283529160200191610f54565b820191906000526020600020905b815481529060010190602001808311610f3757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610fb657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f98575b50505050508152602001600282018054610fcf90615602565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffb90615602565b80156110485780601f1061101d57610100808354040283529160200191611048565b820191906000526020600020905b81548152906001019060200180831161102b57829003601f168201915b5050505050815260200160038201805461106190615602565b80601f016020809104026020016040519081016040528092919081815260200182805461108d90615602565b80156110da5780601f106110af576101008083540402835291602001916110da565b820191906000526020600020905b8154815290600101906020018083116110bd57829003601f168201915b505050505081526020016004820180546110f390615602565b80601f016020809104026020016040519081016040528092919081815260200182805461111f90615602565b801561116c5780601f106111415761010080835404028352916020019161116c565b820191906000526020600020905b81548152906001019060200180831161114f57829003601f168201915b5050505050815260200160058201805461118590615602565b80601f01602080910402602001604051908101604052809291908181526020018280546111b190615602565b80156111fe5780601f106111d3576101008083540402835291602001916111fe565b820191906000526020600020905b8154815290600101906020018083116111e157829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e084015201528261127a8661563c565b9550858151811061128d5761128d6155bd565b60200260200101819052508460020181815481106112ad576112ad6155bd565b9060005260206000200160009054906101000a90046001600160a01b03168385815181106112dd576112dd6155bd565b60200260200101906001600160a01b031690816001600160a01b0316815250505b80611308816155e9565b915050610d11565b6002600061132a6000805160206158a58339815191525490565b90506113746113376138e6565b6001600160a01b031660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604090205460ff1690565b156113925760405163887efaa560e01b815260040160405180910390fd5b8181036113b25760405163887efaa560e01b815260040160405180910390fd5b80821180156113c057508015155b156113de5760405163887efaa560e01b815260040160405180910390fd5b60005b84518110156115e75760008582815181106113fe576113fe6155bd565b60200260200101519050600061141382613913565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff161561146d5760405163d1d36dcd60e01b8152600481018290526024015b60405180910390fd5b61147681613a28565b60006114a0836080015183898781518110611493576114936155bd565b6020026020010151613a62565b9050806114e3578260800151828886815181106114bf576114bf6155bd565b602002602001015160405163d491963d60e01b815260040161146493929190615653565b825142111561150b578251604051636634e92360e01b81526004810191909152602401611464565b600080306001600160a01b0316348660a00151876080015160405160200161153492919061567a565b60408051601f198184030181529082905261154e916156b1565b60006040518083038185875af1925050503d806000811461158b576040519150601f19603f3d011682016040523d82523d6000602084013e611590565b606091505b50915091506115ce30838360405180604001604052806015815260200174119bdc9dd85c99195c8810d85b1b0811985a5b1959605a1b815250613abb565b50505050505080806115df906155e9565b9150506113e1565b506115fe816000805160206158a583398151915255565b50505050565b6001600061161e6000805160206158a58339815191525490565b905061162b6113376138e6565b156116495760405163887efaa560e01b815260040160405180910390fd5b8181036116695760405163887efaa560e01b815260040160405180910390fd5b808211801561167757508015155b156116955760405163887efaa560e01b815260040160405180910390fd5b61169e8b613b3f565b6116c657604051631e1d8eb160e11b81526001600160a01b038c166004820152602401611464565b60006116d18c613b74565b60018101549091506001600160a01b0316331461171857600181015460405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401611464565b6002810154600382015461173e918e918e918e916001600160a01b039182169116613b9c565b61174d8c8a8a8a8a8a8a613c13565b6117588c6000613ca3565b6117638c6000613cd1565b61176e8c6000613cff565b6002810154611788906001600160a01b0316600080613d2d565b60028101546117a2906000906001600160a01b0316613d79565b60028101546117bb906001600160a01b03166001613dc6565b506117d2816000805160206158a583398151915255565b5050505050505050505050565b600160006117f96000805160206158a58339815191525490565b90506118066113376138e6565b156118245760405163887efaa560e01b815260040160405180910390fd5b8181036118445760405163887efaa560e01b815260040160405180910390fd5b808211801561185257508015155b156118705760405163887efaa560e01b815260040160405180910390fd5b60006118ba61187d6138e6565b6001600160a01b0390811660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd09960205260409020541690565b905060006118c78c613b74565b60038101549091506000906118e4906001600160a01b0316613e14565b6001600160a01b0380851660009081526000805160206158c58339815191526020526040902054919250166119375760405163170c65f360e21b81526001600160a01b0384166004820152602401611464565b826001600160a01b0316816001018f81548110611956576119566155bd565b6000918252602090912001546001600160a01b0316146119a9576003820154604051630cb3ac2760e11b81526001600160a01b0391821660048201529084166024820152604481018f9052606401611464565b604051637da566ff60e11b81526001600160a01b0384166004820152309063fb4acdfe90602401602060405180830381865afa1580156119ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1191906156cd565b611a39576040516345f60d2760e11b81526001600160a01b0384166004820152602401611464565b611a4283613e3c565b6002015460038301546001600160a01b03908116911614611aa45760038201546001600160a01b0316611a7484613e3c565b60020154604051630ada499f60e21b81526001600160a01b03928316600482015291166024820152604401611464565b8815611aed576008810154600c8301541015611ada57600c820154611ad5908e90611ad09060016156ea565b613cff565b611b17565b611ae58d6002613e52565b505050611d75565b6011820154600003611b0357611b038d42613ca3565b611b0c8d613e98565b611b178d6000613cff565b6002820154600090611b31906001600160a01b0316613e3c565b600781015490915015801590611b4b575088816007015414155b15611b79576007810154604051632a96c8c760e11b8152611464918b91600401918252602082015260400190565b506000611b8e611b898d426156fd565b613ed0565b90506014811115611bc857611ba44260146156ea565b604051631ff8ef4960e11b81526004810191909152602481018d9052604401611464565b506009810154610100900460ff168015611c4b57506003820154611c49906001600160a01b03168e611bfa6001613eec565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b155b15611c5b57611ae58d6005613e52565b6002820154611c80906001600160a01b031689611c7b4262093a806156ea565b613d2d565b6002820154611c99908d906001600160a01b0316613d79565b806003015482600401541015611cb457611ae58d6004613e52565b600f82015460009015611cd757600f830154611cd290600190615724565b611cda565b60005b90505b600081118015611cfb5750611cf28e82613f0c565b6003015460ff16155b15611d1c57611d0a8e82613f42565b80611d148161563c565b915050611cdd565b611d278e6000613f88565b50611d328d8b613fc3565b611d618d826001018054905084600c01600601546001611d5291906156ea565b611d5c9190615737565b61400f565b611d718d8260030154898961403d565b5050505b6117d2816000805160206158a583398151915255565b611d936148cb565b611d9c82613b74565b60405180610100016040529081600082018054611db890615602565b80601f0160208091040260200160405190810160405280929190818152602001828054611de490615602565b8015611e315780601f10611e0657610100808354040283529160200191611e31565b820191906000526020600020905b815481529060010190602001808311611e1457829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115611e8e57611e8e614a94565b6005811115611e9f57611e9f614a94565b8152602001600682016040518060c0016040529081600082018054611ec390615602565b80601f0160208091040260200160405190810160405280929190818152602001828054611eef90615602565b8015611f3c5780601f10611f1157610100808354040283529160200191611f3c565b820191906000526020600020905b815481529060010190602001808311611f1f57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611f9e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f80575b50505050508152602001600282018054611fb790615602565b80601f0160208091040260200160405190810160405280929190818152602001828054611fe390615602565b80156120305780601f1061200557610100808354040283529160200191612030565b820191906000526020600020905b81548152906001019060200180831161201357829003601f168201915b5050505050815260200160038201805461204990615602565b80601f016020809104026020016040519081016040528092919081815260200182805461207590615602565b80156120c25780601f10612097576101008083540402835291602001916120c2565b820191906000526020600020905b8154815290600101906020018083116120a557829003601f168201915b505050505081526020016004820180546120db90615602565b80601f016020809104026020016040519081016040528092919081815260200182805461210790615602565b80156121545780601f1061212957610100808354040283529160200191612154565b820191906000526020600020905b81548152906001019060200180831161213757829003601f168201915b5050505050815260200160058201805461216d90615602565b80601f016020809104026020016040519081016040528092919081815260200182805461219990615602565b80156121e65780601f106121bb576101008083540402835291602001916121e6565b820191906000526020600020905b8154815290600101906020018083116121c957829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015292915050565b600061226983613b74565b905060006122756138e6565b6007830154909150158015906122f157506122ef826006016001018054806020026020016040519081016040528092919081815260200182805480156122e457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116122c6575b50505050508261437d565b155b1561232257604051630724d91960e31b81526001600160a01b03808616600483015282166024820152604401611464565b61232d846001613f88565b6123408483600c016003015483866143e2565b81600c0160030154816001600160a01b0316856001600160a01b03167fae486202240e733a2f4039ac3d255ede4cb00b1050bbd7458e8a63e6a11443348660405161238b9190615759565b60405180910390a46115fe84614490565b60006123a782613b3f565b92915050565b600160006123c76000805160206158a58339815191525490565b90506123d46113376138e6565b156123f25760405163887efaa560e01b815260040160405180910390fd5b8181036124125760405163887efaa560e01b815260040160405180910390fd5b808211801561242057508015155b1561243e5760405163887efaa560e01b815260040160405180910390fd5b600061244985613b74565b6040518061010001604052908160008201805461246590615602565b80601f016020809104026020016040519081016040528092919081815260200182805461249190615602565b80156124de5780601f106124b3576101008083540402835291602001916124de565b820191906000526020600020905b8154815290600101906020018083116124c157829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff169081111561253b5761253b614a94565b600581111561254c5761254c614a94565b8152602001600682016040518060c001604052908160008201805461257090615602565b80601f016020809104026020016040519081016040528092919081815260200182805461259c90615602565b80156125e95780601f106125be576101008083540402835291602001916125e9565b820191906000526020600020905b8154815290600101906020018083116125cc57829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561264b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161262d575b5050505050815260200160028201805461266490615602565b80601f016020809104026020016040519081016040528092919081815260200182805461269090615602565b80156126dd5780601f106126b2576101008083540402835291602001916126dd565b820191906000526020600020905b8154815290600101906020018083116126c057829003601f168201915b505050505081526020016003820180546126f690615602565b80601f016020809104026020016040519081016040528092919081815260200182805461272290615602565b801561276f5780601f106127445761010080835404028352916020019161276f565b820191906000526020600020905b81548152906001019060200180831161275257829003601f168201915b5050505050815260200160048201805461278890615602565b80601f01602080910402602001604051908101604052809291908181526020018280546127b490615602565b80156128015780601f106127d657610100808354040283529160200191612801565b820191906000526020600020905b8154815290600101906020018083116127e457829003601f168201915b5050505050815260200160058201805461281a90615602565b80601f016020809104026020016040519081016040528092919081815260200182805461284690615602565b80156128935780601f1061286857610100808354040283529160200191612893565b820191906000526020600020905b81548152906001019060200180831161287657829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152908101919091528101519091506001600160a01b0316331461294f57602081015160405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401611464565b838160800151101561298457608081015160405163cf47918160e01b8152611464918691600401918252602082015260400190565b61298e85856144c0565b6040516001600160a01b0387169085156108fc029086906000818181858888f193505050501580156129c4573d6000803e3d6000fd5b5083866001600160a01b0316866001600160a01b03167ff06cf8a96225f4a866a9e590c50c1bbc3be2dd6771fb87613346bcd7cb2183ca60405160405180910390a450612a1d816000805160206158a583398151915255565b5050505050565b6060806000612a316138c2565b60028101549091506000816001600160401b03811115612a5357612a53614d20565b604051908082528060200260200182016040528015612a7c578160200160208202803683370190505b5090506000826001600160401b03811115612a9957612a99614d20565b604051908082528060200260200182016040528015612ad257816020015b612abf6148cb565b815260200190600190039081612ab75790505b50905060005b600285015481101561307657846000016000866002018381548110612aff57612aff6155bd565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290612b3f90615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612b6b90615602565b8015612bb85780601f10612b8d57610100808354040283529160200191612bb8565b820191906000526020600020905b815481529060010190602001808311612b9b57829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115612c1557612c15614a94565b6005811115612c2657612c26614a94565b8152602001600682016040518060c0016040529081600082018054612c4a90615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612c7690615602565b8015612cc35780601f10612c9857610100808354040283529160200191612cc3565b820191906000526020600020905b815481529060010190602001808311612ca657829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015612d2557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612d07575b50505050508152602001600282018054612d3e90615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612d6a90615602565b8015612db75780601f10612d8c57610100808354040283529160200191612db7565b820191906000526020600020905b815481529060010190602001808311612d9a57829003601f168201915b50505050508152602001600382018054612dd090615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612dfc90615602565b8015612e495780601f10612e1e57610100808354040283529160200191612e49565b820191906000526020600020905b815481529060010190602001808311612e2c57829003601f168201915b50505050508152602001600482018054612e6290615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612e8e90615602565b8015612edb5780601f10612eb057610100808354040283529160200191612edb565b820191906000526020600020905b815481529060010190602001808311612ebe57829003601f168201915b50505050508152602001600582018054612ef490615602565b80601f0160208091040260200160405190810160405280929190818152602001828054612f2090615602565b8015612f6d5780601f10612f4257610100808354040283529160200191612f6d565b820191906000526020600020905b815481529060010190602001808311612f5057829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015282612fe98661563c565b95508581518110612ffc57612ffc6155bd565b602002602001018190525084600201818154811061301c5761301c6155bd565b9060005260206000200160009054906101000a90046001600160a01b031683858151811061304c5761304c6155bd565b6001600160a01b03909216602092830291909101909101528061306e816155e9565b915050612ad8565b50909590945092505050565b6001600061309c6000805160206158a58339815191525490565b90506130a96113376138e6565b156130c75760405163887efaa560e01b815260040160405180910390fd5b8181036130e75760405163887efaa560e01b815260040160405180910390fd5b80821180156130f557508015155b156131135760405163887efaa560e01b815260040160405180910390fd5b61311c83613b3f565b61314457604051631e1d8eb160e11b81526001600160a01b0384166004820152602401611464565b61314e83346144fe565b604051349033906001600160a01b038616907fcfa8ce8f8d66cce7f7052bcba7d1f853a503d00896bcd7dfdb3ff4b1ad1f222d90600090a461319c816000805160206158a583398151915255565b505050565b600160006131bb6000805160206158a58339815191525490565b90506131c86113376138e6565b156131e65760405163887efaa560e01b815260040160405180910390fd5b8181036132065760405163887efaa560e01b815260040160405180910390fd5b808211801561321457508015155b156132325760405163887efaa560e01b815260040160405180910390fd5b600061323c614533565b90506117bb818d8d8d8d8d8d8d8d8d61350d565b6060600061325c6138c2565b6001600160a01b0384166000908152602082905260408120600f01549192505b6000821180156132b557506001600160a01b0385166000908152600184016020908152604080832085845290915290206003015460ff16155b80156132e857506001600160a01b0385166000908152600180850160209081526040808420868552909152909120015415155b1561330d57816132f78161563c565b9250508080613305906155e9565b91505061327c565b806000816001600160401b0381111561332857613328614d20565b60405190808252806020026020018201604052801561338f57816020015b61337c604051806080016040528060006001600160a01b0316815260200160008152602001606081526020016000151581525090565b8152602001906001900390816133465790505b506001600160a01b0388166000908152602087905260408120600f0154919250906133bb908590615724565b90505b6001600160a01b0388166000908152602087905260409020600f0154811015613502576001600160a01b0380891660009081526001808901602090815260408084208685528252928390208351608081018552815490951685529182015490840152600281018054919284019161343490615602565b80601f016020809104026020016040519081016040528092919081815260200182805461346090615602565b80156134ad5780601f10613482576101008083540402835291602001916134ad565b820191906000526020600020905b81548152906001019060200180831161349057829003601f168201915b50505091835250506003919091015460ff161515602090910152826134d18561563c565b945084815181106134e4576134e46155bd565b602002602001018190525080806134fa906155e9565b9150506133be565b509695505050505050565b600160006135276000805160206158a58339815191525490565b90506135346113376138e6565b156135525760405163887efaa560e01b815260040160405180910390fd5b8181036135725760405163887efaa560e01b815260040160405180910390fd5b808211801561358057508015155b1561359e5760405163887efaa560e01b815260040160405180910390fd5b6135a78c613b3f565b156135d057604051638f939dfd60e01b81526001600160a01b038d166004820152602401611464565b60006135da614533565b6040516363e08a1f60e11b81526001600160a01b038083166004830152600060248301528c811660448301528d166064820152909150309063c7c1143e90608401600060405180830381600087803b15801561363557600080fd5b505af1158015613649573d6000803e3d6000fd5b5050505060006136588b613e14565b604080516101c08101825282546001600160a01b031681526001830180548351602082810282018101909552818152929493808601939291908301828280156136ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116136ac575b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561374057602002820191906000526020600020905b81548152602001906001019080831161372c575b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581526020016009820160019054906101000a900460ff16151515158152602001600a8201548152602001600b8201548152602001600c8201548152505090506137d98e826020015151836101a001516001611d5291906156ea565b506137e78d8d8d848e613b9c565b6137f68d8a8a8a8a8a8a613c13565b6137ff8d6145ae565b6138098d346144fe565b8c6001600160a01b03168b6001600160a01b03167ff91c401ec9e7a7f7987a949ca22fe503608aed50c54cb3d2b64039d8a4b60d4260405160405180910390a350613860816000805160206158a583398151915255565b505050505050505050505050565b60006138b76040518060c00160405280898152602001888152602001878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815250613913565b979650505050505050565b7f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89790565b336014361080159061390057506001600160a01b03811630145b15613910575060131936013560601c5b90565b60008061391f836145ec565b604080518082018252600b81526a14ddda5d18da189bd85c9960aa1b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3534305cb0c1fabf88c04f35d35090370a9bb52f874a074b58cfeeae6de8c234818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560608201524660808201523060a0808301919091528351808303909101815260c08201845280519083012061190160f01b60e083015260e282015261010280820194909452825180820390940184526101220190915281519101209392505050565b60009081527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b460205260409020805460ff19166001179055565b60008151604114613a7557506000613ab4565b6000613a81848461469e565b90506001600160a01b038116613a9b576000915050613ab4565b846001600160a01b0316816001600160a01b0316149150505b9392505050565b60608315613b2d578251600003613b26576000856001600160a01b03163b11613b265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611464565b5081613b37565b613b3783836146c8565b949350505050565b600080613b4a6138c2565b6001600160a01b039384166000908152602091909152604090206001015490921690911415919050565b6000613b7e6138c2565b6001600160a01b039092166000908152602092909252506040902090565b6000613ba66138c2565b6001600160a01b038716600090815260209190915260409020905080613bcc86826157b2565b506001810180546001600160a01b039586166001600160a01b0319918216179091556002820180549486169482169490941790935560030180549190931691161790555050565b6000613c1d6138c2565b6001600160a01b038916600090815260209190915260409020905060088101613c4688826157b2565b5060098101613c5587826157b2565b50600a8101613c6486826157b2565b5060068101613c7385826157b2565b508151613c89906007830190602085019061498e565b50600b8101613c9884826157b2565b505050505050505050565b80613cac6138c2565b6001600160a01b03909316600090815260209390935260409092206010019190915550565b80613cda6138c2565b6001600160a01b03909316600090815260209390935260409092206011019190915550565b80613d086138c2565b6001600160a01b0390931660009081526020939093526040909220600c019190915550565b6001600160a01b039290921660009081526000805160206158c58339815191526020526040902060048101805460ff191660021790554260058201556006810192909255600790910155565b6001600160a01b0391821660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0996020526040902080546001600160a01b03191691909216179055565b6001600160a01b03821660009081526000805160206158c583398151915260205260409020600401805482919060ff19166001836003811115613e0b57613e0b614a94565b02179055505050565b60007f60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e613b7e565b60006000805160206158c5833981519152613b7e565b80613e5b6138c2565b6001600160a01b03841660009081526020919091526040902060059081018054909160ff19909116906001908490811115613e0b57613e0b614a94565b613ea06138c2565b6001600160a01b038216600090815260209190915260408120601101805491613ec8836155e9565b919050555050565b600080821215613ee857613ee382615871565b6123a7565b5090565b600080826002811115613f0157613f01614a94565b6001901b9392505050565b6000613f166138c2565b6001600160a01b0393909316600090815260019093016020908152604080852093855292905250902090565b6001613f4c6138c2565b6001600160a01b039390931660009081526001909301602090815260408085209385529290529120600301805460ff1916911515919091179055565b80613f916138c2565b6001600160a01b039390931660009081526020939093526040909220601301805460ff19169215159290921790915550565b6000613fcd6138c2565b6001600160a01b03939093166000908152602093909352506040822042600d820155600e810191909155600c810191909155600501805460ff19166001179055565b806140186138c2565b6001600160a01b03909316600090815260209390935260409092206012019190915550565b600061404885613b74565b905060005b835181101561437557600084828151811061406a5761406a6155bd565b6020026020010151905060003a8260200151614086919061588d565b9050600061409383613913565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff16156140e85760405163d1d36dcd60e01b815260048101829052602401611464565b6140f181613a28565b600061410e846080015183898881518110611493576114936155bd565b90508061412d578360800151828887815181106114bf576114bf6155bd565b8351421115614155578351604051636634e92360e01b81526004810191909152602401611464565b8884604001518461416691906156ea565b61417091906156ea565b866004015410156141bd578884604001518461418c91906156ea565b61419691906156ea565b60048088015460405163cf47918160e01b8152611464939201918252602082015260400190565b6141e18a8a8660400151866141d291906156ea565b6141dc91906156ea565b6144c0565b60005a905060008086606001516001600160a01b031687604001518860a001518f60405160200161421392919061567a565b60408051601f198184030181529082905261422d916156b1565b60006040518083038185875af1925050503d806000811461426a576040519150601f19603f3d011682016040523d82523d6000602084013e61426f565b606091505b50915091506142b08760600151838360405180604001604052806014815260200173119d5b98dd1a5bdb8810d85b1b0811985a5b195960621b815250613abb565b5060005a6142be9085615724565b905087602001518111156142f5576020880151604051631935f53160e01b8152600481019190915260248101829052604401611464565b60006143013a8361588d565b61430b9089615724565b90506143178f826144fe565b336108fc8f6143263a8661588d565b61433091906156ea565b6040518115909202916000818181858888f19350505050158015614358573d6000803e3d6000fd5b50505050505050505050808061436d906155e9565b91505061404d565b505050505050565b6000805b83518110156143d857826001600160a01b03168482815181106143a6576143a66155bd565b60200260200101516001600160a01b0316036143c65760019150506123a7565b806143d0816155e9565b915050614381565b5060009392505050565b604080516080810182526001600160a01b0384168152426020820152908101829052600060608201526144136138c2565b6001600160a01b038681166000908152600192830160209081526040808320898452825291829020855181546001600160a01b03191694169390931783558401519282019290925590820151600282019061446e90826157b2565b50606091909101516003909101805460ff191691151591909117905550505050565b6144986138c2565b6001600160a01b038216600090815260209190915260408120600f01805491613ec8836155e9565b806144c96138c2565b6001600160a01b03841660009081526020919091526040812060040180549091906144f5908490615724565b90915550505050565b806145076138c2565b6001600160a01b03841660009081526020919091526040812060040180549091906144f59084906156ea565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090614565906155e9565b9182905550614575600143615724565b40604051602001614590929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b6145b66138c2565b6002018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055565b60007f687c97506870980d9774f5f2c2cc3fd31b851a1f28e3f222da2fb0b52c189112826000015183602001518460400151856060015186608001518760a001518051906020012060405160200161468197969594939291909687526020870195909552604086019390935260608501919091526001600160a01b0390811660808501521660a083015260c082015260e00190565b604051602081830303815290604052805190602001209050919050565b6000806000806146ae86866146f6565b9250925092506146be8282614743565b5090949350505050565b8151156146d85781518083602001fd5b8060405162461bcd60e51b81526004016114649190615759565b5050565b600080600083516041036147305760208401516040850151606086015160001a614722888285856147fc565b95509550955050505061473c565b50508151600091506002905b9250925092565b600082600381111561475757614757614a94565b03614760575050565b600182600381111561477457614774614a94565b036147925760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156147a6576147a6614a94565b036147c75760405163fce698f760e01b815260048101829052602401611464565b60038260038111156147db576147db614a94565b036146f2576040516335e2f38360e21b815260048101829052602401611464565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561483757506000915060039050826148c1565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561488b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166148b7575060009250600191508290506148c1565b9250600091508190505b9450945094915050565b604080516101008101825260608082526000602083018190529282018390528101829052608081018290529060a0820190815260200161493a6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b8152602001614989604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b8280548282559060005260206000209081019282156149e3579160200282015b828111156149e357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906149ae565b50613ee89291505b80821115613ee857600081556001016149eb565b6001600160a01b0381168114614a1457600080fd5b50565b8035614a22816149ff565b919050565b600060208284031215614a3957600080fd5b8135613ab4816149ff565b60005b83811015614a5f578181015183820152602001614a47565b50506000910152565b60008151808452614a80816020860160208601614a44565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60068110614ac857634e487b7160e01b600052602160045260246000fd5b9052565b6000815160c08452614ae160c0850182614a68565b60208481015186830387830152805180845290820193509091600091908301905b80831015614b2b5784516001600160a01b03168252938301936001929092019190830190614b02565b50604086015193508681036040880152614b458185614a68565b935050505060608301518482036060860152614b618282614a68565b91505060808301518482036080860152614b7b8282614a68565b91505060a083015184820360a0860152614b958282614a68565b95945050505050565b60006101e08251818552614bb482860182614a68565b915050602083015160018060a01b03808216602087015280604086015116604087015280606086015116606087015250506080830151608085015260a0830151614c0160a0860182614aaa565b5060c083015184820360c0860152614c198282614acc565b60e094850151805187870152602081015161010088015260408101516101208801526060810151610140880152608081015161016088015260a081015161018088015260c08101516101a08801529094015115156101c090950194909452509092915050565b604080825283519082018190526000906020906060840190828701845b82811015614cc15781516001600160a01b031684529284019290840190600101614c9c565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015614d1157601f19868403018552614cff838351614b9e565b94870194925090860190600101614ce3565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614d5857614d58614d20565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614d8657614d86614d20565b604052919050565b60006001600160401b03821115614da757614da7614d20565b5060051b60200190565b600082601f830112614dc257600080fd5b81356001600160401b03811115614ddb57614ddb614d20565b614dee601f8201601f1916602001614d5e565b818152846020838601011115614e0357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112614e3157600080fd5b81356020614e46614e4183614d8e565b614d5e565b82815260059290921b84018101918181019086841115614e6557600080fd5b8286015b848110156135025780356001600160401b0380821115614e895760008081fd5b9088019060c0828b03601f1901811315614ea35760008081fd5b614eab614d36565b87840135815260408085013589830152606080860135828401526080915081860135614ed6816149ff565b9083015260a085810135614ee9816149ff565b83830152928501359284841115614f0257600091508182fd5b614f108e8b86890101614db1565b90830152508652505050918301918301614e69565b600082601f830112614f3657600080fd5b81356020614f46614e4183614d8e565b82815260059290921b84018101918181019086841115614f6557600080fd5b8286015b848110156135025780356001600160401b03811115614f885760008081fd5b614f968986838b0101614db1565b845250918301918301614f69565b60008060408385031215614fb757600080fd5b82356001600160401b0380821115614fce57600080fd5b614fda86838701614e20565b93506020850135915080821115614ff057600080fd5b50614ffd85828601614f25565b9150509250929050565b600082601f83011261501857600080fd5b81356020615028614e4183614d8e565b82815260059290921b8401810191818101908684111561504757600080fd5b8286015b8481101561350257803561505e816149ff565b835291830191830161504b565b60008060008060008060008060006101208a8c03121561508a57600080fd5b6150938a614a17565b985060208a01356001600160401b03808211156150af57600080fd5b6150bb8d838e01614db1565b99506150c960408d01614a17565b985060608c01359150808211156150df57600080fd5b6150eb8d838e01614db1565b975060808c013591508082111561510157600080fd5b61510d8d838e01614db1565b965060a08c013591508082111561512357600080fd5b61512f8d838e01614db1565b955060c08c013591508082111561514557600080fd5b6151518d838e01614db1565b945060e08c013591508082111561516757600080fd5b6151738d838e01614db1565b93506101008c013591508082111561518a57600080fd5b506151978c828d01615007565b9150509295985092959850929598565b8015158114614a1457600080fd5b8035614a22816151a7565b60008060008060008060008060006101208a8c0312156151df57600080fd5b8935985060208a01356151f1816149ff565b975060408a0135615201816149ff565b965060608a0135955060808a0135945061521d60a08b016151b5565b935060c08a0135925060e08a01356001600160401b038082111561524057600080fd5b61524c8d838e01614e20565b93506101008c013591508082111561526357600080fd5b506151978c828d01614f25565b602081526000613ab46020830184614b9e565b6000806040838503121561529657600080fd5b82356152a1816149ff565b915060208301356001600160401b038111156152bc57600080fd5b614ffd85828601614db1565b6000806000606084860312156152dd57600080fd5b83356152e8816149ff565b925060208401356152f8816149ff565b929592945050506040919091013590565b60008060008060008060008060006101208a8c03121561532857600080fd5b89356001600160401b038082111561533f57600080fd5b61534b8d838e01614db1565b9a506150bb60208d01614a17565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156153e457888303603f19018552815180516001600160a01b031684528781015188850152868101516080888601819052906153c182870182614a68565b606093840151151596909301959095525094870194925090860190600101615380565b509098975050505050505050565b6000806000806000806000806000806101408b8d03121561541257600080fd5b61541b8b614a17565b995060208b01356001600160401b038082111561543757600080fd5b6154438e838f01614db1565b9a5061545160408e01614a17565b995061545f60608e01614a17565b985060808d013591508082111561547557600080fd5b6154818e838f01614db1565b975060a08d013591508082111561549757600080fd5b6154a38e838f01614db1565b965060c08d01359150808211156154b957600080fd5b6154c58e838f01614db1565b955060e08d01359150808211156154db57600080fd5b6154e78e838f01614db1565b94506101008d01359150808211156154fe57600080fd5b61550a8e838f01614db1565b93506101208d013591508082111561552157600080fd5b5061552e8d828e01615007565b9150509295989b9194979a5092959850565b60008060008060008060c0878903121561555957600080fd5b8635955060208701359450604087013593506060870135615579816149ff565b92506080870135615589816149ff565b915060a08701356001600160401b038111156155a457600080fd5b6155b089828a01614db1565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016155fb576155fb6155d3565b5060010190565b600181811c9082168061561657607f821691505b60208210810361563657634e487b7160e01b600052602260045260246000fd5b50919050565b60008161564b5761564b6155d3565b506000190190565b60018060a01b0384168152826020820152606060408201526000614b956060830184614a68565b6000835161568c818460208801614a44565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516156c3818460208701614a44565b9190910192915050565b6000602082840312156156df57600080fd5b8151613ab4816151a7565b808201808211156123a7576123a76155d3565b818103600083128015838313168383128216171561571d5761571d6155d3565b5092915050565b818103818111156123a7576123a76155d3565b60008261575457634e487b7160e01b600052601260045260246000fd5b500690565b602081526000613ab46020830184614a68565b601f82111561319c57600081815260208120601f850160051c810160208610156157935750805b601f850160051c820191505b818110156143755782815560010161579f565b81516001600160401b038111156157cb576157cb614d20565b6157df816157d98454615602565b8461576c565b602080601f83116001811461581457600084156157fc5750858301515b600019600386901b1c1916600185901b178555614375565b600085815260208120601f198616915b8281101561584357888601518255948401946001909101908401615824565b50858210156158615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600160ff1b8201615886576158866155d3565b5060000390565b80820281158282048414176123a7576123a76155d356fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b60b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd098a26469706673582212205071071b4f3914fc096f8325742440ef80bf3c910d58148880549430dcd61bc464736f6c63430008110033";

type SbFunctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunction__factory extends ContractFactory {
  constructor(...args: SbFunctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunction> {
    return super.deploy(overrides || {}) as Promise<SbFunction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunction {
    return super.attach(address) as SbFunction;
  }
  override connect(signer: Signer): SbFunction__factory {
    return super.connect(signer) as SbFunction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionInterface {
    return new utils.Interface(_abi) as SbFunctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunction {
    return new Contract(address, _abi, signerOrProvider) as SbFunction;
  }
}
