/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SbFunction,
  SbFunctionInterface,
} from "../../../../../contracts/src/Switchboard/sbFunction/SbFunction";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "AlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "EnclaveDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
    ],
    name: "EnclaveNotAtQueueIdx",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FunctionCallerNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "received",
        type: "bytes32",
      },
    ],
    name: "FunctionMrEnclaveMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "used",
        type: "uint256",
      },
    ],
    name: "GasLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxExpectedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reportedTime",
        type: "uint256",
      },
    ],
    name: "IncorrectReportedTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "InvalidEnclave",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedSender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedQueueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedQueueId",
        type: "address",
      },
    ],
    name: "QueuesDoNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "TransactionExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "FunctionAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "callId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "FunctionCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "callFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "version",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "version",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunctionWithId",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "funcs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "functionEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "functionEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "functionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveFunctionsByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFunctions",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getAllUnexecutedFunctionCalls",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct FunctionLib.FunctionCall[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFunctionsByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "version",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "setFunctionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatedSignerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "observedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextAllowedTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFailure",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "verifyFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061562780620000216000396000f3fe6080604052600436106100f35760003560e01c806399d97e921161008a578063ab6418b411610059578063ab6418b414610288578063ba93166c1461029d578063cbb3c654146102b0578063d93f1970146102dd57600080fd5b806399d97e92146102155780639c23da5014610228578063a13001c914610248578063a29baf1e1461026857600080fd5b80637096052c116100c65780637096052c146101a25780638cc5b02c146101b55780638df39997146101d55780638ef92003146101e857600080fd5b80631fc747b7146100f8578063357f633f1461012f57806342d71d131461014f578063572b6c0514610171575b600080fd5b34801561010457600080fd5b5061011861011336600461477a565b61030b565b6040516101269291906149c2565b60405180910390f35b34801561013b57600080fd5b5061011861014a36600461477a565b610b52565b34801561015b57600080fd5b5061016f61016a366004614bcc565b611200565b005b34801561017d57600080fd5b5061019261018c36600461477a565b50600190565b6040519015158152602001610126565b61016f6101b0366004614e6c565b61141d565b3480156101c157600080fd5b5061016f6101d0366004614ee8565b6116cf565b61016f6101e3366004614f98565b611c7b565b3480156101f457600080fd5b5061020861020336600461477a565b611fdc565b60405161012691906150cb565b61016f6102233660046150de565b612427565b34801561023457600080fd5b5061016f61024336600461512e565b6124d6565b34801561025457600080fd5b5061019261026336600461477a565b612614565b34801561027457600080fd5b5061016f610283366004615173565b612625565b34801561029457600080fd5b50610118612c14565b61016f6102ab36600461477a565b6131ea565b3480156102bc57600080fd5b506102d06102cb36600461477a565b613309565b60405161012691906151b4565b3480156102e957600080fd5b506102fd6102f836600461524d565b6135c6565b604051908152602001610126565b606080600061031861361a565b90506000805b600283015481101561046857856001600160a01b031683600001600085600201848154811061034f5761034f6152ca565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156103e1575060018360000160008560020184815481106103a2576103a26152ca565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff16908111156103df576103df6147e7565b145b8061044357506000836000016000856002018481548110610404576104046152ca565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff1690811115610441576104416147e7565b145b156104565781610452816152f6565b9250505b80610460816152f6565b91505061031e565b506000816001600160401b0381111561048357610483614a63565b6040519080825280602002602001820160405280156104ac578160200160208202803683370190505b5090506000826001600160401b038111156104c9576104c9614a63565b60405190808252806020026020018201604052801561050257816020015b6104ef61461b565b8152602001906001900390816104e75790505b50905060005b6002850154811015610b4557876001600160a01b0316856000016000876002018481548110610539576105396152ca565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060030154161480156105cb5750600185600001600087600201848154811061058c5761058c6152ca565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff16908111156105c9576105c96147e7565b145b8061062d575060008560000160008760020184815481106105ee576105ee6152ca565b60009182526020808320909101546001600160a01b03168352820192909252604001902060059081015460ff169081111561062b5761062b6147e7565b145b15610b335784600001600086600201838154811061064d5761064d6152ca565b60009182526020808320909101546001600160a01b0316835282019290925260409081019091208151610100810190925280548290829061068d9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546106b99061530f565b80156107065780601f106106db57610100808354040283529160200191610706565b820191906000526020600020905b8154815290600101906020018083116106e957829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115610763576107636147e7565b6005811115610774576107746147e7565b8152602001600682016040518060c00160405290816000820180546107989061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546107c49061530f565b80156108115780601f106107e657610100808354040283529160200191610811565b820191906000526020600020905b8154815290600101906020018083116107f457829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561087357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610855575b5050505050815260200160028201805461088c9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546108b89061530f565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b5050505050815260200160038201805461091e9061530f565b80601f016020809104026020016040519081016040528092919081815260200182805461094a9061530f565b80156109975780601f1061096c57610100808354040283529160200191610997565b820191906000526020600020905b81548152906001019060200180831161097a57829003601f168201915b50505050508152602001600482015481526020016005820180546109ba9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e69061530f565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015282610aaf86615349565b95508581518110610ac257610ac26152ca565b6020026020010181905250846002018181548110610ae257610ae26152ca565b9060005260206000200160009054906101000a90046001600160a01b0316838581518110610b1257610b126152ca565b60200260200101906001600160a01b031690816001600160a01b0316815250505b80610b3d816152f6565b915050610508565b5090969095509350505050565b6060806000610b5f61361a565b90506000805b6002830154811015610be957856001600160a01b0316836000016000856002018481548110610b9657610b966152ca565b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020600101541603610bd75781610bd3816152f6565b9250505b80610be1816152f6565b915050610b65565b506000816001600160401b03811115610c0457610c04614a63565b604051908082528060200260200182016040528015610c2d578160200160208202803683370190505b5090506000826001600160401b03811115610c4a57610c4a614a63565b604051908082528060200260200182016040528015610c8357816020015b610c7061461b565b815260200190600190039081610c685790505b50905060005b6002850154811015610b4557876001600160a01b0316856000016000876002018481548110610cba57610cba6152ca565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190206001015416036111ee57846000016000866002018381548110610d0857610d086152ca565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290610d489061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d749061530f565b8015610dc15780601f10610d9657610100808354040283529160200191610dc1565b820191906000526020600020905b815481529060010190602001808311610da457829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115610e1e57610e1e6147e7565b6005811115610e2f57610e2f6147e7565b8152602001600682016040518060c0016040529081600082018054610e539061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7f9061530f565b8015610ecc5780601f10610ea157610100808354040283529160200191610ecc565b820191906000526020600020905b815481529060010190602001808311610eaf57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f2e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f10575b50505050508152602001600282018054610f479061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f739061530f565b8015610fc05780601f10610f9557610100808354040283529160200191610fc0565b820191906000526020600020905b815481529060010190602001808311610fa357829003601f168201915b50505050508152602001600382018054610fd99061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546110059061530f565b80156110525780601f1061102757610100808354040283529160200191611052565b820191906000526020600020905b81548152906001019060200180831161103557829003601f168201915b50505050508152602001600482015481526020016005820180546110759061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546110a19061530f565b80156110ee5780601f106110c3576101008083540402835291602001916110ee565b820191906000526020600020905b8154815290600101906020018083116110d157829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e084015201528261116a86615349565b9550858151811061117d5761117d6152ca565b602002602001018190525084600201818154811061119d5761119d6152ca565b9060005260206000200160009054906101000a90046001600160a01b03168385815181106111cd576111cd6152ca565b60200260200101906001600160a01b031690816001600160a01b0316815250505b806111f8816152f6565b915050610c89565b6001600061121a6000805160206155b28339815191525490565b905061126461122761363e565b6001600160a01b031660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604090205460ff1690565b156112825760405163887efaa560e01b815260040160405180910390fd5b8181036112a25760405163887efaa560e01b815260040160405180910390fd5b80821180156112b057508015155b156112ce5760405163887efaa560e01b815260040160405180910390fd5b6112d78b61366b565b61130457604051631e1d8eb160e11b81526001600160a01b038c1660048201526024015b60405180910390fd5b600061130f8c6136a0565b60018101549091506001600160a01b0316331461135657600181015460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016112fb565b6002810154600382015461137c918e918e918e916001600160a01b0391821691166136c8565b61138b8c8a8a8a8a8a8a61373f565b6113968c60006137c7565b6113a18c60006137f5565b6113ac8c6000613823565b60028101546113c6906001600160a01b0316600080613851565b60028101546113e0906000906001600160a01b031661389d565b60028101546113f9906001600160a01b031660016138ea565b50611410816000805160206155b283398151915255565b5050505050505050505050565b600260006114376000805160206155b28339815191525490565b905061144461122761363e565b156114625760405163887efaa560e01b815260040160405180910390fd5b8181036114825760405163887efaa560e01b815260040160405180910390fd5b808211801561149057508015155b156114ae5760405163887efaa560e01b815260040160405180910390fd5b60005b84518110156116b25760008582815181106114ce576114ce6152ca565b6020026020010151905060006114e382613938565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff16156115385760405163d1d36dcd60e01b8152600481018290526024016112fb565b61154181613a4d565b600061156b83608001518389878151811061155e5761155e6152ca565b6020026020010151613a87565b9050806115ae5782608001518288868151811061158a5761158a6152ca565b602002602001015160405163d491963d60e01b81526004016112fb93929190615360565b82514211156115d6578251604051636634e92360e01b815260048101919091526024016112fb565b600080306001600160a01b0316348660a0015187608001516040516020016115ff929190615387565b60408051601f1981840301815290829052611619916153be565b60006040518083038185875af1925050503d8060008114611656576040519150601f19603f3d011682016040523d82523d6000602084013e61165b565b606091505b509150915061169930838360405180604001604052806015815260200174119bdc9dd85c99195c8810d85b1b0811985a5b1959605a1b815250613ae0565b50505050505080806116aa906152f6565b9150506114b1565b506116c9816000805160206155b283398151915255565b50505050565b600160006116e96000805160206155b28339815191525490565b90506116f661122761363e565b156117145760405163887efaa560e01b815260040160405180910390fd5b8181036117345760405163887efaa560e01b815260040160405180910390fd5b808211801561174257508015155b156117605760405163887efaa560e01b815260040160405180910390fd5b60006117aa61176d61363e565b6001600160a01b0390811660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd09960205260409020541690565b905060006117b78c6136a0565b60038101549091506000906117d4906001600160a01b0316613b64565b6001600160a01b0380851660009081526000805160206155d28339815191526020526040902054919250166118275760405163170c65f360e21b81526001600160a01b03841660048201526024016112fb565b826001600160a01b0316816001018f81548110611846576118466152ca565b6000918252602090912001546001600160a01b031614611899576003820154604051630cb3ac2760e11b81526001600160a01b0391821660048201529084166024820152604481018f90526064016112fb565b604051637da566ff60e11b81526001600160a01b0384166004820152309063fb4acdfe90602401602060405180830381865afa1580156118dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190191906153da565b611929576040516345f60d2760e11b81526001600160a01b03841660048201526024016112fb565b61193283613b8c565b6002015460038301546001600160a01b039081169116146119945760038201546001600160a01b031661196484613b8c565b60020154604051630ada499f60e21b81526001600160a01b039283166004820152911660248201526044016112fb565b88156119dd576008810154600c83015410156119ca57600c8201546119c5908e906119c09060016153f7565b613823565b611a07565b6119d58d6002613ba2565b505050611c65565b60118201546000036119f3576119f38d426137c7565b6119fc8d613be8565b611a078d6000613823565b6002820154600090611a21906001600160a01b0316613b8c565b600781015490915015801590611a3b575088816007015414155b15611a69576007810154604051632a96c8c760e11b81526112fb918b91600401918252602082015260400190565b506000611a7e611a798d4261540a565b613c20565b90506014811115611ab857611a944260146153f7565b604051631ff8ef4960e11b81526004810191909152602481018d90526044016112fb565b506009810154610100900460ff168015611b3b57506003820154611b39906001600160a01b03168e611aea6001613c3c565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b155b15611b4b576119d58d6005613ba2565b6002820154611b70906001600160a01b031689611b6b4262093a806153f7565b613851565b6002820154611b89908d906001600160a01b031661389d565b806003015482600401541015611ba4576119d58d6004613ba2565b600f82015460009015611bc757600f830154611bc290600190615431565b611bca565b60005b90505b600081118015611beb5750611be28e82613c5c565b6003015460ff16155b15611c0c57611bfa8e82613c92565b80611c0481615349565b915050611bcd565b611c178e6000613cd8565b50611c228d8b613d13565b611c518d826001018054905084600c01600601546001611c4291906153f7565b611c4c9190615444565b613d5f565b611c618d82600301548989613d8d565b5050505b611410816000805160206155b283398151915255565b60016000611c956000805160206155b28339815191525490565b9050611ca261122761363e565b15611cc05760405163887efaa560e01b815260040160405180910390fd5b818103611ce05760405163887efaa560e01b815260040160405180910390fd5b8082118015611cee57508015155b15611d0c5760405163887efaa560e01b815260040160405180910390fd5b611d158c61366b565b15611d3e57604051638f939dfd60e01b81526001600160a01b038d1660048201526024016112fb565b6000611d486140cd565b6040516363e08a1f60e11b81526001600160a01b038083166004830152600060248301528c811660448301528d166064820152909150309063c7c1143e90608401600060405180830381600087803b158015611da357600080fd5b505af1158015611db7573d6000803e3d6000fd5b505050506000611dc68b613b64565b604080516101c08101825282546001600160a01b03168152600183018054835160208281028201810190955281815292949380860193929190830182828015611e3857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e1a575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015611eae57602002820191906000526020600020905b815481526020019060010190808311611e9a575b505050505081526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581526020016009820160019054906101000a900460ff16151515158152602001600a8201548152602001600b8201548152602001600c820154815250509050611f478e826020015151836101a001516001611c4291906153f7565b50611f558d8d8d848e6136c8565b611f648d8a8a8a8a8a8a61373f565b611f6d8d614148565b611f778d34614186565b8c6001600160a01b03168b6001600160a01b03167ff91c401ec9e7a7f7987a949ca22fe503608aed50c54cb3d2b64039d8a4b60d4260405160405180910390a350611fce816000805160206155b283398151915255565b505050505050505050505050565b611fe461461b565b611fed826136a0565b604051806101000160405290816000820180546120099061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546120359061530f565b80156120825780601f1061205757610100808354040283529160200191612082565b820191906000526020600020905b81548152906001019060200180831161206557829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff16908111156120df576120df6147e7565b60058111156120f0576120f06147e7565b8152602001600682016040518060c00160405290816000820180546121149061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546121409061530f565b801561218d5780601f106121625761010080835404028352916020019161218d565b820191906000526020600020905b81548152906001019060200180831161217057829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156121ef57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116121d1575b505050505081526020016002820180546122089061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546122349061530f565b80156122815780601f1061225657610100808354040283529160200191612281565b820191906000526020600020905b81548152906001019060200180831161226457829003601f168201915b5050505050815260200160038201805461229a9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546122c69061530f565b80156123135780601f106122e857610100808354040283529160200191612313565b820191906000526020600020905b8154815290600101906020018083116122f657829003601f168201915b50505050508152602001600482015481526020016005820180546123369061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546123629061530f565b80156123af5780601f10612384576101008083540402835291602001916123af565b820191906000526020600020905b81548152906001019060200180831161239257829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152015292915050565b600160006124416000805160206155b28339815191525490565b905061244e61122761363e565b1561246c5760405163887efaa560e01b815260040160405180910390fd5b81810361248c5760405163887efaa560e01b815260040160405180910390fd5b808211801561249a57508015155b156124b85760405163887efaa560e01b815260040160405180910390fd5b60006124c26140cd565b90506113f9818d8d8d8d8d8d8d8d8d611c7b565b60006124e1836136a0565b905060006124ed61363e565b60078301549091501580159061256957506125678260060160010180548060200260200160405190810160405280929190818152602001828054801561255c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161253e575b5050505050826141c4565b155b1561259a57604051630724d91960e31b81526001600160a01b038086166004830152821660248201526044016112fb565b6125a5846001613cd8565b6125b88483600c01600301548386614229565b81600c0160030154816001600160a01b0316856001600160a01b03167fae486202240e733a2f4039ac3d255ede4cb00b1050bbd7458e8a63e6a1144334866040516126039190615466565b60405180910390a46116c9846142d7565b600061261f8261366b565b92915050565b6001600061263f6000805160206155b28339815191525490565b905061264c61122761363e565b1561266a5760405163887efaa560e01b815260040160405180910390fd5b81810361268a5760405163887efaa560e01b815260040160405180910390fd5b808211801561269857508015155b156126b65760405163887efaa560e01b815260040160405180910390fd5b60006126c1856136a0565b604051806101000160405290816000820180546126dd9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546127099061530f565b80156127565780601f1061272b57610100808354040283529160200191612756565b820191906000526020600020905b81548152906001019060200180831161273957829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff16908111156127b3576127b36147e7565b60058111156127c4576127c46147e7565b8152602001600682016040518060c00160405290816000820180546127e89061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546128149061530f565b80156128615780601f1061283657610100808354040283529160200191612861565b820191906000526020600020905b81548152906001019060200180831161284457829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156128c357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116128a5575b505050505081526020016002820180546128dc9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546129089061530f565b80156129555780601f1061292a57610100808354040283529160200191612955565b820191906000526020600020905b81548152906001019060200180831161293857829003601f168201915b5050505050815260200160038201805461296e9061530f565b80601f016020809104026020016040519081016040528092919081815260200182805461299a9061530f565b80156129e75780601f106129bc576101008083540402835291602001916129e7565b820191906000526020600020905b8154815290600101906020018083116129ca57829003601f168201915b5050505050815260200160048201548152602001600582018054612a0a9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a369061530f565b8015612a835780601f10612a5857610100808354040283529160200191612a83565b820191906000526020600020905b815481529060010190602001808311612a6657829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152908101919091528101519091506001600160a01b03163314612b3f57602081015160405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016112fb565b8381608001511015612b7457608081015160405163cf47918160e01b81526112fb918691600401918252602082015260400190565b612b7e8585614307565b6040516001600160a01b0387169085156108fc029086906000818181858888f19350505050158015612bb4573d6000803e3d6000fd5b5083866001600160a01b0316866001600160a01b03167ff06cf8a96225f4a866a9e590c50c1bbc3be2dd6771fb87613346bcd7cb2183ca60405160405180910390a450612c0d816000805160206155b283398151915255565b5050505050565b6060806000612c2161361a565b60028101549091506000816001600160401b03811115612c4357612c43614a63565b604051908082528060200260200182016040528015612c6c578160200160208202803683370190505b5090506000826001600160401b03811115612c8957612c89614a63565b604051908082528060200260200182016040528015612cc257816020015b612caf61461b565b815260200190600190039081612ca75790505b50905060005b60028501548110156131de57846000016000866002018381548110612cef57612cef6152ca565b60009182526020808320909101546001600160a01b03168352820192909252604090810190912081516101008101909252805482908290612d2f9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054612d5b9061530f565b8015612da85780601f10612d7d57610100808354040283529160200191612da8565b820191906000526020600020905b815481529060010190602001808311612d8b57829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115612e0557612e056147e7565b6005811115612e1657612e166147e7565b8152602001600682016040518060c0016040529081600082018054612e3a9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054612e669061530f565b8015612eb35780601f10612e8857610100808354040283529160200191612eb3565b820191906000526020600020905b815481529060010190602001808311612e9657829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015612f1557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612ef7575b50505050508152602001600282018054612f2e9061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054612f5a9061530f565b8015612fa75780601f10612f7c57610100808354040283529160200191612fa7565b820191906000526020600020905b815481529060010190602001808311612f8a57829003601f168201915b50505050508152602001600382018054612fc09061530f565b80601f0160208091040260200160405190810160405280929190818152602001828054612fec9061530f565b80156130395780601f1061300e57610100808354040283529160200191613039565b820191906000526020600020905b81548152906001019060200180831161301c57829003601f168201915b505050505081526020016004820154815260200160058201805461305c9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546130889061530f565b80156130d55780601f106130aa576101008083540402835291602001916130d5565b820191906000526020600020905b8154815290600101906020018083116130b857829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e084015201528261315186615349565b95508581518110613164576131646152ca565b6020026020010181905250846002018181548110613184576131846152ca565b9060005260206000200160009054906101000a90046001600160a01b03168385815181106131b4576131b46152ca565b6001600160a01b0390921660209283029190910190910152806131d6816152f6565b915050612cc8565b50909590945092505050565b600160006132046000805160206155b28339815191525490565b905061321161122761363e565b1561322f5760405163887efaa560e01b815260040160405180910390fd5b81810361324f5760405163887efaa560e01b815260040160405180910390fd5b808211801561325d57508015155b1561327b5760405163887efaa560e01b815260040160405180910390fd5b6132848361366b565b6132ac57604051631e1d8eb160e11b81526001600160a01b03841660048201526024016112fb565b6132b68334614186565b604051349033906001600160a01b038616907fcfa8ce8f8d66cce7f7052bcba7d1f853a503d00896bcd7dfdb3ff4b1ad1f222d90600090a4613304816000805160206155b283398151915255565b505050565b6060600061331561361a565b6001600160a01b0384166000908152602082905260408120600f01549192505b60008211801561336e57506001600160a01b0385166000908152600184016020908152604080832085845290915290206003015460ff16155b80156133a157506001600160a01b0385166000908152600180850160209081526040808420868552909152909120015415155b156133c657816133b081615349565b92505080806133be906152f6565b915050613335565b806000816001600160401b038111156133e1576133e1614a63565b60405190808252806020026020018201604052801561344857816020015b613435604051806080016040528060006001600160a01b0316815260200160008152602001606081526020016000151581525090565b8152602001906001900390816133ff5790505b506001600160a01b0388166000908152602087905260408120600f015491925090613474908590615431565b90505b6001600160a01b0388166000908152602087905260409020600f01548110156135bb576001600160a01b038089166000908152600180890160209081526040808420868552825292839020835160808101855281549095168552918201549084015260028101805491928401916134ed9061530f565b80601f01602080910402602001604051908101604052809291908181526020018280546135199061530f565b80156135665780601f1061353b57610100808354040283529160200191613566565b820191906000526020600020905b81548152906001019060200180831161354957829003601f168201915b50505091835250506003919091015460ff1615156020909101528261358a85615349565b9450848151811061359d5761359d6152ca565b602002602001018190525080806135b3906152f6565b915050613477565b509695505050505050565b600061360f6040518060c00160405280898152602001888152602001878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815250613938565b979650505050505050565b7f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89790565b336014361080159061365857506001600160a01b03811630145b15613668575060131936013560601c5b90565b60008061367661361a565b6001600160a01b039384166000908152602091909152604090206001015490921690911415919050565b60006136aa61361a565b6001600160a01b039092166000908152602092909252506040902090565b60006136d261361a565b6001600160a01b0387166000908152602091909152604090209050806136f886826154bf565b506001810180546001600160a01b039586166001600160a01b0319918216179091556002820180549486169482169490941790935560030180549190931691161790555050565b600061374961361a565b6001600160a01b03891660009081526020919091526040902090506008810161377288826154bf565b506009810161378187826154bf565b50600a81018590556006810161379785826154bf565b5081516137ad90600783019060208501906146e1565b50600b81016137bc84826154bf565b505050505050505050565b806137d061361a565b6001600160a01b03909316600090815260209390935260409092206010019190915550565b806137fe61361a565b6001600160a01b03909316600090815260209390935260409092206011019190915550565b8061382c61361a565b6001600160a01b0390931660009081526020939093526040909220600c019190915550565b6001600160a01b039290921660009081526000805160206155d28339815191526020526040902060048101805460ff191660021790554260058201556006810192909255600790910155565b6001600160a01b0391821660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0996020526040902080546001600160a01b03191691909216179055565b6001600160a01b03821660009081526000805160206155d283398151915260205260409020600401805482919060ff1916600183600381111561392f5761392f6147e7565b02179055505050565b6000806139448361433c565b604080518082018252600b81526a14ddda5d18da189bd85c9960aa1b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3534305cb0c1fabf88c04f35d35090370a9bb52f874a074b58cfeeae6de8c234818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560608201524660808201523060a0808301919091528351808303909101815260c08201845280519083012061190160f01b60e083015260e282015261010280820194909452825180820390940184526101220190915281519101209392505050565b60009081527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b460205260409020805460ff19166001179055565b60008151604114613a9a57506000613ad9565b6000613aa684846143ee565b90506001600160a01b038116613ac0576000915050613ad9565b846001600160a01b0316816001600160a01b0316149150505b9392505050565b60608315613b52578251600003613b4b576000856001600160a01b03163b11613b4b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016112fb565b5081613b5c565b613b5c8383614418565b949350505050565b60007f60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e6136aa565b60006000805160206155d28339815191526136aa565b80613bab61361a565b6001600160a01b03841660009081526020919091526040902060059081018054909160ff1990911690600190849081111561392f5761392f6147e7565b613bf061361a565b6001600160a01b038216600090815260209190915260408120601101805491613c18836152f6565b919050555050565b600080821215613c3857613c338261557e565b61261f565b5090565b600080826002811115613c5157613c516147e7565b6001901b9392505050565b6000613c6661361a565b6001600160a01b0393909316600090815260019093016020908152604080852093855292905250902090565b6001613c9c61361a565b6001600160a01b039390931660009081526001909301602090815260408085209385529290529120600301805460ff1916911515919091179055565b80613ce161361a565b6001600160a01b039390931660009081526020939093526040909220601301805460ff19169215159290921790915550565b6000613d1d61361a565b6001600160a01b03939093166000908152602093909352506040822042600d820155600e810191909155600c810191909155600501805460ff19166001179055565b80613d6861361a565b6001600160a01b03909316600090815260209390935260409092206012019190915550565b6000613d98856136a0565b905060005b83518110156140c5576000848281518110613dba57613dba6152ca565b6020026020010151905060003a8260200151613dd6919061559a565b90506000613de383613938565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff1615613e385760405163d1d36dcd60e01b8152600481018290526024016112fb565b613e4181613a4d565b6000613e5e84608001518389888151811061155e5761155e6152ca565b905080613e7d5783608001518288878151811061158a5761158a6152ca565b8351421115613ea5578351604051636634e92360e01b815260048101919091526024016112fb565b88846040015184613eb691906153f7565b613ec091906153f7565b86600401541015613f0d5788846040015184613edc91906153f7565b613ee691906153f7565b60048088015460405163cf47918160e01b81526112fb939201918252602082015260400190565b613f318a8a866040015186613f2291906153f7565b613f2c91906153f7565b614307565b60005a905060008086606001516001600160a01b031687604001518860a001518f604051602001613f63929190615387565b60408051601f1981840301815290829052613f7d916153be565b60006040518083038185875af1925050503d8060008114613fba576040519150601f19603f3d011682016040523d82523d6000602084013e613fbf565b606091505b50915091506140008760600151838360405180604001604052806014815260200173119d5b98dd1a5bdb8810d85b1b0811985a5b195960621b815250613ae0565b5060005a61400e9085615431565b90508760200151811115614045576020880151604051631935f53160e01b81526004810191909152602481018290526044016112fb565b60006140513a8361559a565b61405b9089615431565b90506140678f82614186565b336108fc8f6140763a8661559a565b61408091906153f7565b6040518115909202916000818181858888f193505050501580156140a8573d6000803e3d6000fd5b5050505050505050505080806140bd906152f6565b915050613d9d565b505050505050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b580546000906140ff906152f6565b918290555061410f600143615431565b4060405160200161412a929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b61415061361a565b6002018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055565b8061418f61361a565b6001600160a01b03841660009081526020919091526040812060040180549091906141bb9084906153f7565b90915550505050565b6000805b835181101561421f57826001600160a01b03168482815181106141ed576141ed6152ca565b60200260200101516001600160a01b03160361420d57600191505061261f565b80614217816152f6565b9150506141c8565b5060009392505050565b604080516080810182526001600160a01b03841681524260208201529081018290526000606082015261425a61361a565b6001600160a01b038681166000908152600192830160209081526040808320898452825291829020855181546001600160a01b0319169416939093178355840151928201929092559082015160028201906142b590826154bf565b50606091909101516003909101805460ff191691151591909117905550505050565b6142df61361a565b6001600160a01b038216600090815260209190915260408120600f01805491613c18836152f6565b8061431061361a565b6001600160a01b03841660009081526020919091526040812060040180549091906141bb908490615431565b60007f687c97506870980d9774f5f2c2cc3fd31b851a1f28e3f222da2fb0b52c189112826000015183602001518460400151856060015186608001518760a00151805190602001206040516020016143d197969594939291909687526020870195909552604086019390935260608501919091526001600160a01b0390811660808501521660a083015260c082015260e00190565b604051602081830303815290604052805190602001209050919050565b6000806000806143fe8686614446565b92509250925061440e8282614493565b5090949350505050565b8151156144285781518083602001fd5b8060405162461bcd60e51b81526004016112fb9190615466565b5050565b600080600083516041036144805760208401516040850151606086015160001a6144728882858561454c565b95509550955050505061448c565b50508151600091506002905b9250925092565b60008260038111156144a7576144a76147e7565b036144b0575050565b60018260038111156144c4576144c46147e7565b036144e25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156144f6576144f66147e7565b036145175760405163fce698f760e01b8152600481018290526024016112fb565b600382600381111561452b5761452b6147e7565b03614442576040516335e2f38360e21b8152600481018290526024016112fb565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156145875750600091506003905082614611565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156145db573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661460757506000925060019150829050614611565b9250600091508190505b9450945094915050565b604080516101008101825260608082526000602083018190529282018390528101829052608081018290529060a0820190815260200161468d6040518060c001604052806060815260200160608152602001606081526020016060815260200160008019168152602001606081525090565b81526020016146dc604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054828255906000526020600020908101928215614736579160200282015b8281111561473657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614701565b50613c389291505b80821115613c38576000815560010161473e565b6001600160a01b038116811461476757600080fd5b50565b803561477581614752565b919050565b60006020828403121561478c57600080fd5b8135613ad981614752565b60005b838110156147b257818101518382015260200161479a565b50506000910152565b600081518084526147d3816020860160208601614797565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6006811061481b57634e487b7160e01b600052602160045260246000fd5b9052565b6000815160c0845261483460c08501826147bb565b60208481015186830387830152805180845290820193509091600091908301905b8083101561487e5784516001600160a01b03168252938301936001929092019190830190614855565b5060408601519350868103604088015261489881856147bb565b9350505050606083015184820360608601526148b482826147bb565b9150506080830151608085015260a083015184820360a08601526148d882826147bb565b95945050505050565b60006101e082518185526148f7828601826147bb565b915050602083015160018060a01b03808216602087015280604086015116604087015280606086015116606087015250506080830151608085015260a083015161494460a08601826147fd565b5060c083015184820360c086015261495c828261481f565b60e094850151805187870152602081015161010088015260408101516101208801526060810151610140880152608081015161016088015260a081015161018088015260c08101516101a08801529094015115156101c090950194909452509092915050565b604080825283519082018190526000906020906060840190828701845b82811015614a045781516001600160a01b0316845292840192908401906001016149df565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015614a5457601f19868403018552614a428383516148e1565b94870194925090860190600101614a26565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614a9b57614a9b614a63565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614ac957614ac9614a63565b604052919050565b600082601f830112614ae257600080fd5b81356001600160401b03811115614afb57614afb614a63565b614b0e601f8201601f1916602001614aa1565b818152846020838601011115614b2357600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115614b5957614b59614a63565b5060051b60200190565b600082601f830112614b7457600080fd5b81356020614b89614b8483614b40565b614aa1565b82815260059290921b84018101918181019086841115614ba857600080fd5b8286015b848110156135bb578035614bbf81614752565b8352918301918301614bac565b60008060008060008060008060006101208a8c031215614beb57600080fd5b614bf48a61476a565b985060208a01356001600160401b0380821115614c1057600080fd5b614c1c8d838e01614ad1565b9950614c2a60408d0161476a565b985060608c0135915080821115614c4057600080fd5b614c4c8d838e01614ad1565b975060808c0135915080821115614c6257600080fd5b614c6e8d838e01614ad1565b965060a08c0135955060c08c0135915080821115614c8b57600080fd5b614c978d838e01614ad1565b945060e08c0135915080821115614cad57600080fd5b614cb98d838e01614ad1565b93506101008c0135915080821115614cd057600080fd5b50614cdd8c828d01614b63565b9150509295985092959850929598565b600082601f830112614cfe57600080fd5b81356020614d0e614b8483614b40565b82815260059290921b84018101918181019086841115614d2d57600080fd5b8286015b848110156135bb5780356001600160401b0380821115614d515760008081fd5b9088019060c0828b03601f1901811315614d6b5760008081fd5b614d73614a79565b87840135815260408085013589830152606080860135828401526080915081860135614d9e81614752565b9083015260a085810135614db181614752565b83830152928501359284841115614dca57600091508182fd5b614dd88e8b86890101614ad1565b90830152508652505050918301918301614d31565b600082601f830112614dfe57600080fd5b81356020614e0e614b8483614b40565b82815260059290921b84018101918181019086841115614e2d57600080fd5b8286015b848110156135bb5780356001600160401b03811115614e505760008081fd5b614e5e8986838b0101614ad1565b845250918301918301614e31565b60008060408385031215614e7f57600080fd5b82356001600160401b0380821115614e9657600080fd5b614ea286838701614ced565b93506020850135915080821115614eb857600080fd5b50614ec585828601614ded565b9150509250929050565b801515811461476757600080fd5b803561477581614ecf565b60008060008060008060008060006101208a8c031215614f0757600080fd5b8935985060208a0135614f1981614752565b975060408a0135614f2981614752565b965060608a0135955060808a01359450614f4560a08b01614edd565b935060c08a0135925060e08a01356001600160401b0380821115614f6857600080fd5b614f748d838e01614ced565b93506101008c0135915080821115614f8b57600080fd5b50614cdd8c828d01614ded565b6000806000806000806000806000806101408b8d031215614fb857600080fd5b614fc18b61476a565b995060208b01356001600160401b0380821115614fdd57600080fd5b614fe98e838f01614ad1565b9a50614ff760408e0161476a565b995061500560608e0161476a565b985060808d013591508082111561501b57600080fd5b6150278e838f01614ad1565b975060a08d013591508082111561503d57600080fd5b6150498e838f01614ad1565b965060c08d0135955060e08d013591508082111561506657600080fd5b6150728e838f01614ad1565b94506101008d013591508082111561508957600080fd5b6150958e838f01614ad1565b93506101208d01359150808211156150ac57600080fd5b506150b98d828e01614b63565b9150509295989b9194979a5092959850565b602081526000613ad960208301846148e1565b60008060008060008060008060006101208a8c0312156150fd57600080fd5b89356001600160401b038082111561511457600080fd5b6151208d838e01614ad1565b9a50614c1c60208d0161476a565b6000806040838503121561514157600080fd5b823561514c81614752565b915060208301356001600160401b0381111561516757600080fd5b614ec585828601614ad1565b60008060006060848603121561518857600080fd5b833561519381614752565b925060208401356151a381614752565b929592945050506040919091013590565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561523f57888303603f19018552815180516001600160a01b0316845287810151888501528681015160808886018190529061521c828701826147bb565b6060938401511515969093019590955250948701949250908601906001016151db565b509098975050505050505050565b60008060008060008060c0878903121561526657600080fd5b863595506020870135945060408701359350606087013561528681614752565b9250608087013561529681614752565b915060a08701356001600160401b038111156152b157600080fd5b6152bd89828a01614ad1565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201615308576153086152e0565b5060010190565b600181811c9082168061532357607f821691505b60208210810361534357634e487b7160e01b600052602260045260246000fd5b50919050565b600081615358576153586152e0565b506000190190565b60018060a01b03841681528260208201526060604082015260006148d860608301846147bb565b60008351615399818460208801614797565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516153d0818460208701614797565b9190910192915050565b6000602082840312156153ec57600080fd5b8151613ad981614ecf565b8082018082111561261f5761261f6152e0565b818103600083128015838313168383128216171561542a5761542a6152e0565b5092915050565b8181038181111561261f5761261f6152e0565b60008261546157634e487b7160e01b600052601260045260246000fd5b500690565b602081526000613ad960208301846147bb565b601f82111561330457600081815260208120601f850160051c810160208610156154a05750805b601f850160051c820191505b818110156140c5578281556001016154ac565b81516001600160401b038111156154d8576154d8614a63565b6154ec816154e6845461530f565b84615479565b602080601f83116001811461552157600084156155095750858301515b600019600386901b1c1916600185901b1785556140c5565b600085815260208120601f198616915b8281101561555057888601518255948401946001909101908401615531565b508582101561556e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600160ff1b8201615593576155936152e0565b5060000390565b808202811582820484141761261f5761261f6152e056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b60b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd098a26469706673582212206366902bc695521d62d1605420444e061a90adb323708e5061230d7dede7ce0a64736f6c63430008110033";

type SbFunctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunction__factory extends ContractFactory {
  constructor(...args: SbFunctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunction> {
    return super.deploy(overrides || {}) as Promise<SbFunction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunction {
    return super.attach(address) as SbFunction;
  }
  override connect(signer: Signer): SbFunction__factory {
    return super.connect(signer) as SbFunction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionInterface {
    return new utils.Interface(_abi) as SbFunctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunction {
    return new Contract(address, _abi, signerOrProvider) as SbFunction;
  }
}
