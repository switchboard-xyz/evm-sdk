/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SbFunction,
  SbFunctionInterface,
} from "../../../../../contracts/src/Switchboard/sbFunction/SbFunction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "AlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "EnclaveDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasSpent",
        type: "uint256",
      },
    ],
    name: "ExcessiveGasSpent",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "received",
        type: "address",
      },
    ],
    name: "FunctionIncorrectTarget",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "current",
        type: "address",
      },
      {
        internalType: "address",
        name: "received",
        type: "address",
      },
    ],
    name: "FunctionSignerAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "used",
        type: "uint256",
      },
    ],
    name: "GasLimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxExpectedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reportedTime",
        type: "uint256",
      },
    ],
    name: "IncorrectReportedTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "enclaveId",
        type: "address",
      },
    ],
    name: "InvalidEnclave",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedSender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedQueueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedQueueId",
        type: "address",
      },
    ],
    name: "QueuesDoNotMatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "TransactionExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "FunctionAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FunctionWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "createFunctionWithId",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "functionEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "functionEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatedSignerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "observedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextAllowedTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFailure",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "functionVerify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "enclaveIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatedSignerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "observedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextAllowedTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFailure",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimeSeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TransactionLib.Transaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "functionCallIds",
        type: "address[]",
      },
    ],
    name: "functionVerifyRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "string",
        name: "containerRegistry",
        type: "string",
      },
      {
        internalType: "string",
        name: "container",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
      {
        internalType: "string",
        name: "paramsSchema",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "permittedCallers",
        type: "address[]",
      },
    ],
    name: "setFunctionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tolerance",
        type: "uint256",
      },
    ],
    name: "setToleratedTimestampDiscrepancy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613edf806100206000396000f3fe6080604052600436106100865760003560e01c8063a5625b9611610059578063a5625b9614610100578063b8390a5614610120578063ba93166c14610140578063c482958014610153578063cd86c71b1461016657600080fd5b8063101277b21461008b5780637096052c146100ad578063822e99d5146100c0578063a29baf1e146100e0575b600080fd5b34801561009757600080fd5b506100ab6100a63660046132c6565b610179565b005b6100ab6100bb366004613596565b61039a565b3480156100cc57600080fd5b506100ab6100db36600461365d565b6106c8565b3480156100ec57600080fd5b506100ab6100fb366004613799565b610939565b34801561010c57600080fd5b506100ab61011b3660046137f3565b611028565b34801561012c57600080fd5b506100ab61013b3660046138a3565b611158565b6100ab61014e366004613985565b6118d8565b6100ab6101613660046139a2565b611a6a565b6100ab6101743660046139f2565b611a94565b60046000610193600080516020613e4a8339815191525490565b905060028260048111156101a9576101a9613b0a565b1180156101c357506101c16101bc611dd4565b611e01565b155b156101fa576101d0611dd4565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b600482600481111561020e5761020e613b0a565b1480156102285750610226610221611dd4565b611e8b565b155b1561025957610235611dd4565b6040516275103f60e11b81526001600160a01b0390911660048201526024016101f1565b600182600481111561026d5761026d613b0a565b14801561027957508015155b156102975760405163887efaa560e01b815260040160405180910390fd5b600181141580156102a757508015155b156102c55760405163887efaa560e01b815260040160405180910390fd5b6102ec8260048111156102da576102da613b0a565b600080516020613e4a83398151915255565b604051630935e01b60e21b815233600482015230906324d7806c90602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190613b20565b61035757610235611dd4565b61037f837f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89955565b61039581600080516020613e4a83398151915255565b505050565b600160006103b4600080516020613e4a8339815191525490565b905060028260048111156103ca576103ca613b0a565b1180156103df57506103dd6101bc611dd4565b155b156103ec576101d0611dd4565b600482600481111561040057610400613b0a565b1480156104155750610413610221611dd4565b155b1561042257610235611dd4565b600182600481111561043657610436613b0a565b14801561044257508015155b156104605760405163887efaa560e01b815260040160405180910390fd5b6001811415801561047057508015155b1561048e5760405163887efaa560e01b815260040160405180910390fd5b6104a38260048111156102da576102da613b0a565b60005b84518110156106ab5760008582815181106104c3576104c3613b3d565b6020026020010151905060006104d882611eb3565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff161561052d5760405163d1d36dcd60e01b8152600481018290526024016101f1565b61053681611fc8565b600061056083608001518389878151811061055357610553613b3d565b6020026020010151612002565b9050806105a35782608001518288868151811061057f5761057f613b3d565b602002602001015160405163d491963d60e01b81526004016101f193929190613ba3565b82514211156105cb578251604051636634e92360e01b815260048101919091526024016101f1565b60008084606001516001600160a01b0316348660a0015187608001516040516020016105f8929190613bd3565b60408051601f198184030181529082905261061291613c0a565b60006040518083038185875af1925050503d806000811461064f576040519150601f19603f3d011682016040523d82523d6000602084013e610654565b606091505b509150915061069230838360405180604001604052806015815260200174119bdc9dd85c99195c8810d85b1b0811985a5b1959605a1b81525061205b565b50505050505080806106a390613c3c565b9150506104a6565b506106c281600080516020613e4a83398151915255565b50505050565b600260006106e2600080516020613e4a8339815191525490565b905060028260048111156106f8576106f8613b0a565b11801561070d575061070b6101bc611dd4565b155b1561071a576101d0611dd4565b600482600481111561072e5761072e613b0a565b1480156107435750610741610221611dd4565b155b1561075057610235611dd4565b600182600481111561076457610764613b0a565b14801561077057508015155b1561078e5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561079e57508015155b156107bc5760405163887efaa560e01b815260040160405180910390fd5b6107d18260048111156102da576102da613b0a565b6107da8b6120df565b61080257604051631e1d8eb160e11b81526001600160a01b038c1660048201526024016101f1565b600061080d8c61210f565b60018101549091506001600160a01b0316331461085457600181015460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016101f1565b6002810154600382015461087a918e918e918e916001600160a01b03918216911661213f565b6108898c8a8a8a8a8a8a6121b6565b6108948c6000612246565b6001600160a01b038c166000908152600080516020613e6a83398151915260205260408120601101556108c88c6000612273565b60028101546108e2906001600160a01b03166000806122a0565b60028101546108fc906000906001600160a01b03166122ec565b6002810154610915906001600160a01b03166001612339565b5061092c81600080516020613e4a83398151915255565b5050505050505050505050565b60026000610953600080516020613e4a8339815191525490565b9050600282600481111561096957610969613b0a565b11801561097e575061097c6101bc611dd4565b155b1561098b576101d0611dd4565b600482600481111561099f5761099f613b0a565b1480156109b457506109b2610221611dd4565b155b156109c157610235611dd4565b60018260048111156109d5576109d5613b0a565b1480156109e157508015155b156109ff5760405163887efaa560e01b815260040160405180910390fd5b60018114158015610a0f57508015155b15610a2d5760405163887efaa560e01b815260040160405180910390fd5b610a428260048111156102da576102da613b0a565b6000610a4d8561210f565b60405180610100016040529081600082018054610a6990613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9590613c55565b8015610ae25780601f10610ab757610100808354040283529160200191610ae2565b820191906000526020600020905b815481529060010190602001808311610ac557829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff1690811115610b3f57610b3f613b0a565b6005811115610b5057610b50613b0a565b8152602001600682016040518060c0016040529081600082018054610b7490613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba090613c55565b8015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610c4f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c31575b50505050508152602001600282018054610c6890613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490613c55565b8015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050508152602001600382018054610cfa90613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2690613c55565b8015610d735780601f10610d4857610100808354040283529160200191610d73565b820191906000526020600020905b815481529060010190602001808311610d5657829003601f168201915b50505050508152602001600482018054610d8c90613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610db890613c55565b8015610e055780601f10610dda57610100808354040283529160200191610e05565b820191906000526020600020905b815481529060010190602001808311610de857829003601f168201915b50505050508152602001600582018054610e1e90613c55565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4a90613c55565b8015610e975780601f10610e6c57610100808354040283529160200191610e97565b820191906000526020600020905b815481529060010190602001808311610e7a57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f840154606082015260108401546080820152601184015460a0820152601284015460c082015260139093015460ff16151560e0840152908101919091528101519091506001600160a01b03163314610f5357602081015160405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016101f1565b8381608001511015610f8857608081015160405163cf47918160e01b81526101f1918691600401918252602082015260400190565b610f928585612387565b6040516001600160a01b0387169085156108fc029086906000818181858888f19350505050158015610fc8573d6000803e3d6000fd5b5083866001600160a01b0316866001600160a01b03167ff06cf8a96225f4a866a9e590c50c1bbc3be2dd6771fb87613346bcd7cb2183ca60405160405180910390a45061102181600080516020613e4a83398151915255565b5050505050565b60036000611042600080516020613e4a8339815191525490565b9050600282600481111561105857611058613b0a565b11801561106d575061106b6101bc611dd4565b155b1561107a576101d0611dd4565b600482600481111561108e5761108e613b0a565b1480156110a357506110a1610221611dd4565b155b156110b057610235611dd4565b60018260048111156110c4576110c4613b0a565b1480156110d057508015155b156110ee5760405163887efaa560e01b815260040160405180910390fd5b600181141580156110fe57508015155b1561111c5760405163887efaa560e01b815260040160405180910390fd5b6111318260048111156102da576102da613b0a565b6111428b8b8b8b8b8b8b8b8b6123c8565b61092c81600080516020613e4a83398151915255565b60036000611172600080516020613e4a8339815191525490565b9050600282600481111561118857611188613b0a565b11801561119d575061119b6101bc611dd4565b155b156111aa576101d0611dd4565b60048260048111156111be576111be613b0a565b1480156111d357506111d1610221611dd4565b155b156111e057610235611dd4565b60018260048111156111f4576111f4613b0a565b14801561120057508015155b1561121e5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561122e57508015155b1561124c5760405163887efaa560e01b815260040160405180910390fd5b6112618260048111156102da576102da613b0a565b6112728c8c8c8c8c8c8c8c8c6123c8565b600061127d8c61210f565b6040518061010001604052908160008201805461129990613c55565b80601f01602080910402602001604051908101604052809291908181526020018280546112c590613c55565b80156113125780601f106112e757610100808354040283529160200191611312565b820191906000526020600020905b8154815290600101906020018083116112f557829003601f168201915b505050918352505060018201546001600160a01b03908116602083015260028301548116604083015260038301541660608201526004820154608082015260058083015460a09092019160ff169081111561136f5761136f613b0a565b600581111561138057611380613b0a565b8152602001600682016040518060c00160405290816000820180546113a490613c55565b80601f01602080910402602001604051908101604052809291908181526020018280546113d090613c55565b801561141d5780601f106113f25761010080835404028352916020019161141d565b820191906000526020600020905b81548152906001019060200180831161140057829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561147f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611461575b5050505050815260200160028201805461149890613c55565b80601f01602080910402602001604051908101604052809291908181526020018280546114c490613c55565b80156115115780601f106114e657610100808354040283529160200191611511565b820191906000526020600020905b8154815290600101906020018083116114f457829003601f168201915b5050505050815260200160038201805461152a90613c55565b80601f016020809104026020016040519081016040528092919081815260200182805461155690613c55565b80156115a35780601f10611578576101008083540402835291602001916115a3565b820191906000526020600020905b81548152906001019060200180831161158657829003601f168201915b505050505081526020016004820180546115bc90613c55565b80601f01602080910402602001604051908101604052809291908181526020018280546115e890613c55565b80156116355780601f1061160a57610100808354040283529160200191611635565b820191906000526020600020905b81548152906001019060200180831161161857829003601f168201915b5050505050815260200160058201805461164e90613c55565b80601f016020809104026020016040519081016040528092919081815260200182805461167a90613c55565b80156116c75780601f1061169c576101008083540402835291602001916116c7565b820191906000526020600020905b8154815290600101906020018083116116aa57829003601f168201915b5050509190925250505081526040805161010081018252600c8401548152600d840154602082810191909152600e85015492820192909252600f84015460608083019190915260108501546080830152601185015460a0830152601285015460c083015260139094015460ff16151560e08201529101528101519091506000906117509061289f565b905060005b85518110156118b157600061178287838151811061177557611775613b3d565b60200260200101516128c7565b90508e6001600160a01b03168160000160009054906101000a90046001600160a01b03166001600160a01b0316146117d05760405163d14e7c9b60e01b8152600860048201526024016101f1565b8a15611889576117f88783815181106117eb576117eb613b3d565b60200260200101516128ef565b600061180f88848151811061177557611775613b3d565b905083600801548160050154106118835761188388848151811061183557611835613b3d565b60200260200101516001600160a01b031660009081527fac917e5a91e3acb656f85d06b7b48bef4356fe56119fafe1fa91bc7497fe3a5260205260409020600401805460ff19166001179055565b5061189e565b61189e87838151811061183557611835613b3d565b50806118a981613c3c565b915050611755565b5050506118ca81600080516020613e4a83398151915255565b505050505050505050505050565b600260006118f2600080516020613e4a8339815191525490565b9050600282600481111561190857611908613b0a565b11801561191d575061191b6101bc611dd4565b155b1561192a576101d0611dd4565b600482600481111561193e5761193e613b0a565b1480156119535750611951610221611dd4565b155b1561196057610235611dd4565b600182600481111561197457611974613b0a565b14801561198057508015155b1561199e5760405163887efaa560e01b815260040160405180910390fd5b600181141580156119ae57508015155b156119cc5760405163887efaa560e01b815260040160405180910390fd5b6119e18260048111156102da576102da613b0a565b6119ea836120df565b611a1257604051631e1d8eb160e11b81526001600160a01b03841660048201526024016101f1565b611a1c833461293d565b604051349033906001600160a01b038616907fcfa8ce8f8d66cce7f7052bcba7d1f853a503d00896bcd7dfdb3ff4b1ad1f222d90600090a461039581600080516020613e4a83398151915255565b6000611a74612975565b9050611a88818b8b8b8b8b8b8b8b8b611a94565b50505050505050505050565b611a9d8a6120df565b15611ac657604051638f939dfd60e01b81526001600160a01b038b1660048201526024016101f1565b6040516363e08a1f60e11b81526001600160a01b03808c166004830152600060248301528089166044830152891660648201528a90309063c7c1143e90608401600060405180830381600087803b158015611b2057600080fd5b505af1158015611b34573d6000803e3d6000fd5b505050506000611b438961289f565b604080516101c08101825282546001600160a01b03168152600183018054835160208281028201810190955281815292949380860193929190830182828015611bb557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b97575b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201805480602002602001604051908101604052809291908181526020018280548015611c2b57602002820191906000526020600020905b815481526020019060010190808311611c17575b505050918352505060068201546020808301919091526007830154604083015260088301546060830152600983015460ff808216151560808501526101009182900416151560a0840152600a84015460c0840152600b84015460e0840152600c9093015492909101919091528101515190915015611cf657611cf68c826020015151836101a001516001611cbf9190613c8f565b611cc99190613ca2565b6001600160a01b03919091166000908152600080516020613e6a8339815191526020526040902060120155565b50611d048b8b8b848c61213f565b611d138b8888888888886121b6565b7f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89880546001810182556000919091527fc700db3e7abd23adf08c93ce87d35a29897d1227fcf8b96a761f57a193d3d7970180546001600160a01b0319166001600160a01b038d16179055611d878b3461293d565b8a6001600160a01b0316896001600160a01b03167ff91c401ec9e7a7f7987a949ca22fe503608aed50c54cb3d2b64039d8a4b60d4260405160405180910390a35050505050505050505050565b3360143610801590611dee57506001600160a01b03811630145b15611dfe575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff1680611e8557507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff165b92915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c823611e64565b600080611ebf836129f0565b604080518082018252600b81526a14ddda5d18da189bd85c9960aa1b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3534305cb0c1fabf88c04f35d35090370a9bb52f874a074b58cfeeae6de8c234818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560608201524660808201523060a0808301919091528351808303909101815260c08201845280519083012061190160f01b60e083015260e282015261010280820194909452825180820390940184526101220190915281519101209392505050565b60009081527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b460205260409020805460ff19166001179055565b6000815160411461201557506000612054565b60006120218484612aa2565b90506001600160a01b03811661203b576000915050612054565b846001600160a01b0316816001600160a01b0316149150505b9392505050565b606083156120cd5782516000036120c6576000856001600160a01b03163b116120c65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f1565b50816120d7565b6120d78383612acc565b949350505050565b6001600160a01b039081166000908152600080516020613e6a833981519152602052604090206001015416151590565b6000600080516020613e6a8339815191525b6001600160a01b039092166000908152602092909252506040902090565b6001600160a01b0385166000908152600080516020613e6a833981519152602052604090208061216f8682613d0a565b506001810180546001600160a01b039586166001600160a01b0319918216179091556002820180549486169482169490941790935560030180549190931691161790555050565b6001600160a01b0387166000908152600080516020613e6a83398151915260205260409020600881016121e98882613d0a565b50600981016121f88782613d0a565b50600a81016122078682613d0a565b50600681016122168582613d0a565b50815161222c9060078301906020850190613255565b50600b810161223b8482613d0a565b505050505050505050565b6001600160a01b03919091166000908152600080516020613e6a8339815191526020526040902060100155565b6001600160a01b03919091166000908152600080516020613e6a83398151915260205260409020600c0155565b6001600160a01b03929092166000908152600080516020613e8a8339815191526020526040902060048101805460ff191660021790554260058201556006810192909255600790910155565b6001600160a01b0391821660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd0996020526040902080546001600160a01b03191691909216179055565b6001600160a01b0382166000908152600080516020613e8a83398151915260205260409020600401805482919060ff1916600183600381111561237e5761237e613b0a565b02179055505050565b6001600160a01b0382166000908152600080516020613e6a8339815191526020526040812060040180548392906123bf908490613dc9565b90915550505050565b60006123d38961210f565b60038101549091506000906123f0906001600160a01b031661289f565b90506000816001018c8154811061240957612409613b3d565b6000918252602090912001546001600160a01b03169050612451816001600160a01b039081166000908152600080516020613e8a833981519152602052604090205416151590565b6124795760405163170c65f360e21b81526001600160a01b03821660048201526024016101f1565b612481611dd4565b6001600160a01b031661249382612afa565b546001600160a01b0316146124e9576124ab81612afa565b546001600160a01b03166124bd611dd4565b60405163bf89df8360e01b81526001600160a01b039283166004820152911660248201526044016101f1565b604051637da566ff60e11b81526001600160a01b0382166004820152309063fb4acdfe90602401602060405180830381865afa15801561252d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125519190613b20565b612579576040516345f60d2760e11b81526001600160a01b03821660048201526024016101f1565b61258281612afa565b6002015460038401546001600160a01b039081169116146125e45760038301546001600160a01b03166125b482612afa565b60020154604051630ada499f60e21b81526001600160a01b039283166004820152911660248201526044016101f1565b861561262d576008820154600c840154101561261a57600c830154612615908c90612610906001613c8f565b612273565b612657565b6126258b6002612b10565b50505061223b565b6011830154600003612643576126438b42612246565b61264c8b612b59565b6126578b6000612273565b600061266b6126668b42613ddc565b612b8d565b90506000612677612ba9565b9050808211156126af5761268b8142613c8f565b604051631ff8ef4960e11b81526004810191909152602481018c90526044016101f1565b50506009820154610100900460ff16801561273357506003830154612731906001600160a01b03168c6126e26001612be3565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b155b15612743576126258b6005612b10565b6002830154612768906001600160a01b0316876127634262093a80613c8f565b6122a0565b6001600160a01b038a811660009081527f0b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd099602052604090205416156127dc57896127b0611dd4565b60405163e2c62da760e01b81526001600160a01b039283166004820152911660248201526044016101f1565b60028301546127f5908b906001600160a01b03166122ec565b816003015483600401541015612810576126258b6004612b10565b600180830154601285015461282b928e9291611cbf91613c8f565b86156128395750505061223b565b6001600160a01b038b166000908152600080516020613e6a8339815191526020526040902042600d820155600e8101899055600501805460ff191660011790556118ca8b8360030154878761288d86612afa565b600101546001600160a01b0316612c03565b60007f60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e612121565b60007fac917e5a91e3acb656f85d06b7b48bef4356fe56119fafe1fa91bc7497fe3a52612121565b6001600160a01b03811660009081527fac917e5a91e3acb656f85d06b7b48bef4356fe56119fafe1fa91bc7497fe3a526020526040812060050180549161293583613c3c565b919050555050565b6001600160a01b0382166000908152600080516020613e6a8339815191526020526040812060040180548392906123bf908490613c8f565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b580546000906129a790613c3c565b91829055506129b7600143613dc9565b406040516020016129d2929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b60007f687c97506870980d9774f5f2c2cc3fd31b851a1f28e3f222da2fb0b52c189112826000015183602001518460400151856060015186608001518760a0015180519060200120604051602001612a8597969594939291909687526020870195909552604086019390935260608501919091526001600160a01b0390811660808501521660a083015260c082015260e00190565b604051602081830303815290604052805190602001209050919050565b600080600080612ab28686613080565b925092509250612ac282826130cd565b5090949350505050565b815115612adc5781518083602001fd5b8060405162461bcd60e51b81526004016101f19190613e03565b5050565b6000600080516020613e8a833981519152612121565b6001600160a01b0382166000908152600080516020613e6a8339815191526020526040902060059081018054839260ff1990911690600190849081111561237e5761237e613b0a565b6001600160a01b0381166000908152600080516020613e6a8339815191526020526040812060110180549161293583613c3c565b600080821215612ba557612ba082613e16565b611e85565b5090565b7f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f899546000908015612bda5780612bdd565b603c5b91505090565b600080826002811115612bf857612bf8613b0a565b6001901b9392505050565b60005b8351811015613078576000848281518110612c2357612c23613b3d565b6020026020010151905060003a8260200151612c3f9190613e32565b90506000612c4c83611eb3565b60008181527f600fcc152361d3982abba1c7da63e8ed79c28272e1cb6960e42211209375d5b4602052604090205490915060ff1615612ca15760405163d1d36dcd60e01b8152600481018290526024016101f1565b612caa81611fc8565b6000612cc784608001518389888151811061055357610553613b3d565b905080612ce65783608001518288878151811061057f5761057f613b3d565b8351421115612d0e578351604051636634e92360e01b815260048101919091526024016101f1565b88846040015184612d1f9190613c8f565b612d299190613c8f565b612d328b61210f565b600401541015612d885788846040015184612d4d9190613c8f565b612d579190613c8f565b612d608b61210f565b6004015460405163cf47918160e01b81526004016101f1929190918252602082015260400190565b612dac8a8a866040015186612d9d9190613c8f565b612da79190613c8f565b612387565b60005a9050306001600160a01b031685606001516001600160a01b031603612e005760608501516040516373935eb960e11b81526001600160a01b03808e16600483015290911660248201526044016101f1565b60008086606001516001600160a01b031687604001518860a001518f604051602001612e2d929190613bd3565b60408051601f1981840301815290829052612e4791613c0a565b60006040518083038185875af1925050503d8060008114612e84576040519150601f19603f3d011682016040523d82523d6000602084013e612e89565b606091505b5091509150612eca8760600151838360405180604001604052806014815260200173119d5b98dd1a5bdb8810d85b1b0811985a5b195960621b81525061205b565b50505060005a612eda9083613dc9565b90506000612f1b8d6001600160a01b031660009081527fac917e5a91e3acb656f85d06b7b48bef4356fe56119fafe1fa91bc7497fe3a546020526040902090565b905060008160020154118015612f345750806002015482115b15612f625760028101546040516367c4251560e01b81526004810191909152602481018390526044016101f1565b508560200151811115612f98576020860151604051631935f53160e01b81526004810191909152602481018290526044016101f1565b621e8480811115612fc8576040516367c4251560e01b8152621e84806004820152602481018290526044016101f1565b6001600160a01b038c166000908152600080516020613e6a83398151915260205260408120600f01829055612ffd3a83613e32565b6130079087613dc9565b90506130138d8261293d565b6001600160a01b0389166108fc8d61302b3a86613e32565b6130359190613c8f565b6040518115909202916000818181858888f1935050505015801561305d573d6000803e3d6000fd5b5050505050505050808061307090613c3c565b915050612c06565b505050505050565b600080600083516041036130ba5760208401516040850151606086015160001a6130ac88828585613186565b9550955095505050506130c6565b50508151600091506002905b9250925092565b60008260038111156130e1576130e1613b0a565b036130ea575050565b60018260038111156130fe576130fe613b0a565b0361311c5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561313057613130613b0a565b036131515760405163fce698f760e01b8152600481018290526024016101f1565b600382600381111561316557613165613b0a565b03612af6576040516335e2f38360e21b8152600481018290526024016101f1565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156131c1575060009150600390508261324b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015613215573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166132415750600092506001915082905061324b565b9250600091508190505b9450945094915050565b8280548282559060005260206000209081019282156132aa579160200282015b828111156132aa57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613275565b50612ba59291505b80821115612ba557600081556001016132b2565b6000602082840312156132d857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715613317576133176132df565b60405290565b604051601f8201601f191681016001600160401b0381118282101715613345576133456132df565b604052919050565b60006001600160401b03821115613366576133666132df565b5060051b60200190565b6001600160a01b038116811461338557600080fd5b50565b803561339381613370565b919050565b600082601f8301126133a957600080fd5b81356001600160401b038111156133c2576133c26132df565b6133d5601f8201601f191660200161331d565b8181528460208386010111156133ea57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261341857600080fd5b8135602061342d6134288361334d565b61331d565b82815260059290921b8401810191818101908684111561344c57600080fd5b8286015b8481101561350c5780356001600160401b03808211156134705760008081fd5b9088019060c0828b03601f190181131561348a5760008081fd5b6134926132f5565b878401358152604080850135898301526060808601358284015260809150818601356134bd81613370565b9083015260a0858101356134d081613370565b838301529285013592848411156134e957600091508182fd5b6134f78e8b86890101613398565b90830152508652505050918301918301613450565b509695505050505050565b600082601f83011261352857600080fd5b813560206135386134288361334d565b82815260059290921b8401810191818101908684111561355757600080fd5b8286015b8481101561350c5780356001600160401b0381111561357a5760008081fd5b6135888986838b0101613398565b84525091830191830161355b565b600080604083850312156135a957600080fd5b82356001600160401b03808211156135c057600080fd5b6135cc86838701613407565b935060208501359150808211156135e257600080fd5b506135ef85828601613517565b9150509250929050565b600082601f83011261360a57600080fd5b8135602061361a6134288361334d565b82815260059290921b8401810191818101908684111561363957600080fd5b8286015b8481101561350c57803561365081613370565b835291830191830161363d565b60008060008060008060008060006101208a8c03121561367c57600080fd5b6136858a613388565b985060208a01356001600160401b03808211156136a157600080fd5b6136ad8d838e01613398565b99506136bb60408d01613388565b985060608c01359150808211156136d157600080fd5b6136dd8d838e01613398565b975060808c01359150808211156136f357600080fd5b6136ff8d838e01613398565b965060a08c013591508082111561371557600080fd5b6137218d838e01613398565b955060c08c013591508082111561373757600080fd5b6137438d838e01613398565b945060e08c013591508082111561375957600080fd5b6137658d838e01613398565b93506101008c013591508082111561377c57600080fd5b506137898c828d016135f9565b9150509295985092959850929598565b6000806000606084860312156137ae57600080fd5b83356137b981613370565b925060208401356137c981613370565b929592945050506040919091013590565b801515811461338557600080fd5b8035613393816137da565b60008060008060008060008060006101208a8c03121561381257600080fd5b8935985060208a013561382481613370565b975060408a013561383481613370565b965060608a0135955060808a0135945061385060a08b016137e8565b935060c08a0135925060e08a01356001600160401b038082111561387357600080fd5b61387f8d838e01613407565b93506101008c013591508082111561389657600080fd5b506137898c828d01613517565b6000806000806000806000806000806101408b8d0312156138c357600080fd5b8a3599506138d360208c01613388565b98506138e160408c01613388565b975060608b0135965060808b013595506138fd60a08c016137e8565b945060c08b0135935060e08b01356001600160401b038082111561392057600080fd5b61392c8e838f01613407565b94506101008d013591508082111561394357600080fd5b61394f8e838f01613517565b93506101208d013591508082111561396657600080fd5b506139738d828e016135f9565b9150509295989b9194979a5092959850565b60006020828403121561399757600080fd5b813561205481613370565b60008060008060008060008060006101208a8c0312156139c157600080fd5b89356001600160401b03808211156139d857600080fd5b6139e48d838e01613398565b9a506136ad60208d01613388565b6000806000806000806000806000806101408b8d031215613a1257600080fd5b613a1b8b613388565b995060208b01356001600160401b0380821115613a3757600080fd5b613a438e838f01613398565b9a50613a5160408e01613388565b9950613a5f60608e01613388565b985060808d0135915080821115613a7557600080fd5b613a818e838f01613398565b975060a08d0135915080821115613a9757600080fd5b613aa38e838f01613398565b965060c08d0135915080821115613ab957600080fd5b613ac58e838f01613398565b955060e08d0135915080821115613adb57600080fd5b613ae78e838f01613398565b94506101008d0135915080821115613afe57600080fd5b61394f8e838f01613398565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613b3257600080fd5b8151612054816137da565b634e487b7160e01b600052603260045260246000fd5b60005b83811015613b6e578181015183820152602001613b56565b50506000910152565b60008151808452613b8f816020860160208601613b53565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000613bca6060830184613b77565b95945050505050565b60008351613be5818460208801613b53565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008251613c1c818460208701613b53565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060018201613c4e57613c4e613c26565b5060010190565b600181811c90821680613c6957607f821691505b602082108103613c8957634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115611e8557611e85613c26565b600082613cbf57634e487b7160e01b600052601260045260246000fd5b500690565b601f82111561039557600081815260208120601f850160051c81016020861015613ceb5750805b601f850160051c820191505b8181101561307857828155600101613cf7565b81516001600160401b03811115613d2357613d236132df565b613d3781613d318454613c55565b84613cc4565b602080601f831160018114613d6c5760008415613d545750858301515b600019600386901b1c1916600185901b178555613078565b600085815260208120601f198616915b82811015613d9b57888601518255948401946001909101908401613d7c565b5085821015613db95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115611e8557611e85613c26565b8181036000831280158383131683831282161715613dfc57613dfc613c26565b5092915050565b6020815260006120546020830184613b77565b6000600160ff1b8201613e2b57613e2b613c26565b5060000390565b8082028115828204841417611e8557611e85613c2656fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b672050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f8970b069b3f7005cf212866feceedec3f4a425661eeb7c281e5cbcbe563cfddd098a2646970667358221220e6a7c428640910fa89eeb18fb3c042c6fa968da91e3f4a4efb4dc6056f438ccb64736f6c63430008110033";

type SbFunctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunction__factory extends ContractFactory {
  constructor(...args: SbFunctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunction> {
    return super.deploy(overrides || {}) as Promise<SbFunction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunction {
    return super.attach(address) as SbFunction;
  }
  override connect(signer: Signer): SbFunction__factory {
    return super.connect(signer) as SbFunction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionInterface {
    return new utils.Interface(_abi) as SbFunctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunction {
    return new Contract(address, _abi, signerOrProvider) as SbFunction;
  }
}
