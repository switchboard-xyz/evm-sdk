/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Routine, RoutineInterface } from "../../../src/routine/Routine";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FunctionCallerNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
    ],
    name: "InvalidRoutineId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
    ],
    name: "RequestIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
    ],
    name: "RoutineIdAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "RoutinesDisabled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "routineId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "RoutineCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoutineFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoutineWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
    ],
    name: "createRoutineWithId",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveRoutinesByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "string",
            name: "schedule",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "lastCalledAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct RoutineLib.Routine[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "getRoutinesByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "string",
            name: "schedule",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "lastCalledAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct RoutineLib.Routine[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getRoutinesByFunctionId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "string",
            name: "schedule",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "lastCalledAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct RoutineLib.Routine[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
    ],
    name: "routineEscrowFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "routineEscrowWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
    ],
    name: "routineExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
    ],
    name: "routines",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "string",
            name: "schedule",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "lastCalledAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct RoutineLib.Routine",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "routineId",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "schedule",
        type: "string",
      },
    ],
    name: "updateRoutine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061462b806100206000396000f3fe6080604052600436106100865760003560e01c80639da3c6eb116100595780639da3c6eb1461010a578063b36afb5a1461012a578063c98d9be81461014a578063fab086831461017a578063fdcc54d21461019a57600080fd5b806327c66c0f1461008b578063410d3013146100c25780635d4e4594146100d75780639300c999146100ea575b600080fd5b34801561009757600080fd5b506100ab6100a636600461405a565b6101c7565b6040516100b99291906141ad565b60405180910390f35b6100d56100d03660046142da565b61091a565b005b6100d56100e536600461405a565b61137c565b3480156100f657600080fd5b506100d56101053660046142da565b61151b565b34801561011657600080fd5b506100ab61012536600461405a565b611c89565b34801561013657600080fd5b506100ab61014536600461405a565b612f58565b34801561015657600080fd5b5061016a61016536600461405a565b6136a8565b60405190151581526020016100b9565b34801561018657600080fd5b506100d561019536600461439b565b6136b9565b3480156101a657600080fd5b506101ba6101b536600461405a565b6138de565b6040516100b991906143c5565b6060806000805160206145b68339815191526000805b6001830154811015610416576000836001018281548110610200576102006143d8565b60009182526020808320909101546001600160a01b0390811680845287835260408085208151610140810183528154851681526001820154909416948401949094526002840180549296509293929084019161025b906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610287906143ee565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081526020016003820180546102ed906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610319906143ee565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff16908111156103ab576103ab6140c2565b60068111156103bc576103bc6140c2565b81526007820154610100900460ff16602082015260089091015460409091015280519091506001600160a01b0389811691160361040157836103fd8161443e565b9450505b5050808061040e9061443e565b9150506101dd565b5060008167ffffffffffffffff8111156104325761043261424e565b60405190808252806020026020018201604052801561045b578160200160208202803683370190505b50905060008267ffffffffffffffff8111156104795761047961424e565b6040519080825280602002602001820160405280156104b257816020015b61049f613fc8565b8152602001906001900390816104975790505b50905060005b600185015481101561090d5760008560010182815481106104db576104db6143d8565b60009182526020808320909101546001600160a01b03908116808452898352604080852081516101408101835281548516815260018201549094169484019490945260028401805492965092939290840191610536906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610562906143ee565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b505050505081526020016003820180546105c8906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546105f4906143ee565b80156106415780601f1061061657610100808354040283529160200191610641565b820191906000526020600020905b81548152906001019060200180831161062457829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115610686576106866140c2565b6006811115610697576106976140c2565b81526007820154610100900460ff16602082015260089091015460409091015280519091506001600160a01b038b81169116036108f8576001600160a01b0380831660009081526020898152604091829020825161014081018452815485168152600182015490941691840191909152600281018054919284019161071b906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610747906143ee565b80156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b505050505081526020016003820180546107ad906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546107d9906143ee565b80156108265780601f106107fb57610100808354040283529160200191610826565b820191906000526020600020905b81548152906001019060200180831161080957829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff169081111561086b5761086b6140c2565b600681111561087c5761087c6140c2565b81526007820154610100900460ff166020820152600890910154604090910152846108a688614457565b975087815181106108b9576108b96143d8565b6020026020010181905250818587815181106108d7576108d76143d8565b60200260200101906001600160a01b031690816001600160a01b0316815250505b505080806109059061443e565b9150506104b8565b5090969095509350505050565b600260006109346000805160206145d68339815191525490565b9050600282600481111561094a5761094a6140c2565b118015610964575061096261095d613acc565b613af9565b155b1561099b57610971613acc565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b60048260048111156109af576109af6140c2565b1480156109c957506109c76109c2613acc565b613b82565b155b156109fa576109d6613acc565b6040516275103f60e11b81526001600160a01b039091166004820152602401610992565b6001826004811115610a0e57610a0e6140c2565b148015610a1a57508015155b15610a385760405163887efaa560e01b815260040160405180910390fd5b60018114158015610a4857508015155b15610a665760405163887efaa560e01b815260040160405180910390fd5b610a8d826004811115610a7b57610a7b6140c2565b6000805160206145d683398151915255565b6000610a97613acc565b9050610aa287613baa565b610aca57604051631e1d8eb160e11b81526001600160a01b0388166004820152602401610992565b610ad388613bec565b15610afc5760405163704f61ed60e01b81526001600160a01b0389166004820152602401610992565b6001600160a01b0380891660009081527fe08a3b4c6c3d2fd532698fd427d3f5b0497ef9035291d02cdb919e9e7e8df5ff60205260409020541615610b5f57604051631fdfa01b60e31b81526001600160a01b0389166004820152602401610992565b6001600160a01b038816610b9157604051630b53249760e01b81526001600160a01b0389166004820152602401610992565b6000610b9c88613c19565b60405180610100016040529081600082018054610bb8906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610be4906143ee565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff166006811115610c8e57610c8e6140c2565b6006811115610c9f57610c9f6140c2565b81526020016006820160405180610120016040529081600082018054610cc4906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf0906143ee565b8015610d3d5780601f10610d1257610100808354040283529160200191610d3d565b820191906000526020600020905b815481529060010190602001808311610d2057829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610d9f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d81575b50505050508152602001600282018054610db8906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610de4906143ee565b8015610e315780601f10610e0657610100808354040283529160200191610e31565b820191906000526020600020905b815481529060010190602001808311610e1457829003601f168201915b50505050508152602001600382018054610e4a906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610e76906143ee565b8015610ec35780601f10610e9857610100808354040283529160200191610ec3565b820191906000526020600020905b815481529060010190602001808311610ea657829003601f168201915b50505050508152602001600482018054610edc906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610f08906143ee565b8015610f555780601f10610f2a57610100808354040283529160200191610f55565b820191906000526020600020905b815481529060010190602001808311610f3857829003601f168201915b50505050508152602001600582018054610f6e906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9a906143ee565b8015610fe75780601f10610fbc57610100808354040283529160200191610fe7565b820191906000526020600020905b815481529060010190602001808311610fca57829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561103f57602002820191906000526020600020905b81548152602001906001019080831161102b575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f870154818601526010870154938101939093526011860154606084015260128601546080840152601386015460a0840152601486015460c0840152601586015416151560e0830152601690940154938101939093520152905060006110e889613c5b565b60408051610100808201835283548252600184015460ff808216151560208086019190915292820481161515948401949094526201000090048316151560608301526002840154608083015260038401548316151560a0830152600484015460c080840191909152600590940154909216151560e0820152918401510151519091501580159061118757506111858260c001516020015184613c83565b155b156111b857604051630724d91960e31b81526001600160a01b03808b16600483015284166024820152604401610992565b8060400151156111e65760405163e71fe28b60e01b81526001600160a01b038a166004820152602401610992565b8060600151801561120d5750826001600160a01b031682602001516001600160a01b031614155b1561124457602082015160405163bf89df8360e01b81526001600160a01b0391821660048201529084166024820152604401610992565b6112518a8a8a898b613ce8565b7f275994c3f98b40ffc33e238dface8705a449977b49eb0a027dcfa35e2a5a7bb380546001810182556000919091527f88cb30102d3cc7de9e0d68fd3f54ff92a5afcb6fa09445314f46eb0497acb71a0180546001600160a01b0319166001600160a01b038c16179055896001600160a01b0316836001600160a01b03168a6001600160a01b03167ff1a84f7c658e1f797b72cb4c4d8e258f64cf98122eb08d3de63edda4b9c6db028a604051611308919061446e565b60405180910390a461131a8a34613ee3565b60405134815233906001600160a01b038b16907fcc5ac14af2b9e245e37292547b04feb27074e04095f62b2878da41f7c07dddef9060200160405180910390a3505050611373816000805160206145d683398151915255565b50505050505050565b600260006113966000805160206145d68339815191525490565b905060028260048111156113ac576113ac6140c2565b1180156113c157506113bf61095d613acc565b155b156113ce57610971613acc565b60048260048111156113e2576113e26140c2565b1480156113f757506113f56109c2613acc565b155b15611404576109d6613acc565b6001826004811115611418576114186140c2565b14801561142457508015155b156114425760405163887efaa560e01b815260040160405180910390fd5b6001811415801561145257508015155b156114705760405163887efaa560e01b815260040160405180910390fd5b611485826004811115610a7b57610a7b6140c2565b61148e83613bec565b6114b65760405163704f61ed60e01b81526001600160a01b0384166004820152602401610992565b6114c08334613ee3565b60405134815233906001600160a01b038516907fcc5ac14af2b9e245e37292547b04feb27074e04095f62b2878da41f7c07dddef9060200160405180910390a3611516816000805160206145d683398151915255565b505050565b600260006115356000805160206145d68339815191525490565b9050600282600481111561154b5761154b6140c2565b118015611560575061155e61095d613acc565b155b1561156d57610971613acc565b6004826004811115611581576115816140c2565b14801561159657506115946109c2613acc565b155b156115a3576109d6613acc565b60018260048111156115b7576115b76140c2565b1480156115c357508015155b156115e15760405163887efaa560e01b815260040160405180910390fd5b600181141580156115f157508015155b1561160f5760405163887efaa560e01b815260040160405180910390fd5b611624826004811115610a7b57610a7b6140c2565b600061162f88613f57565b60018101549091506001600160a01b0316331461167657600181015460405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401610992565b80546001600160a01b03888116911614611c655761169387613baa565b6116bb57604051631e1d8eb160e11b81526001600160a01b0388166004820152602401610992565b60006116c688613c19565b604051806101000160405290816000820180546116e2906143ee565b80601f016020809104026020016040519081016040528092919081815260200182805461170e906143ee565b801561175b5780601f106117305761010080835404028352916020019161175b565b820191906000526020600020905b81548152906001019060200180831161173e57829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff1660068111156117b8576117b86140c2565b60068111156117c9576117c96140c2565b815260200160068201604051806101200160405290816000820180546117ee906143ee565b80601f016020809104026020016040519081016040528092919081815260200182805461181a906143ee565b80156118675780601f1061183c57610100808354040283529160200191611867565b820191906000526020600020905b81548152906001019060200180831161184a57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156118c957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118ab575b505050505081526020016002820180546118e2906143ee565b80601f016020809104026020016040519081016040528092919081815260200182805461190e906143ee565b801561195b5780601f106119305761010080835404028352916020019161195b565b820191906000526020600020905b81548152906001019060200180831161193e57829003601f168201915b50505050508152602001600382018054611974906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546119a0906143ee565b80156119ed5780601f106119c2576101008083540402835291602001916119ed565b820191906000526020600020905b8154815290600101906020018083116119d057829003601f168201915b50505050508152602001600482018054611a06906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611a32906143ee565b8015611a7f5780601f10611a5457610100808354040283529160200191611a7f565b820191906000526020600020905b815481529060010190602001808311611a6257829003601f168201915b50505050508152602001600582018054611a98906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac4906143ee565b8015611b115780601f10611ae657610100808354040283529160200191611b11565b820191906000526020600020905b815481529060010190602001808311611af457829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015611b6957602002820191906000526020600020905b815481526020019060010190808311611b55575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f870154818601526010870154938101939093526011860154606084015260128601546080840152601386015460a0840152601486015460c0808501919091526015870154909116151560e084015260169095015490820152918101919091529082015101515190915015801590611c345750611c328160c001516020015133613c83565b155b15611c6357604051630724d91960e31b81526001600160a01b0389166004820152336024820152604401610992565b505b611c728888888789613ce8565b50611373816000805160206145d683398151915255565b6060807f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f8976000805160206145b68339815191526000805b60018301548110156124a6576000836001018281548110611ce357611ce36143d8565b60009182526020808320909101546001600160a01b03908116808452878352604080852081516101408101835281548516815260018201549094169484019490945260028401805492965092939290840191611d3e906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6a906143ee565b8015611db75780601f10611d8c57610100808354040283529160200191611db7565b820191906000526020600020905b815481529060010190602001808311611d9a57829003601f168201915b50505050508152602001600382018054611dd0906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfc906143ee565b8015611e495780601f10611e1e57610100808354040283529160200191611e49565b820191906000526020600020905b815481529060010190602001808311611e2c57829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115611e8e57611e8e6140c2565b6006811115611e9f57611e9f6140c2565b8152600782015460ff610100918290041660208084019190915260089093015460409283015283516001600160a01b03166000908152928a905281832082519182019092528154939450919282908290611ef8906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611f24906143ee565b8015611f715780601f10611f4657610100808354040283529160200191611f71565b820191906000526020600020905b815481529060010190602001808311611f5457829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff166006811115611fce57611fce6140c2565b6006811115611fdf57611fdf6140c2565b81526020016006820160405180610120016040529081600082018054612004906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612030906143ee565b801561207d5780601f106120525761010080835404028352916020019161207d565b820191906000526020600020905b81548152906001019060200180831161206057829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156120df57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116120c1575b505050505081526020016002820180546120f8906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612124906143ee565b80156121715780601f1061214657610100808354040283529160200191612171565b820191906000526020600020905b81548152906001019060200180831161215457829003601f168201915b5050505050815260200160038201805461218a906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546121b6906143ee565b80156122035780601f106121d857610100808354040283529160200191612203565b820191906000526020600020905b8154815290600101906020018083116121e657829003601f168201915b5050505050815260200160048201805461221c906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612248906143ee565b80156122955780601f1061226a57610100808354040283529160200191612295565b820191906000526020600020905b81548152906001019060200180831161227857829003601f168201915b505050505081526020016005820180546122ae906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546122da906143ee565b80156123275780601f106122fc57610100808354040283529160200191612327565b820191906000526020600020905b81548152906001019060200180831161230a57829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561237f57602002820191906000526020600020905b81548152602001906001019080831161236b575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f870154818601526010870154938101939093526011860154606084015260128601546080840152601386015460a0840152601486015460c0840152601586015416151560e08301526016909401549381019390935201529050600060018360e001516006811115612437576124376140c2565b1480612458575060008360e001516006811115612456576124566140c2565b145b90508a6001600160a01b031682606001516001600160a01b031614801561247c5750805b1561248f578561248b8161443e565b9650505b50505050808061249e9061443e565b915050611cc0565b5060008167ffffffffffffffff8111156124c2576124c261424e565b6040519080825280602002602001820160405280156124eb578160200160208202803683370190505b50905060008267ffffffffffffffff8111156125095761250961424e565b60405190808252806020026020018201604052801561254257816020015b61252f613fc8565b8152602001906001900390816125275790505b50905060005b6001850154811015612f4a57600085600101828154811061256b5761256b6143d8565b60009182526020808320909101546001600160a01b039081168084528983526040808520815161014081018352815485168152600182015490941694840194909452600284018054929650929392908401916125c6906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546125f2906143ee565b801561263f5780601f106126145761010080835404028352916020019161263f565b820191906000526020600020905b81548152906001019060200180831161262257829003601f168201915b50505050508152602001600382018054612658906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612684906143ee565b80156126d15780601f106126a6576101008083540402835291602001916126d1565b820191906000526020600020905b8154815290600101906020018083116126b457829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115612716576127166140c2565b6006811115612727576127276140c2565b8152600782015460ff610100918290041660208084019190915260089093015460409283015283516001600160a01b03166000908152928c905281832082519182019092528154939450919282908290612780906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546127ac906143ee565b80156127f95780601f106127ce576101008083540402835291602001916127f9565b820191906000526020600020905b8154815290600101906020018083116127dc57829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff166006811115612856576128566140c2565b6006811115612867576128676140c2565b8152602001600682016040518061012001604052908160008201805461288c906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546128b8906143ee565b80156129055780601f106128da57610100808354040283529160200191612905565b820191906000526020600020905b8154815290600101906020018083116128e857829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561296757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612949575b50505050508152602001600282018054612980906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546129ac906143ee565b80156129f95780601f106129ce576101008083540402835291602001916129f9565b820191906000526020600020905b8154815290600101906020018083116129dc57829003601f168201915b50505050508152602001600382018054612a12906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612a3e906143ee565b8015612a8b5780601f10612a6057610100808354040283529160200191612a8b565b820191906000526020600020905b815481529060010190602001808311612a6e57829003601f168201915b50505050508152602001600482018054612aa4906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612ad0906143ee565b8015612b1d5780601f10612af257610100808354040283529160200191612b1d565b820191906000526020600020905b815481529060010190602001808311612b0057829003601f168201915b50505050508152602001600582018054612b36906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612b62906143ee565b8015612baf5780601f10612b8457610100808354040283529160200191612baf565b820191906000526020600020905b815481529060010190602001808311612b9257829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015612c0757602002820191906000526020600020905b815481526020019060010190808311612bf3575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f870154818601526010870154938101939093526011860154606084015260128601546080840152601386015460a0840152601486015460c0840152601586015416151560e08301526016909401549381019390935201529050600060018360e001516006811115612cbf57612cbf6140c2565b1480612ce0575060008360e001516006811115612cde57612cde6140c2565b145b90508c6001600160a01b031682606001516001600160a01b0316148015612d045750805b15612f33576001600160a01b03808516600090815260208b81526040918290208251610140810184528154851681526001820154909416918401919091526002810180549192840191612d56906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612d82906143ee565b8015612dcf5780601f10612da457610100808354040283529160200191612dcf565b820191906000526020600020905b815481529060010190602001808311612db257829003601f168201915b50505050508152602001600382018054612de8906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054612e14906143ee565b8015612e615780601f10612e3657610100808354040283529160200191612e61565b820191906000526020600020905b815481529060010190602001808311612e4457829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115612ea657612ea66140c2565b6006811115612eb757612eb76140c2565b81526007820154610100900460ff16602082015260089091015460409091015286612ee18a614457565b99508981518110612ef457612ef46143d8565b602002602001018190525083878981518110612f1257612f126143d8565b60200260200101906001600160a01b031690816001600160a01b0316815250505b505050508080612f429061443e565b915050612548565b509097909650945050505050565b6060806000805160206145b68339815191526000805b60018301548110156131ac576000836001018281548110612f9157612f916143d8565b60009182526020808320909101546001600160a01b03908116808452878352604080852081516101408101835281548516815260018201549094169484019490945260028401805492965092939290840191612fec906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054613018906143ee565b80156130655780601f1061303a57610100808354040283529160200191613065565b820191906000526020600020905b81548152906001019060200180831161304857829003601f168201915b5050505050815260200160038201805461307e906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546130aa906143ee565b80156130f75780601f106130cc576101008083540402835291602001916130f7565b820191906000526020600020905b8154815290600101906020018083116130da57829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff169081111561313c5761313c6140c2565b600681111561314d5761314d6140c2565b81526007820154610100900460ff166020808301919091526008909201546040909101528101519091506001600160a01b0389811691160361319757836131938161443e565b9450505b505080806131a49061443e565b915050612f6e565b5060008167ffffffffffffffff8111156131c8576131c861424e565b6040519080825280602002602001820160405280156131f1578160200160208202803683370190505b50905060008267ffffffffffffffff81111561320f5761320f61424e565b60405190808252806020026020018201604052801561324857816020015b613235613fc8565b81526020019060019003908161322d5790505b50905060005b600185015481101561090d576000856001018281548110613271576132716143d8565b60009182526020808320909101546001600160a01b039081168084528983526040808520815161014081018352815485168152600182015490941694840194909452600284018054929650929392908401916132cc906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546132f8906143ee565b80156133455780601f1061331a57610100808354040283529160200191613345565b820191906000526020600020905b81548152906001019060200180831161332857829003601f168201915b5050505050815260200160038201805461335e906143ee565b80601f016020809104026020016040519081016040528092919081815260200182805461338a906143ee565b80156133d75780601f106133ac576101008083540402835291602001916133d7565b820191906000526020600020905b8154815290600101906020018083116133ba57829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff169081111561341c5761341c6140c2565b600681111561342d5761342d6140c2565b81526007820154610100900460ff166020808301919091526008909201546040909101528101519091506001600160a01b038b8116911603613693576001600160a01b038083166000908152602089815260409182902082516101408101845281548516815260018201549094169184019190915260028101805491928401916134b6906143ee565b80601f01602080910402602001604051908101604052809291908181526020018280546134e2906143ee565b801561352f5780601f106135045761010080835404028352916020019161352f565b820191906000526020600020905b81548152906001019060200180831161351257829003601f168201915b50505050508152602001600382018054613548906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054613574906143ee565b80156135c15780601f10613596576101008083540402835291602001916135c1565b820191906000526020600020905b8154815290600101906020018083116135a457829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115613606576136066140c2565b6006811115613617576136176140c2565b81526007820154610100900460ff1660208201526008909101546040909101528461364188614457565b97508781518110613654576136546143d8565b602002602001018190525081858781518110613672576136726143d8565b60200260200101906001600160a01b031690816001600160a01b0316815250505b505080806136a09061443e565b91505061324e565b60006136b382613bec565b92915050565b600260006136d36000805160206145d68339815191525490565b905060028260048111156136e9576136e96140c2565b1180156136fe57506136fc61095d613acc565b155b1561370b57610971613acc565b600482600481111561371f5761371f6140c2565b14801561373457506137326109c2613acc565b155b15613741576109d6613acc565b6001826004811115613755576137556140c2565b14801561376157508015155b1561377f5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561378f57508015155b156137ad5760405163887efaa560e01b815260040160405180910390fd5b6137c2826004811115610a7b57610a7b6140c2565b60006137cd85613f57565b60018101549091506001600160a01b0316331461381457600181015460405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401610992565b806006015484111561384957600681015460405163cf47918160e01b8152610992918691600401918252602082015260400190565b6138538585613f7e565b604051339085156108fc029086906000818181858888f19350505050158015613880573d6000803e3d6000fd5b5060405184815233906001600160a01b038716907fe83d8beebc2c8653025e97a557138b7d643d673817a5338639e45f171866b2899060200160405180910390a3506138d8816000805160206145d683398151915255565b50505050565b6138e6613fc8565b6001600160a01b0382811660009081526000805160206145b68339815191526020818152604080842081516101408101835281548716815260018201549096169286019290925260028201805493959391840191613943906143ee565b80601f016020809104026020016040519081016040528092919081815260200182805461396f906143ee565b80156139bc5780601f10613991576101008083540402835291602001916139bc565b820191906000526020600020905b81548152906001019060200180831161399f57829003601f168201915b505050505081526020016003820180546139d5906143ee565b80601f0160208091040260200160405190810160405280929190818152602001828054613a01906143ee565b8015613a4e5780601f10613a2357610100808354040283529160200191613a4e565b820191906000526020600020905b815481529060010190602001808311613a3157829003601f168201915b505050918352505060048201546020820152600582015460408201526006808301546060830152600783015460809092019160ff1690811115613a9357613a936140c2565b6006811115613aa457613aa46140c2565b81526007820154610100900460ff166020820152600890910154604090910152949350505050565b3360143610801590613ae657506001600160a01b03811630145b15613af6575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff16806136b357507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff1692915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c823613b5c565b6001600160a01b0390811660009081527f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f897602052604090206001015416151590565b6001600160a01b0390811660009081526000805160206145b6833981519152602052604090205416151590565b60007f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f8975b6001600160a01b039092166000908152602092909252506040902090565b60007f0503b8716b1b24014711cddf15203884982757c4ce93b16b28e1e64985c01b0a613c3d565b6000805b8351811015613cde57826001600160a01b0316848281518110613cac57613cac6143d8565b60200260200101516001600160a01b031603613ccc5760019150506136b3565b80613cd68161443e565b915050613c87565b5060009392505050565b613d31858280516020918201206001600160a01b039290921660009081527f369c34b0cf6a0c0360099093f8ebb465df4755f0e75ec0446b0d3884a8735f379091526040902055565b60006000805160206145b68339815191529050604051806101400160405280866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200160008152602001600081526020016000815260200160006006811115613da257613da26140c2565b8152600060208083018290526001600160a01b038a1682528490526040908190206008015491019015613df0576001600160a01b038816600090815260208490526040902060080154613df2565b425b90526001600160a01b0380881660009081526020848152604091829020845181549085166001600160a01b031991821617825591850151600182018054919095169216919091179092558201516002820190613e4e90826144cf565b5060608201516003820190613e6390826144cf565b506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690836006811115613eac57613eac6140c2565b02179055506101008281015160078301805461ff00191660ff90921690920217905561012090910151600890910155505050505050565b6001600160a01b03821660009081526000805160206145b683398151915260208190526040822060068101805492939192859290613f2290849061458f565b90915550506006810154600003613f475760078101805460ff191660041790556138d8565b600701805460ff19169055505050565b6001600160a01b031660009081526000805160206145b68339815191526020526040902090565b6001600160a01b03821660009081526000805160206145b683398151915260208190526040822060068101805492939192859290613fbd9084906145a2565b909155505050505050565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600081526020016000600681111561402a5761402a6140c2565b815260006020820181905260409091015290565b80356001600160a01b038116811461405557600080fd5b919050565b60006020828403121561406c57600080fd5b6140758261403e565b9392505050565b6000815180845260005b818110156140a257602081850181015186830182015201614086565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b600781106140f657634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b031682526000610140602083015161412660208601826001600160a01b03169052565b50604083015181604086015261413e8286018261407c565b91505060608301518482036060860152614158828261407c565b9150506080830151608085015260a083015160a085015260c083015160c085015260e083015161418b60e08601826140d8565b506101008381015160ff16908501526101209283015192909301919091525090565b604080825283519082018190526000906020906060840190828701845b828110156141ef5781516001600160a01b0316845292840192908401906001016141ca565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561423f57601f1986840301855261422d8383516140fa565b94870194925090860190600101614211565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561427f5761427f61424e565b604051601f8501601f19908116603f011681019082821181831017156142a7576142a761424e565b816040528093508581528686860111156142c057600080fd5b858560208301376000602087830101525050509392505050565b600080600080600060a086880312156142f257600080fd5b6142fb8661403e565b94506143096020870161403e565b93506143176040870161403e565b9250606086013567ffffffffffffffff8082111561433457600080fd5b818801915088601f83011261434857600080fd5b61435789833560208501614264565b9350608088013591508082111561436d57600080fd5b508601601f8101881361437f57600080fd5b61438e88823560208401614264565b9150509295509295909350565b600080604083850312156143ae57600080fd5b6143b78361403e565b946020939093013593505050565b60208152600061407560208301846140fa565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061440257607f821691505b60208210810361442257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161445057614450614428565b5060010190565b60008161446657614466614428565b506000190190565b602081526000614075602083018461407c565b601f82111561151657600081815260208120601f850160051c810160208610156144a85750805b601f850160051c820191505b818110156144c7578281556001016144b4565b505050505050565b815167ffffffffffffffff8111156144e9576144e961424e565b6144fd816144f784546143ee565b84614481565b602080601f831160018114614532576000841561451a5750858301515b600019600386901b1c1916600185901b1785556144c7565b600085815260208120601f198616915b8281101561456157888601518255948401946001909101908401614542565b508582101561457f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156136b3576136b3614428565b818103818111156136b3576136b361442856fe275994c3f98b40ffc33e238dface8705a449977b49eb0a027dcfa35e2a5a7bb220ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b6a2646970667358221220dcad60df8db8c2df604a4340dab69b4cd27a5465b2575bef743756d1fe1b043964736f6c63430008110033";

type RoutineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoutineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Routine__factory extends ContractFactory {
  constructor(...args: RoutineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Routine> {
    return super.deploy(overrides || {}) as Promise<Routine>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Routine {
    return super.attach(address) as Routine;
  }
  override connect(signer: Signer): Routine__factory {
    return super.connect(signer) as Routine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoutineInterface {
    return new utils.Interface(_abi) as RoutineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Routine {
    return new Contract(address, _abi, signerOrProvider) as Routine;
  }
}
