/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SbFunctionView,
  SbFunctionViewInterface,
} from "../../../src/sbFunction/SbFunctionView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimatedRunCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "funcs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "mrEnclaves",
                type: "bytes32[]",
              },
              {
                internalType: "bool",
                name: "allowAllFnCalls",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useFnCallEscrow",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionGasCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "functionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveFunctionsByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "mrEnclaves",
                type: "bytes32[]",
              },
              {
                internalType: "bool",
                name: "allowAllFnCalls",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useFnCallEscrow",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionGasCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFunctions",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "mrEnclaves",
                type: "bytes32[]",
              },
              {
                internalType: "bool",
                name: "allowAllFnCalls",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useFnCallEscrow",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionGasCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getFunctionMrEnclaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getFunctionPermittedCallers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFunctionsByAuthority",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "address",
            name: "enclaveId",
            type: "address",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "schedule",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "permittedCallers",
                type: "address[]",
              },
              {
                internalType: "string",
                name: "containerRegistry",
                type: "string",
              },
              {
                internalType: "string",
                name: "container",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string",
                name: "paramsSchema",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "mrEnclaves",
                type: "bytes32[]",
              },
              {
                internalType: "bool",
                name: "allowAllFnCalls",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useFnCallEscrow",
                type: "bool",
              },
            ],
            internalType: "struct FunctionLib.FunctionConfig",
            name: "config",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "consecutiveFailures",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nextAllowedTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastExecutionGasCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggeredSince",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerCount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queueIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggered",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct FunctionLib.FunctionState",
            name: "state",
            type: "tuple",
          },
        ],
        internalType: "struct FunctionLib.SbFunction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SbFunctionViewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionViewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunctionView__factory extends ContractFactory {
  constructor(...args: SbFunctionViewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunctionView> {
    return super.deploy(overrides || {}) as Promise<SbFunctionView>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunctionView {
    return super.attach(address) as SbFunctionView;
  }
  override connect(signer: Signer): SbFunctionView__factory {
    return super.connect(signer) as SbFunctionView__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionViewInterface {
    return new utils.Interface(_abi) as SbFunctionViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunctionView {
    return new Contract(address, _abi, signerOrProvider) as SbFunctionView;
  }
}
