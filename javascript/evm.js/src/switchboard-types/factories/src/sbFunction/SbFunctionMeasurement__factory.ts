/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SbFunctionMeasurement,
  SbFunctionMeasurementInterface,
} from "../../../src/sbFunction/SbFunctionMeasurement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "addMrEnclaveToFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mrEnclave",
        type: "bytes32",
      },
    ],
    name: "removeMrEnclaveFromFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610872806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806345fc160c1461003b578063f0184db914610050575b600080fd5b61004e610049366004610740565b610063565b005b61004e61005e366004610740565b610280565b6002600061007d6000805160206107fd8339815191525490565b9050600282600481111561009357610093610778565b1180156100ad57506100ab6100a6610416565b610443565b155b156100e4576100ba610416565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b60048260048111156100f8576100f8610778565b148015610112575061011061010b610416565b6104cd565b155b156101435761011f610416565b6040516275103f60e11b81526001600160a01b0390911660048201526024016100db565b600182600481111561015757610157610778565b14801561016357508015155b156101815760405163887efaa560e01b815260040160405180910390fd5b6001811415801561019157508015155b156101af5760405163887efaa560e01b815260040160405180910390fd5b6101d68260048111156101c4576101c4610778565b6000805160206107fd83398151915255565b6101df846104f5565b61020757604051631e1d8eb160e11b81526001600160a01b03851660048201526024016100db565b600061021285610525565b60018101549091506001600160a01b0316331461025957600181015460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016100db565b610263858561054c565b5061027a816000805160206107fd83398151915255565b50505050565b6002600061029a6000805160206107fd8339815191525490565b905060028260048111156102b0576102b0610778565b1180156102c557506102c36100a6610416565b155b156102d2576100ba610416565b60048260048111156102e6576102e6610778565b1480156102fb57506102f961010b610416565b155b156103085761011f610416565b600182600481111561031c5761031c610778565b14801561032857508015155b156103465760405163887efaa560e01b815260040160405180910390fd5b6001811415801561035657508015155b156103745760405163887efaa560e01b815260040160405180910390fd5b6103898260048111156101c4576101c4610778565b610392846104f5565b6103ba57604051631e1d8eb160e11b81526001600160a01b03851660048201526024016100db565b60006103c585610525565b60018101549091506001600160a01b0316331461040c57600181015460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016100db565b61026385856105ef565b336014361080159061043057506001600160a01b03811630145b15610440575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff16806104c757507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff165b92915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8236104a6565b6001600160a01b03908116600090815260008051602061081d833981519152602052604090206001015416151590565b6001600160a01b0316600090815260008051602061081d8339815191526020526040902090565b6001600160a01b038216600090815260008051602061081d83398151915260209081526040808320600c0180548251818502810185019093528083529093926105cc929185918301828280156105c157602002820191906000526020600020905b8154815260200190600101908083116105ad575b5050505050846106ef565b9050600081121561027a5750805460018101825560009182526020909120015550565b6001600160a01b038216600090815260008051602061081d83398151915260209081526040808320600c01805482518185028101850190935280835290939261066d929185918301828280156105c157602002820191906000526020600020908154815260200190600101908083116105ad575050505050846106ef565b9050600081131561027a5781548290610688906001906107a4565b81548110610698576106986107b7565b90600052602060002001548282815481106106b5576106b56107b7565b9060005260206000200181905550818054806106d3576106d36107cd565b6001900381819060005260206000200160009055905550505050565b6000805b8351811015610735578284828151811061070f5761070f6107b7565b6020026020010151036107235790506104c7565b8061072d816107e3565b9150506106f3565b506000199392505050565b6000806040838503121561075357600080fd5b82356001600160a01b038116811461076a57600080fd5b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156104c7576104c761078e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600182016107f5576107f561078e565b506001019056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b672050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f897a26469706673582212207cd4ed5b203914bf36cbfa0fd4b86b7b7890257919586e02fcb172ff4a6a169764736f6c63430008110033";

type SbFunctionMeasurementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SbFunctionMeasurementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SbFunctionMeasurement__factory extends ContractFactory {
  constructor(...args: SbFunctionMeasurementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SbFunctionMeasurement> {
    return super.deploy(overrides || {}) as Promise<SbFunctionMeasurement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SbFunctionMeasurement {
    return super.attach(address) as SbFunctionMeasurement;
  }
  override connect(signer: Signer): SbFunctionMeasurement__factory {
    return super.connect(signer) as SbFunctionMeasurement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SbFunctionMeasurementInterface {
    return new utils.Interface(_abi) as SbFunctionMeasurementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SbFunctionMeasurement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SbFunctionMeasurement;
  }
}
