/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FunctionSettings,
  FunctionSettingsInterface,
} from "../../../src/functionSettings/FunctionSettings";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "functionSettings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxGasCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireIsolatedRuns",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "routinesDisabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "routinesRequireAuthorization",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "routineFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requestsDisabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "requestFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requestsRequireAuthorization",
            type: "bool",
          },
        ],
        internalType: "struct FunctionSettingsLib.FunctionSettings",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxGasCost",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requireIsolatedRuns",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "routinesDisabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "routinesRequireAuthorization",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "routineFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requestsDisabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "requestFee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "requestsRequireAuthorization",
            type: "bool",
          },
        ],
        internalType: "struct FunctionSettingsLib.FunctionSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "setFunctionSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107a8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ce77efa61461003b578063feb0de8914610152575b600080fd5b61013c6100493660046105d9565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052907f0503b8716b1b24014711cddf15203884982757c4ce93b16b28e1e64985c01b0a6001600160a01b03909316600090815260209384526040908190208151610100808201845282548252600183015460ff8082161515988401989098529081048716151593820193909352620100009092048516151560608301526002810154608083015260038101548516151560a0830152600481015460c083015260050154909316151560e08401525090919050565b60405161014991906105fb565b60405180910390f35b610165610160366004610676565b610167565b005b600260006101937f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b65490565b905060028260048111156101a9576101a961075c565b1180156101c357506101c16101bc6104de565b61050b565b155b156101fa576101d06104de565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b600482600481111561020e5761020e61075c565b14801561022857506102266102216104de565b610595565b155b15610259576102356104de565b6040516275103f60e11b81526001600160a01b0390911660048201526024016101f1565b600182600481111561026d5761026d61075c565b14801561027957508015155b156102975760405163887efaa560e01b815260040160405180910390fd5b600181141580156102a757508015155b156102c55760405163887efaa560e01b815260040160405180910390fd5b6102fe8260048111156102da576102da61075c565b7f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b655565b6001600160a01b0380851660009081527f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89760205260409020600101541661036357604051631e1d8eb160e11b81526001600160a01b03851660048201526024016101f1565b6001600160a01b03841660009081527f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f8976020526040812060018101549091506001600160a01b031633146103e157600181015460405163bf89df8360e01b81526001600160a01b0390911660048201523360248201526044016101f1565b6001600160a01b03851660009081527f0503b8716b1b24014711cddf15203884982757c4ce93b16b28e1e64985c01b0a602090815260409182902086518155908601516001820180549388015160608901511515620100000262ff0000199115156101000261ff00199415159490941661ffff19909616959095179290921791909116929092179091556080850151600282015560a085015160038201805491151560ff1992831617905560c0860151600483015560e08601516005909201805492151592909116919091179055506104d8817f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b655565b50505050565b33601436108015906104f857506001600160a01b03811630145b15610508575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff168061058f57507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff165b92915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c82361056e565b80356001600160a01b03811681146105d457600080fd5b919050565b6000602082840312156105eb57600080fd5b6105f4826105bd565b9392505050565b600061010082019050825182526020830151151560208301526040830151151560408301526060830151151560608301526080830151608083015260a0830151151560a083015260c083015160c083015260e083015161065f60e084018215159052565b5092915050565b803580151581146105d457600080fd5b60008082840361012081121561068b57600080fd5b610694846105bd565b925061010080601f19830112156106aa57600080fd5b604051915080820182811067ffffffffffffffff821117156106dc57634e487b7160e01b600052604160045260246000fd5b8060405250602085013582526106f460408601610666565b602083015261070560608601610666565b604083015261071660808601610666565b606083015260a0850135608083015261073160c08601610666565b60a083015260e085013560c083015261074b818601610666565b60e083015250809150509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e4a29bffb31a67d2181662c9d2134242b9f0a971ad31c258b8bf59fa68f7ec3f64736f6c63430008110033";

type FunctionSettingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionSettingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionSettings__factory extends ContractFactory {
  constructor(...args: FunctionSettingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FunctionSettings> {
    return super.deploy(overrides || {}) as Promise<FunctionSettings>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FunctionSettings {
    return super.attach(address) as FunctionSettings;
  }
  override connect(signer: Signer): FunctionSettings__factory {
    return super.connect(signer) as FunctionSettings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionSettingsInterface {
    return new utils.Interface(_abi) as FunctionSettingsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FunctionSettings {
    return new Contract(address, _abi, signerOrProvider) as FunctionSettings;
  }
}
