/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Request, RequestInterface } from "../../../src/request/Request";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FunctionCallerNotPermitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "FunctionFeeTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
    ],
    name: "RequestAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requestId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "RequestEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RequestFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RequestWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "getActiveRequestsByQueue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "requestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startAfter",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "executedAt",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct RequestLib.Request[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
    ],
    name: "getRequestsByFunctionId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "requestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startAfter",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "executedAt",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct RequestLib.Request[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
    ],
    name: "requestFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
    ],
    name: "requests",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "functionId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "requestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "consecutiveFailures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startAfter",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "errorCode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "executedAt",
            type: "uint256",
          },
          {
            internalType: "enum FunctionLib.FunctionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct RequestLib.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
    ],
    name: "sendDelayedRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "sendRequest",
    outputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestId",
        type: "address",
      },
      {
        internalType: "address",
        name: "functionId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "sendRequestWithId",
    outputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612f9e806100206000396000f3fe60806040526004361061007b5760003560e01c806374adad1d1161004e57806374adad1d1461010657806380eb181e146101335780638985646a14610146578063b68e3ace1461016657600080fd5b8063264c14501461008057806352a061d7146100b057806355c053c3146100c557806362d3fe46146100f3575b600080fd5b61009361008e3660046129ef565b610186565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c36100be366004612a4d565b61019d565b005b3480156100d157600080fd5b506100e56100e0366004612a4d565b610469565b6040516100a7929190612baf565b610093610101366004612c50565b611622565b34801561011257600080fd5b50610126610121366004612a4d565b611641565b6040516100a79190612c9e565b6100c3610141366004612cb1565b6117b6565b34801561015257600080fd5b506100c3610161366004612d17565b611c2b565b34801561017257600080fd5b506100e5610181366004612a4d565b611eb4565b600061019584848460006117b6565b509192915050565b600260006101b7600080516020612f298339815191525490565b905060028260048111156101cd576101cd612ab5565b1180156101e757506101e56101e0612490565b6124bd565b155b1561021e576101f4612490565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b600482600481111561023257610232612ab5565b14801561024c575061024a610245612490565b612546565b155b1561027d57610259612490565b6040516275103f60e11b81526001600160a01b039091166004820152602401610215565b600182600481111561029157610291612ab5565b14801561029d57508015155b156102bb5760405163887efaa560e01b815260040160405180910390fd5b600181141580156102cb57508015155b156102e95760405163887efaa560e01b815260040160405180910390fd5b6103108260048111156102fe576102fe612ab5565b600080516020612f2983398151915255565b6103198361256e565b61034157604051630b5bc36160e01b81526001600160a01b0384166004820152602401610215565b6001600160a01b038381166000908152600080516020612f49833981519152602081905260408220549092610376911661259b565b6003810154909150600090610393906001600160a01b03166125dd565b6001600160a01b038716600090815260208590526040812060048101805460ff1916905560068101805493945090923492906103d0908490612d69565b90915550506003820154600682015411156103f957600a8101805460ff19166001179055610409565b600a8101805460ff191660041790555b805460405134815233916001600160a01b0316907f962e4657f443981d239317ca935fa436b4d8e7edd140831698a4103eb2b2122d9060200160405180910390a35050505061046481600080516020612f2983398151915255565b505050565b6060807f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f897600080516020612f498339815191526000805b6001830154811015610c375760008360010182815481106104c3576104c3612d7c565b60009182526020808320909101546001600160a01b039081168084528783526040808520815161016081018352815485168152600182015490941694840194909452600284015490830152600383018054919550919291606084019161052890612d92565b80601f016020809104026020016040519081016040528092919081815260200182805461055490612d92565b80156105a15780601f10610576576101008083540402835291602001916105a1565b820191906000526020600020905b81548152906001019060200180831161058457829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e0909301929091169081111561060d5761060d612ab5565b600681111561061e5761061e612ab5565b905250905060006001826101400151600681111561063e5761063e612ab5565b148061066057506000826101400151600681111561065e5761065e612ab5565b145b82516001600160a01b031660009081526020899052604080822081516101008101909252805493945091929091908290829061069b90612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546106c790612d92565b80156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff16600681111561077157610771612ab5565b600681111561078257610782612ab5565b815260200160068201604051806101200160405290816000820180546107a790612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390612d92565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561088257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610864575b5050505050815260200160028201805461089b90612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546108c790612d92565b80156109145780601f106108e957610100808354040283529160200191610914565b820191906000526020600020905b8154815290600101906020018083116108f757829003601f168201915b5050505050815260200160038201805461092d90612d92565b80601f016020809104026020016040519081016040528092919081815260200182805461095990612d92565b80156109a65780601f1061097b576101008083540402835291602001916109a6565b820191906000526020600020905b81548152906001019060200180831161098957829003601f168201915b505050505081526020016004820180546109bf90612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546109eb90612d92565b8015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b50505050508152602001600582018054610a5190612d92565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d90612d92565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015610b2257602002820191906000526020600020905b815481526020019060010190808311610b0e575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f87015481860152601087015493810193909352601186015460608085019190915260128701546080850152601387015460a0850152601487015460c08501526015870154909116151560e0840152601690950154908201529101528101519091506001600160a01b038c81169116148015610be457506080830151155b8015610bf45750428360e0015111155b8015610c04575060008360c00151115b8015610c0d5750815b15610c205785610c1c81612dcc565b9650505b505050508080610c2f90612dcc565b9150506104a0565b5060008167ffffffffffffffff811115610c5357610c5361294c565b604051908082528060200260200182016040528015610c7c578160200160208202803683370190505b50905060008267ffffffffffffffff811115610c9a57610c9a61294c565b604051908082528060200260200182016040528015610cd357816020015b610cc06128d7565b815260200190600190039081610cb85790505b50905060005b6001850154811015611614576000856001018281548110610cfc57610cfc612d7c565b60009182526020808320909101546001600160a01b0390811680845289835260408085208151610160810183528154851681526001820154909416948401949094526002840154908301526003830180549195509192916060840191610d6190612d92565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8d90612d92565b8015610dda5780601f10610daf57610100808354040283529160200191610dda565b820191906000526020600020905b815481529060010190602001808311610dbd57829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e09093019290911690811115610e4657610e46612ab5565b6006811115610e5757610e57612ab5565b90525080516001600160a01b0316600090815260208a90526040808220815161010081019092528054939450919290919082908290610e9590612d92565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec190612d92565b8015610f0e5780601f10610ee357610100808354040283529160200191610f0e565b820191906000526020600020905b815481529060010190602001808311610ef157829003601f168201915b505050918352505060018201546001600160a01b039081166020830152600283015481166040830152600383015416606082015260048201546080820152600582015460a09091019060ff166006811115610f6b57610f6b612ab5565b6006811115610f7c57610f7c612ab5565b81526020016006820160405180610120016040529081600082018054610fa190612d92565b80601f0160208091040260200160405190810160405280929190818152602001828054610fcd90612d92565b801561101a5780601f10610fef5761010080835404028352916020019161101a565b820191906000526020600020905b815481529060010190602001808311610ffd57829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561107c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161105e575b5050505050815260200160028201805461109590612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546110c190612d92565b801561110e5780601f106110e35761010080835404028352916020019161110e565b820191906000526020600020905b8154815290600101906020018083116110f157829003601f168201915b5050505050815260200160038201805461112790612d92565b80601f016020809104026020016040519081016040528092919081815260200182805461115390612d92565b80156111a05780601f10611175576101008083540402835291602001916111a0565b820191906000526020600020905b81548152906001019060200180831161118357829003601f168201915b505050505081526020016004820180546111b990612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546111e590612d92565b80156112325780601f1061120757610100808354040283529160200191611232565b820191906000526020600020905b81548152906001019060200180831161121557829003601f168201915b5050505050815260200160058201805461124b90612d92565b80601f016020809104026020016040519081016040528092919081815260200182805461127790612d92565b80156112c45780601f10611299576101008083540402835291602001916112c4565b820191906000526020600020905b8154815290600101906020018083116112a757829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561131c57602002820191906000526020600020905b815481526020019060010190808311611308575b50505091835250506007919091015460ff80821615156020808501919091526101009283900482161515604094850152938552825161012081018452600e8701548152600f870154818601526010870154938101939093526011860154606084015260128601546080840152601386015460a0840152601486015460c0840152601586015416151560e083015260169094015493810193909352015290506000600183610140015160068111156113d5576113d5612ab5565b14806113f75750600083610140015160068111156113f5576113f5612ab5565b145b90508c6001600160a01b031682606001516001600160a01b031614801561142057506080830151155b80156114305750428360e0015111155b8015611440575060008360c00151115b80156114495750805b156115fd576001600160a01b03808516600090815260208b81526040918290208251610160810184528154851681526001820154909416918401919091526002810154918301919091526003810180546060840191906114a890612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546114d490612d92565b80156115215780601f106114f657610100808354040283529160200191611521565b820191906000526020600020905b81548152906001019060200180831161150457829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e0909301929091169081111561158d5761158d612ab5565b600681111561159e5761159e612ab5565b905250866115ab8a612de5565b995089815181106115be576115be612d7c565b6020026020010181905250838789815181106115dc576115dc612d7c565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50505050808061160c90612dcc565b915050610cd9565b509097909650945050505050565b600061162c612605565b905061163b81848460006117b6565b92915050565b6116496128d7565b6001600160a01b038281166000908152600080516020612f498339815191526020818152604092839020835161016081018552815486168152600182015490951691850191909152600281015492840192909252600382018054919392916060840191906116b690612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546116e290612d92565b801561172f5780601f106117045761010080835404028352916020019161172f565b820191906000526020600020905b81548152906001019060200180831161171257829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e0909301929091169081111561179b5761179b612ab5565b60068111156117ac576117ac612ab5565b9052509392505050565b600260006117d0600080516020612f298339815191525490565b905060028260048111156117e6576117e6612ab5565b1180156117fb57506117f96101e0612490565b155b15611808576101f4612490565b600482600481111561181c5761181c612ab5565b148015611831575061182f610245612490565b155b1561183e57610259612490565b600182600481111561185257611852612ab5565b14801561185e57508015155b1561187c5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561188c57508015155b156118aa5760405163887efaa560e01b815260040160405180910390fd5b6118bf8260048111156102fe576102fe612ab5565b60006118c9612490565b90506118d48761256e565b156118fd57604051630b5bc36160e01b81526001600160a01b0388166004820152602401610215565b6001600160a01b0380871660009081527f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f89760205260409020600101541661196257604051631e1d8eb160e11b81526001600160a01b0387166004820152602401610215565b600061196d8761259b565b9050600061197a88612680565b60408051610100808201835283548252600184015460ff808216151560208501529181048216151593830193909352620100009092048216151560608201526002830154608082015260038301548216151560a0820152600483015460c08201526005909201541615801560e08301819052919250611a09575060018201546001600160a01b03848116911614155b15611a4057600182015460405163bf89df8360e01b81526001600160a01b0391821660048201529084166024820152604401610215565b60008160c00151118015611a5757508060c0015134105b15611a935760c081015160405163f3663dbf60e01b81526001600160a01b038a1660048201526024810191909152346044820152606401610215565b600782015415801590611b0c5750611b0a82600601600101805480602002602001604051908101604052809291908181526020018280548015611aff57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ae1575b5050505050846126a8565b155b15611b3d57604051630724d91960e31b81526001600160a01b03808a16600483015284166024820152604401610215565b611b4b8989858a348b61270d565b7fe08a3b4c6c3d2fd532698fd427d3f5b0497ef9035291d02cdb919e9e7e8df60080546001810182556000919091527f5e0658ea8212ad5d09179572133c3fddb88a0251d6dd7bded9134f0b957f803d0180546001600160a01b0319166001600160a01b038b16179055886001600160a01b0316836001600160a01b0316896001600160a01b03167fd4f3505ecc237c8a7149afa56f0224d78788a570b1f3827505fd4e2741d454ae8a604051611c029190612dfc565b60405180910390a4505050611c2381600080516020612f2983398151915255565b505050505050565b60026000611c45600080516020612f298339815191525490565b90506002826004811115611c5b57611c5b612ab5565b118015611c705750611c6e6101e0612490565b155b15611c7d576101f4612490565b6004826004811115611c9157611c91612ab5565b148015611ca65750611ca4610245612490565b155b15611cb357610259612490565b6001826004811115611cc757611cc7612ab5565b148015611cd357508015155b15611cf15760405163887efaa560e01b815260040160405180910390fd5b60018114158015611d0157508015155b15611d1f5760405163887efaa560e01b815260040160405180910390fd5b611d348260048111156102fe576102fe612ab5565b6001600160a01b0385166000908152600080516020612f4983398151915260208190526040909120600481015460ff161515600114611d895760405163d14e7c9b60e01b815260006004820152602401610215565b60018101546001600160a01b03163314611dcd57600181015460405163bf89df8360e01b81526001600160a01b039091166004820152336024820152604401610215565b8060060154851115611e0257600681015460405163cf47918160e01b8152610215918791600401918252602082015260400190565b84816006016000828254611e169190612e0f565b90915550506040516001600160a01b0387169086156108fc029087906000818181858888f19350505050158015611e51573d6000803e3d6000fd5b5080546040518681526001600160a01b038881169216907ff601bbafcf0d793cce0a8802057c8783aa5946889f76bd9dd47492217f59af1e9060200160405180910390a35050611ead81600080516020612f2983398151915255565b5050505050565b606080600080516020612f498339815191526000805b6001830154811015612085576000836001018281548110611eed57611eed612d7c565b60009182526020808320909101546001600160a01b0390811680845287835260408085208151610160810183528154851681526001820154909416948401949094526002840154908301526003830180549195509192916060840191611f5290612d92565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7e90612d92565b8015611fcb5780601f10611fa057610100808354040283529160200191611fcb565b820191906000526020600020905b815481529060010190602001808311611fae57829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e0909301929091169081111561203757612037612ab5565b600681111561204857612048612ab5565b90525080519091506001600160a01b03808a16911603612070578361206c81612dcc565b9450505b5050808061207d90612dcc565b915050611eca565b5060008167ffffffffffffffff8111156120a1576120a161294c565b6040519080825280602002602001820160405280156120ca578160200160208202803683370190505b50905060008267ffffffffffffffff8111156120e8576120e861294c565b60405190808252806020026020018201604052801561212157816020015b61210e6128d7565b8152602001906001900390816121065790505b50905060005b600185015481101561248357600085600101828154811061214a5761214a612d7c565b60009182526020808320909101546001600160a01b03908116808452898352604080852081516101608101835281548516815260018201549094169484019490945260028401549083015260038301805491955091929160608401916121af90612d92565b80601f01602080910402602001604051908101604052809291908181526020018280546121db90612d92565b80156122285780601f106121fd57610100808354040283529160200191612228565b820191906000526020600020905b81548152906001019060200180831161220b57829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e0909301929091169081111561229457612294612ab5565b60068111156122a5576122a5612ab5565b90525080519091506001600160a01b03808c1691160361246e576001600160a01b038083166000908152602089815260409182902082516101608101845281548516815260018201549094169184019190915260028101549183019190915260038101805460608401919061231990612d92565b80601f016020809104026020016040519081016040528092919081815260200182805461234590612d92565b80156123925780601f1061236757610100808354040283529160200191612392565b820191906000526020600020905b81548152906001019060200180831161237557829003601f168201915b5050509183525050600482015460ff90811615156020830152600583015460408301526006808401546060840152600784015460808401526008840154821660a0840152600984015460c0840152600a84015460e090930192909116908111156123fe576123fe612ab5565b600681111561240f5761240f612ab5565b9052508461241c88612de5565b9750878151811061242f5761242f612d7c565b60200260200101819052508185878151811061244d5761244d612d7c565b60200260200101906001600160a01b031690816001600160a01b0316815250505b5050808061247b90612dcc565b915050612127565b5090969095509350505050565b33601436108015906124aa57506001600160a01b03811630145b156124ba575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff168061163b57507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff1692915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c823612520565b6001600160a01b039081166000908152600080516020612f49833981519152602052604090205416151590565b60007f72050865ba43dca306a7c9a249316457b134cf9751dcee5ef976e9d66668f8975b6001600160a01b039092166000908152602092909252506040902090565b60007f60afd68830977364a6093883acfe9f98da214c7c3590e74cf82ad9ef006ddc3e6125bf565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b5805460009061263790612dcc565b9182905550612647600143612e0f565b40604051602001612662929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b60007f0503b8716b1b24014711cddf15203884982757c4ce93b16b28e1e64985c01b0a6125bf565b6000805b835181101561270357826001600160a01b03168482815181106126d1576126d1612d7c565b60200260200101516001600160a01b0316036126f157600191505061163b565b806126fb81612dcc565b9150506126ac565b5060009392505050565b612756868480516020918201206001600160a01b039290921660009081527f369c34b0cf6a0c0360099093f8ebb465df4755f0e75ec0446b0d3884a8735f379091526040902055565b604051806101600160405280866001600160a01b03168152602001856001600160a01b0316815260200142815260200184815260200160001515815260200160008152602001838152602001828152602001600060ff16815260200160008152602001600060068111156127cc576127cc612ab5565b9052600080516020612f498339815191526001600160a01b0380891660009081526020928352604090819020845181549084166001600160a01b031991821617825593850151600182018054919094169416939093179091558201516002820155606082015160038201906128419082612e68565b50608082015160048201805491151560ff1992831617905560a0830151600583015560c083015160068084019190915560e0840151600784015561010084015160088401805460ff929092169184169190911790556101208401516009840155610140840151600a840180549193909291169060019084908111156128c8576128c8612ab5565b02179055505050505050505050565b60408051610160810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290529061014082015290565b80356001600160a01b038116811461294757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261297357600080fd5b813567ffffffffffffffff8082111561298e5761298e61294c565b604051601f8301601f19908116603f011681019082821181831017156129b6576129b661294c565b816040528381528660208588010111156129cf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215612a0457600080fd5b612a0d84612930565b9250612a1b60208501612930565b9150604084013567ffffffffffffffff811115612a3757600080fd5b612a4386828701612962565b9150509250925092565b600060208284031215612a5f57600080fd5b612a6882612930565b9392505050565b6000815180845260005b81811015612a9557602081850181015186830182015201612a79565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b60078110612ae957634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260006101606020830151612b1960208601826001600160a01b03169052565b50604083015160408501526060830151816060860152612b3b82860182612a6f565b9150506080830151612b51608086018215159052565b5060a083015160a085015260c083015160c085015260e083015160e085015261010080840151612b858287018260ff169052565b5050610120838101519085015261014080840151612ba582870182612acb565b5090949350505050565b604080825283519082018190526000906020906060840190828701845b82811015612bf15781516001600160a01b031684529284019290840190600101612bcc565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015612c4157601f19868403018552612c2f838351612aed565b94870194925090860190600101612c13565b50909998505050505050505050565b60008060408385031215612c6357600080fd5b612c6c83612930565b9150602083013567ffffffffffffffff811115612c8857600080fd5b612c9485828601612962565b9150509250929050565b602081526000612a686020830184612aed565b60008060008060808587031215612cc757600080fd5b612cd085612930565b9350612cde60208601612930565b9250604085013567ffffffffffffffff811115612cfa57600080fd5b612d0687828801612962565b949793965093946060013593505050565b600080600060608486031215612d2c57600080fd5b612d3584612930565b9250612d4360208501612930565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561163b5761163b612d53565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680612da657607f821691505b602082108103612dc657634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201612dde57612dde612d53565b5060010190565b600081612df457612df4612d53565b506000190190565b602081526000612a686020830184612a6f565b8181038181111561163b5761163b612d53565b601f82111561046457600081815260208120601f850160051c81016020861015612e495750805b601f850160051c820191505b81811015611c2357828155600101612e55565b815167ffffffffffffffff811115612e8257612e8261294c565b612e9681612e908454612d92565b84612e22565b602080601f831160018114612ecb5760008415612eb35750858301515b600019600386901b1c1916600185901b178555611c23565b600085815260208120601f198616915b82811015612efa57888601518255948401946001909101908401612edb565b5085821015612f185787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b6e08a3b4c6c3d2fd532698fd427d3f5b0497ef9035291d02cdb919e9e7e8df5ffa2646970667358221220940fa29856387c32f5b4dca310d28006662a94ec92c1cebe2c26c63bf96b592564736f6c63430008110033";

type RequestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RequestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Request__factory extends ContractFactory {
  constructor(...args: RequestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Request> {
    return super.deploy(overrides || {}) as Promise<Request>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Request {
    return super.attach(address) as Request;
  }
  override connect(signer: Signer): Request__factory {
    return super.connect(signer) as Request__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequestInterface {
    return new utils.Interface(_abi) as RequestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Request {
    return new Contract(address, _abi, signerOrProvider) as Request;
  }
}
