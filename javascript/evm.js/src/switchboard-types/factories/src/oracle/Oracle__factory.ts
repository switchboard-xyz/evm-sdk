/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Oracle, OracleInterface } from "../../../src/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ACLNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "argumentIndex",
        type: "uint256",
      },
    ],
    name: "InvalidArgument",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedAuthority",
        type: "address",
      },
    ],
    name: "InvalidAuthority",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "receivedSigner",
        type: "address",
      },
    ],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleIdx",
        type: "uint256",
      },
    ],
    name: "OracleNotAtQueueIdx",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleNotOnQueue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "permission",
        type: "uint256",
      },
    ],
    name: "PermissionDenied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accountId",
        type: "address",
      },
    ],
    name: "OracleAccountInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
    ],
    name: "OracleGC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "OracleHeartbeat",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "OracleRotateSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "OracleSetConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "createOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "createOracleWithId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleIdx",
        type: "uint256",
      },
    ],
    name: "oracleGarbageCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "oracleHeartbeat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "numRows",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lastHeartbeat",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "queueId",
            type: "address",
          },
          {
            internalType: "address",
            name: "authority",
            type: "address",
          },
        ],
        internalType: "struct OracleLib.Oracle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "rotateOracleSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "queueId",
        type: "address",
      },
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "setOracleConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a98806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063addd50991161005b578063addd5099146100bd578063f50b5ed0146100e6578063f53b638c146100f9578063f843b8461461010c57600080fd5b806316703130146100825780634d1b776d1461009757806371da68ff146100aa575b600080fd5b610095610090366004611531565b61011f565b005b6100956100a53660046115b6565b610354565b6100956100b83660046115e9565b6104fb565b6100d06100cb366004611613565b61079e565b6040516100dd9190611635565b60405180910390f35b6100956100f4366004611531565b6108c5565b610095610107366004611613565b610ba9565b61009561011a3660046116f6565b611093565b60036000610139600080516020611a038339815191525490565b9050600282600481111561014f5761014f61176c565b11801561016957506101676101626110b5565b6110e2565b155b156101a0576101766110b5565b604051630754d25d60e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b60048260048111156101b4576101b461176c565b1480156101ce57506101cc6101c76110b5565b61116c565b155b156101ff576101db6110b5565b6040516275103f60e11b81526001600160a01b039091166004820152602401610197565b60018260048111156102135761021361176c565b14801561021f57508015155b1561023d5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561024d57508015155b1561026b5760405163887efaa560e01b815260040160405180910390fd5b6102928260048111156102805761028061176c565b600080516020611a0383398151915255565b6001600160a01b038089166000908152600080516020611a43833981519152602052604090206001015416156102e6576040516307fefd1f60e01b81526001600160a01b0389166004820152602401610197565b6102f4888888888888611194565b876001600160a01b0316856001600160a01b03167f794f588d9b82935f6086d1ac31de2c6bc6f36a758868e90e2e5583f8e21d30f360405160405180910390a361034a81600080516020611a0383398151915255565b5050505050505050565b6003600061036e600080516020611a038339815191525490565b905060028260048111156103845761038461176c565b11801561039957506103976101626110b5565b155b156103a6576101766110b5565b60048260048111156103ba576103ba61176c565b1480156103cf57506103cd6101c76110b5565b155b156103dc576101db6110b5565b60018260048111156103f0576103f061176c565b1480156103fc57508015155b1561041a5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561042a57508015155b156104485760405163887efaa560e01b815260040160405180910390fd5b61045d8260048111156102805761028061176c565b60006104688561120d565b905060006104746110b5565b60048301549091506001600160a01b038083169116146104c25760048281015460405163bf89df8360e01b81526001600160a01b039182169281019290925282166024820152604401610197565b5060010180546001600160a01b0319166001600160a01b0385161790556104f581600080516020611a0383398151915255565b50505050565b60026000610515600080516020611a038339815191525490565b9050600282600481111561052b5761052b61176c565b118015610540575061053e6101626110b5565b155b1561054d576101766110b5565b60048260048111156105615761056161176c565b14801561057657506105746101c76110b5565b155b15610583576101db6110b5565b60018260048111156105975761059761176c565b1480156105a357508015155b156105c15760405163887efaa560e01b815260040160405180910390fd5b600181141580156105d157508015155b156105ef5760405163887efaa560e01b815260040160405180910390fd5b6106048260048111156102805761028061176c565b600061060f8561120d565b600381015490915060009061062c906001600160a01b031661123d565b6001830154909150600160a01b900460ff166000036106775760038201546040516366ae958360e11b81526001600160a01b0391821660048201529087166024820152604401610197565b856001600160a01b031681600201868154811061069657610696611782565b6000918252602090912001546001600160a01b0316146106e9576003820154604051636dddf07760e01b81526001600160a01b039182166004820152908716602482015260448101869052606401610197565b60018201546001600160a01b031633148061071e575042816006015461070e8861120d565b6002015461071c91906117ae565b105b156107865760038201546040516001600160a01b03918216918816907f687acf5b3ff62e7f43ce582f87921873586d32d7e139aea211bdaaf4e6a2da7890600090a38461076c876000611253565b6003830154610784906001600160a01b03168261129b565b505b50506104f581600080516020611a0383398151915255565b6040805160c081018252606080825260006020830181905292820183905281018290526080810182905260a08101919091526107d98261120d565b6040518060c00160405290816000820180546107f4906117c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610820906117c1565b801561086d5780601f106108425761010080835404028352916020019161086d565b820191906000526020600020905b81548152906001019060200180831161085057829003601f168201915b505050918352505060018201546001600160a01b038082166020840152600160a01b90910460ff1660408301526002830154606083015260038301548116608083015260049092015490911660a09091015292915050565b600360006108df600080516020611a038339815191525490565b905060028260048111156108f5576108f561176c565b11801561090a57506109086101626110b5565b155b15610917576101766110b5565b600482600481111561092b5761092b61176c565b148015610940575061093e6101c76110b5565b155b1561094d576101db6110b5565b60018260048111156109615761096161176c565b14801561096d57508015155b1561098b5760405163887efaa560e01b815260040160405180910390fd5b6001811415801561099b57508015155b156109b95760405163887efaa560e01b815260040160405180910390fd5b6109ce8260048111156102805761028061176c565b60006109d98961120d565b6040518060c00160405290816000820180546109f4906117c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a20906117c1565b8015610a6d5780601f10610a4257610100808354040283529160200191610a6d565b820191906000526020600020905b815481529060010190602001808311610a5057829003601f168201915b505050918352505060018201546001600160a01b03808216602080850191909152600160a01b90920460ff16604084015260028401546060840152600384015481166080840152600490930154831660a090920191909152820151919250163314610b02576020810151604051637ba5ffb560e01b81526001600160a01b039091166004820152336024820152604401610197565b604081015160ff1615610b2b5760405163d14e7c9b60e01b815260016004820152602401610197565b610b39898989898989611194565b846001600160a01b0316866001600160a01b03168a6001600160a01b03167f11bfe3de42e58193667c4e9b7f777bef366bdacd598287208280816889b6d7eb8b8b89604051610b8a939291906117fb565b60405180910390a45061034a81600080516020611a0383398151915255565b60036000610bc3600080516020611a038339815191525490565b90506002826004811115610bd957610bd961176c565b118015610bee5750610bec6101626110b5565b155b15610bfb576101766110b5565b6004826004811115610c0f57610c0f61176c565b148015610c245750610c226101c76110b5565b155b15610c31576101db6110b5565b6001826004811115610c4557610c4561176c565b148015610c5157508015155b15610c6f5760405163887efaa560e01b815260040160405180910390fd5b60018114158015610c7f57508015155b15610c9d5760405163887efaa560e01b815260040160405180910390fd5b610cb28260048111156102805761028061176c565b6000610cbd8461120d565b6003810154909150600090610cda906001600160a01b031661123d565b60038301546001600160a01b031660008181527f2595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cc6020526040812092935090610d769088610d27846113cb565b6001600160a01b0392831660009081527fdc662b6192622eddc6e089aea0ceba83a6d6004cf0824f8f89d137cc0bb9622760209081526040808320949095168252929092529190205416151590565b90506000610d826110b5565b60018601549091506001600160a01b03808316911614610dce576001850154604051637ba5ffb560e01b81526001600160a01b0391821660048201529082166024820152604401610197565b600283015460ff1615610eae5782546040516302eab4ff60e31b81523091631755a7f891610e119185916001600160a01b0390911690600189019060040161183c565b60006040518083038186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506002830154610100900460ff168015610e58575081155b15610ea95760038501546001600160a01b031688610e7660006113cb565b60405163e65cb5d360e01b81526001600160a01b0393841660048201529290911660248301526044820152606401610197565b610ecc565b81610ecc5760038501546001600160a01b031688610e7660006113cb565b610efd886001600160a01b03166000908152600080516020611a438339815191526020526040902042600290910155565b6001850154600160a01b900460ff16600003610f7257610f1e886001611253565b60038501546001600160a01b039081166000908152600080516020611a23833981519152602090815260408220600201805460018101825590835291200180546001600160a01b031916918a169190911790555b6000846007015490506000856002018281548110610f9257610f92611782565b60009182526020909120015460038801546001600160a01b039182169250610fba91166113eb565b428660060154610fc98361120d565b60020154610fd791906117ae565b101561103d5760038701546040516001600160a01b03918216918316907f687acf5b3ff62e7f43ce582f87921873586d32d7e139aea211bdaaf4e6a2da7890600090a3611025816000611253565b600387015461103d906001600160a01b03168361129b565b6040516001600160a01b038b16907f15a179eca628a67b2d29c6f8d7fdb865577835cb853321115d06081171f812e290600090a25050505050505061108e81600080516020611a0383398151915255565b505050565b600061109d611451565b90506110ad81878787878761011f565b505050505050565b33601436108015906110cf57506001600160a01b03811630145b156110df575060131936013560601c5b90565b6001600160a01b03811660009081527fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c825602052604081205460ff168061116657507fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c8235b6001600160a01b0383166000908152600191909101602052604090205460ff165b92915050565b60007fec717508ea0d3d9f736b2da60dd18c1864c124710105fae8984f76b69eb3c823611145565b6001600160a01b0386166000908152600080516020611a4383398151915260205260409020806111c58688836118ff565b506001810180546001600160a01b039586166001600160a01b031991821617909155600382018054948616948216949094179093556004018054919093169116179055505050565b6000600080516020611a438339815191525b6001600160a01b039092166000908152602092909252506040902090565b6000600080516020611a2383398151915261121f565b6001600160a01b03919091166000908152600080516020611a4383398151915260205260409020600101805460ff909216600160a01b0260ff60a01b19909216919091179055565b6001600160a01b0382166000908152600080516020611a238339815191526020819052604082206002810154919290916112d7906001906119c0565b90508160020181815481106112ee576112ee611782565b6000918252602090912001546002830180546001600160a01b03909216918690811061131c5761131c611782565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160020180548061135d5761135d6119d3565b600082815260209020810160001990810180546001600160a01b0319169055019055600282015460078301541061139557600061139b565b81600701545b600783015560028201546008830154106113b65760006113bc565b81600801545b82600801819055505050505050565b6000808260028111156113e0576113e061176c565b6001901b9392505050565b6001600160a01b0381166000908152600080516020611a238339815191526020819052604082206007810180549293919291611426836119e9565b90915550506002810154600782015410611441576000611447565b80600701545b6007909101555050565b6000807f20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b58054600090611483906119e9565b91829055506114936001436119c0565b406040516020016114ae929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b80356001600160a01b03811681146114e357600080fd5b919050565b60008083601f8401126114fa57600080fd5b50813567ffffffffffffffff81111561151257600080fd5b60208301915083602082850101111561152a57600080fd5b9250929050565b60008060008060008060a0878903121561154a57600080fd5b611553876114cc565b9550602087013567ffffffffffffffff81111561156f57600080fd5b61157b89828a016114e8565b909650945061158e9050604088016114cc565b925061159c606088016114cc565b91506115aa608088016114cc565b90509295509295509295565b600080604083850312156115c957600080fd5b6115d2836114cc565b91506115e0602084016114cc565b90509250929050565b600080604083850312156115fc57600080fd5b611605836114cc565b946020939093013593505050565b60006020828403121561162557600080fd5b61162e826114cc565b9392505050565b60006020808352835160c08285015280518060e086015260005b8181101561166c578281018401518682016101000152830161164f565b506101009150600082828701015282860151925061169560408601846001600160a01b03169052565b604086015160ff81166060870152925060608601516080860152608086015192506116cb60a08601846001600160a01b03169052565b60a08601516001600160a01b03811660c08701529250601f01601f1916939093019092019392505050565b60008060008060006080868803121561170e57600080fd5b853567ffffffffffffffff81111561172557600080fd5b611731888289016114e8565b90965094506117449050602087016114cc565b9250611752604087016114cc565b9150611760606087016114cc565b90509295509295909350565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561116657611166611798565b600181811c908216806117d557607f821691505b6020821081036117f557634e487b7160e01b600052602260045260246000fd5b50919050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6001600160a01b03848116825283166020808301919091526060604083018190528354908301819052600084815282812090929091608085019190845b8181101561189557845484526001948501949383019301611879565b509198975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f82111561108e57600081815260208120601f850160051c810160208610156118e05750805b601f850160051c820191505b818110156110ad578281556001016118ec565b67ffffffffffffffff831115611917576119176118a3565b61192b8361192583546117c1565b836118b9565b6000601f84116001811461195f57600085156119475750838201355b600019600387901b1c1916600186901b1783556119b9565b600083815260209020601f19861690835b828110156119905786850135825560209485019460019092019101611970565b50868210156119ad5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8181038181111561116657611166611798565b634e487b7160e01b600052603160045260246000fd5b6000600182016119fb576119fb611798565b506001019056fe20ced3562caba8901b8e6c0f45f2eefc88fe6f62c9647c3abea04219d18063b62595278b5418f83c9fa36a8f4776a43941e2fee2d557036ff22ad4d7597c28cbd5e768d90a086ea7b33932448c5752ff84f596734910969a9da74dd838b9b975a2646970667358221220b0087af9371ccc7e743ac1665ab82493552348a9be5cf53d36a005adf8444d4b64736f6c63430008110033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oracle> {
    return super.deploy(overrides || {}) as Promise<Oracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  override connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
