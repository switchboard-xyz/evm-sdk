/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Receiver,
  ReceiverInterface,
} from "../../../src/Receiver/Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "feedId",
        type: "address",
      },
    ],
    name: "FeedUninitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectInputLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
      {
        internalType: "address",
        name: "received",
        type: "address",
      },
    ],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_feedNames",
        type: "bytes32[]",
      },
      {
        internalType: "int256[]",
        name: "values",
        type: "int256[]",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "callback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feedId",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "deployFeedAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_feedNames",
        type: "bytes32[]",
      },
    ],
    name: "failureCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feedNames",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feedName",
        type: "bytes32",
      },
    ],
    name: "feeds",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feedId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "feedName",
            type: "bytes32",
          },
          {
            internalType: "uint80",
            name: "latestIntervalId",
            type: "uint80",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
              },
            ],
            internalType: "struct ReceiverLib.Result",
            name: "latestResult",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "historyEnabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "latestResultFailed",
            type: "bool",
          },
        ],
        internalType: "struct ReceiverLib.Feed",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFeeds",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feedId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "feedName",
            type: "bytes32",
          },
          {
            internalType: "uint80",
            name: "latestIntervalId",
            type: "uint80",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
              },
            ],
            internalType: "struct ReceiverLib.Result",
            name: "latestResult",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "historyEnabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "latestResultFailed",
            type: "bool",
          },
        ],
        internalType: "struct ReceiverLib.Feed[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feedId",
        type: "address",
      },
    ],
    name: "getLatestResult",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "intervalId",
        type: "uint80",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feedName",
        type: "bytes32",
      },
      {
        internalType: "uint80",
        name: "intervalId",
        type: "uint80",
      },
    ],
    name: "results",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ReceiverLib.Result",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Receiver__factory extends ContractFactory {
  constructor(...args: ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Receiver> {
    return super.deploy(overrides || {}) as Promise<Receiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Receiver {
    return super.attach(address) as Receiver;
  }
  override connect(signer: Signer): Receiver__factory {
    return super.connect(signer) as Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverInterface {
    return new utils.Interface(_abi) as ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Receiver {
    return new Contract(address, _abi, signerOrProvider) as Receiver;
  }
}
